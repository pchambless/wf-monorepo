/**
 * Display Configuration for {{entityName}}
 * Generated from: {{schemaSource}}
 * Generated on: {{generationTimestamp}}
 */

// ðŸ¤– AUTO-GENERATED ZONE - Safe to regenerate
// This section will be automatically updated when entity schemas change
// Do not modify this section directly - changes will be overwritten

/**
 * Auto-generated display configuration for {{entityName}}
 * Generated from: {{schemaSource}}
 * Generated on: {{generationTimestamp}}
 */
export const display = {
  // Entity metadata
  entityName: '{{entityName}}',
  tableName: '{{tableName}}',
  primaryKey: '{{primaryKey}}',
  
  // Grid configuration
  grid: {
    columns: [
      {{#each fields}}
      {
        field: '{{name}}',
        headerName: '{{titleCase name}}',
        type: '{{uiType}}',
        width: {{getDefaultWidth uiType}}{{#if (includes validationRules "required")}},
        required: true{{/if}}{{#if (eq uiType "datetime")}},
        valueFormatter: (params) => params.value ? new Date(params.value).toLocaleDateString() : ''{{/if}}{{#if (eq uiType "currency")}},
        valueFormatter: (params) => params.value ? `$${parseFloat(params.value).toFixed(2)}` : ''{{/if}}
      }{{#unless @last}},{{/unless}}
      {{/each}}
    ]
  },
  
  // Form configuration
  form: {
    sections: [
      {
        title: 'Basic Information',
        fields: [
          {{#each fields}}
          {
            name: '{{name}}',
            label: '{{titleCase name}}',
            type: '{{uiType}}'{{#if (includes validationRules "required")}},
            required: true{{/if}}{{#if (eq uiType "select")}},
            options: []{{/if}}
          }{{#unless @last}},{{/unless}}
          {{/each}}
        ]
      }
    ]
  },
  
  // Actions - conditionally generated based on supported operations
  actions: {
    {{#if supportedOperations.create}}
    create: { enabled: true, label: 'Add {{titleCase entityName}}' }{{#if supportedOperations.read}},{{/if}}
    {{/if}}
    {{#if supportedOperations.read}}
    view: { enabled: true, label: 'View' }{{#if supportedOperations.update}},{{/if}}
    {{/if}}
    {{#if supportedOperations.update}}
    edit: { enabled: true, label: 'Edit' }{{#if supportedOperations.delete}},{{/if}}
    {{/if}}
    {{#if supportedOperations.delete}}
    delete: { enabled: true, label: 'Delete' }
    {{/if}}
  }
};

// ðŸ¤– END AUTO-GENERATED ZONE

// âœ‹ MANUAL CUSTOMIZATION ZONE - Never overwrite
// Add your custom display configurations here

export const customDisplay = {
  // Add custom grid columns
  customColumns: [
    // Example:
    // {
    //   field: 'custom_action',
    //   headerName: 'Actions',
    //   cellRenderer: 'customActionRenderer',
    //   width: 120,
    //   pinned: 'right'
    // }
  ],
  
  // Add custom form sections
  customSections: [
    // Example:
    // {
    //   title: 'Custom Section',
    //   key: 'custom',
    //   fields: []
    // }
  ],
  
  // Add custom field overrides
  fieldOverrides: {
    // Example:
    // field_name: {
    //   customProperty: 'value'
    // }
  }
};

// âœ‹ END MANUAL CUSTOMIZATION ZONE

// Export combined display configuration
export default {
  ...display,
  grid: {
    ...display.grid,
    columns: [...display.grid.columns, ...customDisplay.customColumns]
  },
  form: {
    ...display.form,
    sections: [...display.form.sections, ...customDisplay.customSections]
  },
  fields: {
    ...display.fields,
    ...customDisplay.fieldOverrides
  }
};