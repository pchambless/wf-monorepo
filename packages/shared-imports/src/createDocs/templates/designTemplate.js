/**
 * Design Document Template
 * Generates formatted design specification documents
 */

/**
 * Generate design document content
 * @param {Object} params - Template parameters
 * @returns {string} Formatted design document
 */
export function designTemplate(params) {
  const { planId, docID, content, agent = "Kiro", ...options } = params;
  const currentDate = new Date().toISOString().split("T")[0];

  return `# Design Specification
**DocID**: ${
    docID || planId
  } | **Created**: ${currentDate} | **Agent**: ${agent}

## Design Overview
${content}

## Architecture
${options.architecture || "[System architecture to be documented]"}

## Components
${options.components || "[System components to be defined]"}

## Data Models
${options.dataModels || "[Data models to be specified]"}

## API Design
${options.apiDesign || "[API design to be documented]"}

## User Interface Design
${options.uiDesign || "[UI design specifications to be provided]"}

## Security Design
${options.securityDesign || "[Security design considerations to be addressed]"}

## Performance Design
${
  options.performanceDesign ||
  "[Performance design requirements to be specified]"
}

---
*This design specification was generated by ${agent} for Plan ${planId} implementation.*`;
}

export default designTemplate;
