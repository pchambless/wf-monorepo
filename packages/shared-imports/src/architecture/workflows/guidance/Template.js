/**
 * Guidance Document Template
 * Generates formatted implementation guidance documents
 * Colocated with guidance workflow for ADHD-friendly organization
 */

/**
 * Generate guidance document content
 * @param {Object} params - Template parameters
 * @returns {string} Formatted guidance document
 */
export function guidanceTemplate(params) {
  const {
    planId,
    docID,
    topic,
    content,
    agent = "Claude",
    ...options
  } = params;
  const currentDate = new Date().toISOString().split("T")[0];

  return `# Implementation Guidance: ${topic}
**DocID**: ${
    docID || planId
  } | **Created**: ${currentDate} | **Agent**: ${agent}

## Implementation Overview
${content}

## Core Requirements
${options.requirements || "[Core requirements to be documented]"}

## Implementation Steps
${options.steps || "[Implementation steps to be provided]"}

## Integration Points
${options.integrationPoints || "[Integration points to be identified]"}

## Testing Strategy
${options.testing || "[Testing strategy to be defined]"}

## Security Considerations
${options.security || "[Security considerations to be addressed]"}

## Performance Considerations
${options.performance || "[Performance considerations to be evaluated]"}

## Deployment Checklist
${options.deployment || "[Deployment checklist to be created]"}

---
*This guidance was generated by ${agent} to support Plan ${planId} implementation.*`;
}

export default guidanceTemplate;
