server/app.js:const express = require('express');
server/app.js:const morgan = require('morgan');
server/app.js:const cors = require('cors');
server/app.js:const dotenv = require('dotenv');
server/app.js:const path = require('path');
server/app.js:} = require('./middleware/security');
server/app.js:const errorHandler = require('./middleware/errorHandler');
server/app.js:const logger = require('./utils/logger');
server/app.js:const userLogin = require('./controller/userLogin'); // Import the userLogin controller
server/app.js:const execEventType = require('./controller/execEventType');
server/controller/execEventType.js:require('module-alias/register');
server/controller/execEventType.js:const { createRequestBody } = require('@utils/queryResolver');
server/controller/execEventType.js:const { executeQuery } = require('@utils/dbUtils');
server/controller/execEventType.js:const logger = require('@utils/logger');
server/controller/execEventType.js:const { EVENT_TYPES, getEventType } = require('@whatsfresh/shared-events');
server/controller/fetchApiColumns.js:require('module-alias/register');
server/controller/fetchApiColumns.js:const fs = require('fs').promises;
server/controller/fetchApiColumns.js:const path = require('path');
server/controller/fetchApiColumns.js:const { executeQuery } = require('@utils/dbUtils'); // Assuming executeQuery is a function to run SQL queries
server/controller/fetchApiColumns.js:const logger = require('@utils/logger');
server/controller/fetchEventTypes.js:require('module-alias/register');
server/controller/fetchEventTypes.js:const { EVENT_TYPES } = require('@whatsfresh/shared-events');
server/controller/fetchEventTypes.js:const logger = require('@utils/logger');
server/controller/Initialize.js:require('module-alias/register');
server/controller/listRegisteredRoutes.js:require('module-alias/register');
server/controller/restartServer.js:require('module-alias/register');
server/controller/restartServer.js:const { exec } = require('child_process');
server/controller/restartServer.js:const logger = require('@utils/logger');
server/controller/userLogin.js:const bcrypt = require('bcrypt');
server/controller/userLogin.js:const { createRequestBody } = require('@utils/queryResolver');
server/controller/userLogin.js:const { executeQuery } = require('@utils/dbUtils');
server/controller/userLogin.js:const logger = require('@utils/logger');
server/controller/userLogin.js:const { getEventType } = require('@whatsfresh/shared-events');
server/middleware/security.js:const rateLimit = require('express-rate-limit');
server/middleware/security.js:const helmet = require('helmet');
server/routes/index.js:require('module-alias/register');
server/routes/index.js:const logger = require('@utils/logger');
server/routes/index.js:const router = require('@routes/registerRoutes');
server/routes/registerRoutes.js:require('module-alias/register');
server/routes/registerRoutes.js:const express = require('express');
server/routes/registerRoutes.js:const execEventType = require('@controller/execEventType');
server/routes/registerRoutes.js:const initializeController = require('@controller/initialize');
server/routes/registerRoutes.js:const listRoutesController = require('@controller/listRegisteredRoutes');
server/routes/registerRoutes.js:const restartServerController = require('@controller/restartServer');
server/routes/registerRoutes.js:const { fetchEventTypes } = require('@controller/fetchEventTypes');
server/routes/registerRoutes.js:const userLogin = require('@controller/userLogin'); // Import userLogin controller
server/routes/registerRoutes.js:const eventTypeManager = require('@utils/eventTypeManager');
server/routes/registerRoutes.js:const logger = require('@utils/logger');
server/server.js:require('module-alias/register');
server/server.js:require('dotenv').config();
server/server.js:const { app } = require('./app');
server/server.js:const logger = require('@utils/logger');
server/server.js:const initializeRoutes = require('@routes/index');
server/server.js:const { genApiColumnFile } = require('@controller/fetchApiColumns');
server/server.js:const dbManager = require('./utils/dbManager');
server/utils/db.js:const mysql = require('mysql2/promise');
server/utils/db.js:const { host, user, password, database, port, charset } = require('./dbConfig');
server/utils/dbManager.js:const logger = require('./logger');
server/utils/dbManager.js:const { createPool, getConfig } = require('@whatsfresh/db-connect');
server/utils/dbUtils.js:require('module-alias/register');
server/utils/dbUtils.js:const logger = require('./logger');
server/utils/dbUtils.js:const { createPool } = require('@whatsfresh/db-connect');
server/utils/eventTypeManager.js:const { EVENT_TYPES, getEventType } = require('@whatsfresh/shared-events');
server/utils/eventTypeManager.js:const logger = require('./logger');
server/utils/logger.js:const winston = require('winston');
server/utils/logger.js:require('winston-daily-rotate-file');
server/utils/logger.js:const path = require('path');
server/utils/queryResolver.js:const logger = require('./logger');
