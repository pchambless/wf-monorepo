{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-22 06:40:42"}
{"level":"info","message":"Log file rotated","newFilename":"/home/paul/wf-monorepo-new/apps/server/server/logs/application-2025-10-22.log","oldFilename":"/home/paul/wf-monorepo-new/apps/server/server/logs/application-2025-10-21.log","timestamp":"2025-10-22 06:40:42"}
{"body":{"values":{"0":{"paramName":"appID","paramVal":"51"},"1":{"paramName":"appName","paramVal":"admin"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-22 07:38:03"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-22 07:38:03"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:03"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:03"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:03"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":506.715571,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:03"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:03"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:03"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:03"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":202.884144,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:04"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:04"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 07:38:04"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 07:38:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":307.047275,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 07:38:04"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:04"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 07:38:04"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 07:38:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":408.424011,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 07:38:04"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:04"}
{"level":"debug","message":"[setVals.js] Set 2 values for pc7900@gmail.com","timestamp":"2025-10-22 07:38:04"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (1429ms)","timestamp":"2025-10-22 07:38:04"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1429.2510889999999,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-22 07:38:04"}
{"body":{"eventSQLId":"pageList","params":{"appID":"51"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 07:38:04"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 07:38:04"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: pageList","timestamp":"2025-10-22 07:38:04"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:04"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:04"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":132.433419,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:05"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: pageList (ID: 2)","timestamp":"2025-10-22 07:38:05"}
{"level":"debug","message":"[execEventType.js] Using passed param :appID → 51...","timestamp":"2025-10-22 07:38:05"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 51\r\nAND   comp_type in ('Page','CRUD')","timestamp":"2025-10-22 07:38:05"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:05"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:05"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":269.31398,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:05"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: pageList (ID: 2)","timestamp":"2025-10-22 07:38:05"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (403ms)","timestamp":"2025-10-22 07:38:05"}
{"body":{"values":{"0":{"paramName":"pageID","paramVal":"64"},"1":{"paramName":"pageName","paramVal":"{pageName}"},"2":{"paramName":"xrefID","paramVal":"64"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-22 07:38:06"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-22 07:38:06"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:06"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:06"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:06"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":158.957389,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:06"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:06"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:06"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:06"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:06"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":97.45835,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:06"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:06"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 07:38:06"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 07:38:06"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":499.593834,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 07:38:07"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:07"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 07:38:07"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 07:38:07"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":832.529113,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 07:38:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:08"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 07:38:08"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 07:38:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":412.621783,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 07:38:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:08"}
{"level":"debug","message":"[setVals.js] Set 3 values for pc7900@gmail.com","timestamp":"2025-10-22 07:38:08"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (2004ms)","timestamp":"2025-10-22 07:38:08"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2004.139237,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-22 07:38:08"}
{"body":{"eventSQLId":"xrefHierarchy","params":{"xrefID":"64"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 07:38:08"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 07:38:08"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefHierarchy","timestamp":"2025-10-22 07:38:08"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:08"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:08"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":83.911998,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:08"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefHierarchy (ID: 3)","timestamp":"2025-10-22 07:38:08"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-22 07:38:08"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_structure(64)","timestamp":"2025-10-22 07:38:08"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:08"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:08"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-22 07:38:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":193.608288,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:09"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefHierarchy (ID: 3)","timestamp":"2025-10-22 07:38:09"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (279ms)","timestamp":"2025-10-22 07:38:09"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":51}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 07:38:09"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":196.602427,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 51...","timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 51 \r\nAND active = 1","timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 07:38:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":204.432641,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:09"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 07:38:09"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (403ms)","timestamp":"2025-10-22 07:38:09"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":51}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 07:38:09"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":69.089193,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 51...","timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 51\r\nORDER BY class, ordr","timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":125.863885,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:09"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 07:38:09"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (197ms)","timestamp":"2025-10-22 07:38:09"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 07:38:09"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":96.640639,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 64 \r\nAND active = 1","timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-22 07:38:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":202.550619,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:09"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 07:38:09"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (301ms)","timestamp":"2025-10-22 07:38:09"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 07:38:09"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:09"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":97.780474,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 64\r\nORDER BY class, ordr","timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":204.815206,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:10"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 07:38:10"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (304ms)","timestamp":"2025-10-22 07:38:10"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":65}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 07:38:10"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":92.245472,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 65...","timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 65 \r\nAND active = 1","timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-22 07:38:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":150.093712,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:10"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 07:38:10"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (244ms)","timestamp":"2025-10-22 07:38:10"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":65}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 07:38:10"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":148.336702,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 65...","timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 65\r\nORDER BY class, ordr","timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-22 07:38:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":203.84891,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:10"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 07:38:10"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (354ms)","timestamp":"2025-10-22 07:38:10"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":66}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 07:38:10"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":47.067025,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 66...","timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 66 \r\nAND active = 1","timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":242.560445,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:11"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 07:38:11"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (291ms)","timestamp":"2025-10-22 07:38:11"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":66}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 07:38:11"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":84.07154,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 66...","timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 66\r\nORDER BY class, ordr","timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 07:38:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":77.800991,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:11"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 07:38:11"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (164ms)","timestamp":"2025-10-22 07:38:11"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 07:38:11"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":184.140615,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 67 \r\nAND active = 1","timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 07:38:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":266.369248,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:11"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 07:38:11"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (452ms)","timestamp":"2025-10-22 07:38:11"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 07:38:11"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":51.192051,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 67\r\nORDER BY class, ordr","timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 07:38:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":93.826994,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:11"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 07:38:11"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (146ms)","timestamp":"2025-10-22 07:38:11"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":68}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 07:38:11"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":144.912994,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:12"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 07:38:12"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 68...","timestamp":"2025-10-22 07:38:12"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 68 \r\nAND active = 1","timestamp":"2025-10-22 07:38:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-22 07:38:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":203.953211,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 07:38:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:12"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 07:38:12"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (350ms)","timestamp":"2025-10-22 07:38:12"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":68}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 07:38:12"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 07:38:12"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 07:38:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":101.455456,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:12"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 07:38:12"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 68...","timestamp":"2025-10-22 07:38:12"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 68\r\nORDER BY class, ordr","timestamp":"2025-10-22 07:38:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":198.392787,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:12"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 07:38:12"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (301ms)","timestamp":"2025-10-22 07:38:12"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":69}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 07:38:12"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 07:38:12"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 07:38:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":94.484136,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:12"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 07:38:12"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 69...","timestamp":"2025-10-22 07:38:12"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 69 \r\nAND active = 1","timestamp":"2025-10-22 07:38:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-22 07:38:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":204.237492,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-22 07:38:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:12"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 07:38:12"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (301ms)","timestamp":"2025-10-22 07:38:12"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":69}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 07:38:12"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 07:38:12"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 07:38:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":96.133698,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:13"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 07:38:13"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 69...","timestamp":"2025-10-22 07:38:13"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 69\r\nORDER BY class, ordr","timestamp":"2025-10-22 07:38:13"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:13"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 07:38:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":159.446848,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 07:38:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:13"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 07:38:13"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (257ms)","timestamp":"2025-10-22 07:38:13"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-22 07:38:20"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-22 07:38:20"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-22 07:38:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-22 07:38:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":242.109698,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-22 07:38:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:20"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-22 07:38:20"}
{"level":"info","message":"[getEventTypes.js] Fetched 19 eventTypes","timestamp":"2025-10-22 07:38:20"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 200 (244ms)","timestamp":"2025-10-22 07:38:20"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-22 07:38:20"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-22 07:38:20"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-22 07:38:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:20"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 07:38:20"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 07:38:20"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-22 07:38:20"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 07:38:20"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 07:38:20"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-22 07:38:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-22 07:38:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":79.058833,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-22 07:38:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:20"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-22 07:38:20"}
{"level":"info","message":"[getEventTypes.js] Fetched 19 eventTypes","timestamp":"2025-10-22 07:38:20"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (81ms)","timestamp":"2025-10-22 07:38:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:21"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:21"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:21"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:21"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:21"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":555.968069,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:21"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:21"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-22 07:38:21"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-22 07:38:21"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:21"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:21"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:21"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":551.103707,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:21"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:21"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-22 07:38:21"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-22 07:38:21"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:21"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:21"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-22 07:38:21"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":115.892773,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-22 07:38:21"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:21"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-22 07:38:21"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (673ms)","timestamp":"2025-10-22 07:38:21"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":673.251848,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-22 07:38:21"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-22 07:38:21"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":116.163439,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-22 07:38:21"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:21"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-22 07:38:21"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (668ms)","timestamp":"2025-10-22 07:38:21"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":668.441954,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-22 07:38:21"}
{"body":{"values":{"0":{"paramName":"selectedID","paramVal":16}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-22 07:38:24"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-22 07:38:24"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:24"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:24"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:24"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":185.867036,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:24"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:24"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:24"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:24"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:24"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":309.037137,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:24"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:24"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 07:38:24"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 07:38:24"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":577.100787,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 07:38:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:25"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-22 07:38:25"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (1074ms)","timestamp":"2025-10-22 07:38:25"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1073.886782,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-22 07:38:25"}
{"body":{"eventSQLId":"{pageName}Dtl","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 07:38:25"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 07:38:25"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}Dtl","timestamp":"2025-10-22 07:38:25"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:25"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:25"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:25"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":83.527281,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:25"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}Dtl (ID: 23)","timestamp":"2025-10-22 07:38:25"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:25"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:25"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:25"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":74.3344,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:25"}
{"level":"debug","message":"[execEventType.js] Resolved from context :selectedID → 16","timestamp":"2025-10-22 07:38:25"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select \r\n\tid, \r\n\tname,\r\n\tdescription,\r\n\taccount_id\r\nfrom whatsfresh.ingredient_types\r\nwhere id = 16","timestamp":"2025-10-22 07:38:25"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:25"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:25"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:25"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":138.938874,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:25"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}Dtl (ID: 23)","timestamp":"2025-10-22 07:38:25"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (298ms)","timestamp":"2025-10-22 07:38:25"}
{"body":{"values":{"0":{"paramName":"selectedID","paramVal":23}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-22 07:38:28"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-22 07:38:28"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:28"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:28"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":64.942725,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:28"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:28"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:28"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":246.152864,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:28"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 07:38:28"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 07:38:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":331.302777,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 07:38:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:28"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-22 07:38:28"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (644ms)","timestamp":"2025-10-22 07:38:28"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":643.901395,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-22 07:38:28"}
{"body":{"eventSQLId":"{pageName}Dtl","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 07:38:28"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 07:38:28"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}Dtl","timestamp":"2025-10-22 07:38:28"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:28"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:28"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":48.917354,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:29"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:29"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}Dtl (ID: 23)","timestamp":"2025-10-22 07:38:29"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:29"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:29"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":144.239726,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:29"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:29"}
{"level":"debug","message":"[execEventType.js] Resolved from context :selectedID → 23","timestamp":"2025-10-22 07:38:29"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select \r\n\tid, \r\n\tname,\r\n\tdescription,\r\n\taccount_id\r\nfrom whatsfresh.ingredient_types\r\nwhere id = 23","timestamp":"2025-10-22 07:38:29"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:38:29"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:38:29"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:38:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":104.310836,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:38:29"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:38:29"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}Dtl (ID: 23)","timestamp":"2025-10-22 07:38:29"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (299ms)","timestamp":"2025-10-22 07:38:29"}
{"body":{"values":{"0":{"paramName":"xrefID","paramVal":67}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-22 07:41:07"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-22 07:41:07"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:41:07"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:41:07"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:41:07"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":71.239779,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:41:07"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:41:07"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:41:07"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:41:07"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:41:07"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":194.688314,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:41:07"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:41:07"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 07:41:07"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 07:41:07"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":149.818042,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 07:41:07"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:41:07"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-22 07:41:07"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (420ms)","timestamp":"2025-10-22 07:41:07"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 07:41:07"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 07:41:07"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 07:41:07"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:41:07"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:41:07"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 07:41:07"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 07:41:07"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 07:41:07"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:41:07"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:41:07"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:41:07"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.15974,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:41:07"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:41:07"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 07:41:07"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-22 07:41:07"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 67\r\nORDER BY class, ordr","timestamp":"2025-10-22 07:41:07"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:41:07"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:41:07"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:41:07"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":74.453669,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:41:07"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:41:07"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 07:41:07"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-22 07:41:07"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 67 \r\nAND active = 1","timestamp":"2025-10-22 07:41:07"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:41:07"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:41:07"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 07:41:07"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.967879,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 07:41:07"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:41:07"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 07:41:07"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (112ms)","timestamp":"2025-10-22 07:41:07"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 07:41:07"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":75.589802,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 07:41:07"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:41:07"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 07:41:07"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (111ms)","timestamp":"2025-10-22 07:41:07"}
{"body":{"eventSQLId":"getEventSQL","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 07:41:16"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 07:41:16"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: getEventSQL","timestamp":"2025-10-22 07:41:16"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:41:16"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:41:16"}
{"body":{"eventSQLId":"getEventSQL","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 07:41:16"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 07:41:16"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: getEventSQL","timestamp":"2025-10-22 07:41:16"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:41:16"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:41:16"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:41:17"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":283.609339,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:41:17"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:41:17"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: getEventSQL (ID: 13)","timestamp":"2025-10-22 07:41:17"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-22 07:41:17"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name, comp_type, qryName, qrySQL\r\n     FROM api_wf.vw_eventSQL\r\n     WHERE xref_id = 67","timestamp":"2025-10-22 07:41:17"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:41:17"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:41:17"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:41:17"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":282.965237,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:41:17"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:41:17"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: getEventSQL (ID: 13)","timestamp":"2025-10-22 07:41:17"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-22 07:41:17"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name, comp_type, qryName, qrySQL\r\n     FROM api_wf.vw_eventSQL\r\n     WHERE xref_id = 67","timestamp":"2025-10-22 07:41:17"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 07:41:17"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 07:41:17"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:41:17"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":205.193394,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:41:17"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:41:17"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: getEventSQL (ID: 13)","timestamp":"2025-10-22 07:41:17"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (491ms)","timestamp":"2025-10-22 07:41:17"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 07:41:17"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":209.669111,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 07:41:17"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 07:41:17"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: getEventSQL (ID: 13)","timestamp":"2025-10-22 07:41:17"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (497ms)","timestamp":"2025-10-22 07:41:17"}
{"body":{"customSQL":"SELECT comp_name, class, action, content FROM api_wf.vw_eventTrigger WHERE comp_name LIKE \"%Grid\" LIMIT 10","eventSQLId":0},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 07:52:01"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 07:52:01"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 400 (1ms)","timestamp":"2025-10-22 07:52:01"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.746607,"method":"POST","operation":"http_request","path":"/api/execEventType","status":400},"timestamp":"2025-10-22 07:52:01"}
{"body":{"data":{"eventType":"ingrType"},"method":"SELECT","table":"api_wf.eventType_xref"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-22 07:52:14"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-22 07:52:14"}
{"data":{"eventType":"ingrType"},"level":"debug","message":"[dmlProcessor.js] Processing SELECT on api_wf.eventType_xref","timestamp":"2025-10-22 07:52:14"}
{"code":"INVALID_METHOD","level":"error","message":"[execDML.js] DML operation failed: Method must be INSERT, UPDATE, or DELETE. Got: SELECT","stack":"Error: Method must be INSERT, UPDATE, or DELETE. Got: SELECT\n    at processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:50:19)\n    at execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:30)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:157:13)\n    at Route.dispatch (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:117:3)\n    at handle (/home/paul/wf-monorepo-new/node_modules/router/index.js:435:11)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at /home/paul/wf-monorepo-new/node_modules/router/index.js:295:15\n    at processParams (/home/paul/wf-monorepo-new/node_modules/router/index.js:582:12)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/index.js:291:5)","status":400,"timestamp":"2025-10-22 07:52:14"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 400 (2ms)","timestamp":"2025-10-22 07:52:14"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.774947,"method":"POST","operation":"http_request","path":"/api/execDML","status":400},"timestamp":"2025-10-22 07:52:14"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-22 07:55:42"}
{"body":{"eventSQLId":"getEventSQL","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:07:21"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:07:21"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: getEventSQL","timestamp":"2025-10-22 08:07:21"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:07:21"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:07:21"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:07:22"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":1657.240841,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:07:22"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:07:22"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: getEventSQL (ID: 13)","timestamp":"2025-10-22 08:07:22"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-22 08:07:22"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name, comp_type, qryName, qrySQL\r\n     FROM api_wf.vw_eventSQL\r\n     WHERE xref_id = 67","timestamp":"2025-10-22 08:07:22"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:07:22"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:07:22"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:07:25"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":2175.838914,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:07:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:07:25"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: getEventSQL (ID: 13)","timestamp":"2025-10-22 08:07:25"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (3835ms)","timestamp":"2025-10-22 08:07:25"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":3835.258028,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-22 08:07:25"}
{"body":{"eventSQLId":"getEventSQL","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:07:38"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:07:38"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: getEventSQL","timestamp":"2025-10-22 08:07:38"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:07:38"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:07:38"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:07:38"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":186.947964,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:07:38"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:07:38"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: getEventSQL (ID: 13)","timestamp":"2025-10-22 08:07:38"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-22 08:07:38"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name, comp_type, qryName, qrySQL\r\n     FROM api_wf.vw_eventSQL\r\n     WHERE xref_id = 67","timestamp":"2025-10-22 08:07:38"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:07:38"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:07:38"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:07:38"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":70.259639,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:07:38"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:07:38"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: getEventSQL (ID: 13)","timestamp":"2025-10-22 08:07:38"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (259ms)","timestamp":"2025-10-22 08:07:38"}
{"body":{"eventSQLId":"getEventSQL","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:07:48"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:07:48"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: getEventSQL","timestamp":"2025-10-22 08:07:48"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:07:48"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:07:48"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:07:48"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":194.908107,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:07:48"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:07:48"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: getEventSQL (ID: 13)","timestamp":"2025-10-22 08:07:48"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-22 08:07:48"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name, comp_type, qryName, qrySQL\r\n     FROM api_wf.vw_eventSQL\r\n     WHERE xref_id = 67","timestamp":"2025-10-22 08:07:48"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:07:48"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:07:48"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:07:48"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":102.067484,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:07:48"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:07:48"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: getEventSQL (ID: 13)","timestamp":"2025-10-22 08:07:48"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (298ms)","timestamp":"2025-10-22 08:07:48"}
{"body":{"eventSQLId":"getEventSQL","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:07:57"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:07:57"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: getEventSQL","timestamp":"2025-10-22 08:07:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:07:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:07:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:07:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":113.562987,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:07:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:07:57"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: getEventSQL (ID: 13)","timestamp":"2025-10-22 08:07:57"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-22 08:07:57"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name, comp_type, qryName, qrySQL\r\n     FROM api_wf.vw_eventSQL\r\n     WHERE xref_id = 67","timestamp":"2025-10-22 08:07:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:07:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:07:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:07:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":101.022829,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:07:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:07:57"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: getEventSQL (ID: 13)","timestamp":"2025-10-22 08:07:57"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (217ms)","timestamp":"2025-10-22 08:07:57"}
{"body":{"eventSQLId":"eventTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:08:45"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: eventTypeList","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:08:45"}
{"body":{"eventSQLId":"qrySqlList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:08:45"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: qrySqlList","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:08:45"}
{"body":{"eventSQLId":"triggerList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:08:45"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: triggerList","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:08:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:08:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":218.821282,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: qrySqlList (ID: 17)","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, qryName, qrySQL, description\r\nFROM api_wf.eventSQL\r\nWHERE active = 1\r\nORDER BY qryName","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:08:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:08:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":230.576453,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: eventTypeList (ID: 9)","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name, category, title, style\r\nFROM api_wf.eventType\r\nORDER BY Hier, name","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:08:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:08:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":218.75243,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: triggerList (ID: 16)","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select a.id, a.trigType, content_type, a.is_dom_event, a.name, \r\na.description, a.example \r\nfrom    api_wf.triggers a \r\norder by a.trigType, name","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:08:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-22 08:08:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":203.472184,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:08:45"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: eventTypeList (ID: 9)","timestamp":"2025-10-22 08:08:45"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (436ms)","timestamp":"2025-10-22 08:08:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 23","timestamp":"2025-10-22 08:08:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":203.016338,"method":"GET","operation":"database_query","rowCount":23,"success":true},"timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:08:45"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: triggerList (ID: 16)","timestamp":"2025-10-22 08:08:45"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (423ms)","timestamp":"2025-10-22 08:08:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 29","timestamp":"2025-10-22 08:08:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":215.581578,"method":"GET","operation":"database_query","rowCount":29,"success":true},"timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:08:45"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: qrySqlList (ID: 17)","timestamp":"2025-10-22 08:08:45"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (440ms)","timestamp":"2025-10-22 08:08:45"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:08:45"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:08:45"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:08:45"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:08:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:08:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":211.423544,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 70\r\nAND   comp_type = 'App'\r\nAND   xref_id <> parent_id  -- exclude root.","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:08:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:08:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":216.793673,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 70\r\nAND   comp_type = 'App'\r\nAND   xref_id <> parent_id  -- exclude root.","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:08:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:08:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 08:08:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":170.191138,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 08:08:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:08:46"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-22 08:08:46"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (389ms)","timestamp":"2025-10-22 08:08:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 08:08:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":172.233147,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 08:08:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:08:46"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-22 08:08:46"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (385ms)","timestamp":"2025-10-22 08:08:46"}
{"body":{"impacts":{"0":{"affectedApps":{"0":"studio"},"changeType":"MODIFY","createdBy":"claude","description":"Added Generate Action Buttons UI section with handler, styling, and component type info (Grid: delete, Form: submit)","filePath":"apps/studio/src/components/PropertyEditors/QuerySetup.jsx"},"1":{"affectedApps":{"0":"studio"},"changeType":"MODIFY","createdBy":"claude","description":"Added handleGenerateActionButtons function to auto-create delete button (Grid) and submit button (Form) with triggers and MySQL sync","filePath":"apps/studio/src/components/ComponentPropertiesPanel.jsx"}},"planId":42},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/logImpact","timestamp":"2025-10-22 08:09:07"}
{"level":"http","message":"[logImpact.js] POST /api/logImpact","timestamp":"2025-10-22 08:09:07"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 08:09:07"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 08:09:07"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":411.610321,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 08:09:07"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:09:07"}
{"level":"info","message":"[impactLogger.js] Logged 2 impacts","timestamp":"2025-10-22 08:09:07"}
{"level":"info","message":"[logImpact.js] Impact logging completed successfully","timestamp":"2025-10-22 08:09:07"}
{"level":"info","message":"[app.js]  Response: POST /api/logImpact 200 (413ms)","timestamp":"2025-10-22 08:09:07"}
{"body":{"values":{"0":{"paramName":"appID","paramVal":"51"},"1":{"paramName":"appName","paramVal":"admin"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-22 08:13:45"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-22 08:13:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:13:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":110.062793,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:13:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:13:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.129624,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:13:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:45"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 08:13:45"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 08:13:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":366.317359,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 08:13:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:45"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 08:13:45"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 08:13:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":307.058066,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 08:13:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:46"}
{"level":"debug","message":"[setVals.js] Set 2 values for pc7900@gmail.com","timestamp":"2025-10-22 08:13:46"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (828ms)","timestamp":"2025-10-22 08:13:46"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":827.899231,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-22 08:13:46"}
{"body":{"eventSQLId":"pageList","params":{"appID":"51"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:13:46"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:13:46"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: pageList","timestamp":"2025-10-22 08:13:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:13:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":46.840937,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:13:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:46"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: pageList (ID: 2)","timestamp":"2025-10-22 08:13:46"}
{"level":"debug","message":"[execEventType.js] Using passed param :appID → 51...","timestamp":"2025-10-22 08:13:46"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 51\r\nAND   comp_type in ('Page','CRUD')","timestamp":"2025-10-22 08:13:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:13:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":251.661936,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:13:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:46"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: pageList (ID: 2)","timestamp":"2025-10-22 08:13:46"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (300ms)","timestamp":"2025-10-22 08:13:46"}
{"body":{"values":{"0":{"paramName":"pageID","paramVal":"64"},"1":{"paramName":"pageName","paramVal":"{pageName}"},"2":{"paramName":"xrefID","paramVal":"64"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-22 08:13:48"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-22 08:13:48"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:48"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:48"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:13:49"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":101.532753,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:13:49"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:49"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:49"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:49"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:13:49"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":101.116958,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:13:49"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:49"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 08:13:49"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 08:13:49"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":411.751436,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 08:13:49"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:49"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 08:13:49"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 08:13:49"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":304.105596,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 08:13:49"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:49"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 08:13:49"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 08:13:49"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":306.993301,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[setVals.js] Set 3 values for pc7900@gmail.com","timestamp":"2025-10-22 08:13:50"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (1230ms)","timestamp":"2025-10-22 08:13:50"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1229.761761,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-22 08:13:50"}
{"body":{"eventSQLId":"xrefHierarchy","params":{"xrefID":"64"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:13:50"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefHierarchy","timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:13:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":177.543981,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefHierarchy (ID: 3)","timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_structure(64)","timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-22 08:13:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":188.658453,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:50"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefHierarchy (ID: 3)","timestamp":"2025-10-22 08:13:50"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (368ms)","timestamp":"2025-10-22 08:13:50"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":51}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:13:50"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:13:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":72.01355,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 51...","timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 51 \r\nAND active = 1","timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 08:13:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":111.105375,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:50"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 08:13:50"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (186ms)","timestamp":"2025-10-22 08:13:50"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":51}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:13:50"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:13:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":111.288062,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 51...","timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 51\r\nORDER BY class, ordr","timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:13:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.119237,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:50"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 08:13:50"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (150ms)","timestamp":"2025-10-22 08:13:50"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:13:50"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:13:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":166.285698,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 64 \r\nAND active = 1","timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:51"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-22 08:13:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":188.152026,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:51"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 08:13:51"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (356ms)","timestamp":"2025-10-22 08:13:51"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:13:51"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:51"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:13:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":52.597709,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 64\r\nORDER BY class, ordr","timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:51"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:13:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":366.230951,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:51"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 08:13:51"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (420ms)","timestamp":"2025-10-22 08:13:51"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":65}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:13:51"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:51"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:13:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":46.692317,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 65...","timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 65 \r\nAND active = 1","timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:51"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-22 08:13:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":67.38233,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:51"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 08:13:51"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (115ms)","timestamp":"2025-10-22 08:13:51"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":65}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:13:51"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:51"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:13:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":127.689037,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 65...","timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 65\r\nORDER BY class, ordr","timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:51"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:51"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-22 08:13:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":147.918389,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:52"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 08:13:52"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (277ms)","timestamp":"2025-10-22 08:13:52"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":66}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:13:52"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:52"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:13:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":54.217872,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 66...","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 66 \r\nAND active = 1","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:52"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:13:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":245.382935,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:52"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 08:13:52"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (301ms)","timestamp":"2025-10-22 08:13:52"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":66}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:13:52"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:52"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:13:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":45.282436,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 66...","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 66\r\nORDER BY class, ordr","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:52"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 08:13:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":254.649125,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:52"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 08:13:52"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (302ms)","timestamp":"2025-10-22 08:13:52"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:13:52"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:52"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:13:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.760039,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 67 \r\nAND active = 1","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:52"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 08:13:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":158.111473,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:52"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 08:13:52"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (194ms)","timestamp":"2025-10-22 08:13:52"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:13:52"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:52"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:13:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":58.502651,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 67\r\nORDER BY class, ordr","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:52"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 08:13:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.978305,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 08:13:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:52"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 08:13:52"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (99ms)","timestamp":"2025-10-22 08:13:53"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":68}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:13:53"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:13:53"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 08:13:53"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:53"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:53"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:13:53"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":49.671936,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:13:53"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:53"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 08:13:53"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 68...","timestamp":"2025-10-22 08:13:53"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 68 \r\nAND active = 1","timestamp":"2025-10-22 08:13:53"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:53"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:53"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-22 08:13:53"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":141.940847,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 08:13:53"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:53"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 08:13:53"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (194ms)","timestamp":"2025-10-22 08:13:53"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":68}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:13:53"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:13:53"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 08:13:53"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:53"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:53"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:13:53"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":77.046145,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:13:53"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:53"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 08:13:53"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 68...","timestamp":"2025-10-22 08:13:53"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 68\r\nORDER BY class, ordr","timestamp":"2025-10-22 08:13:53"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:53"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:53"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:13:53"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":205.24441,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:13:53"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:53"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 08:13:53"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (283ms)","timestamp":"2025-10-22 08:13:53"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":69}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:13:53"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:13:53"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 08:13:53"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:53"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:53"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:13:53"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":49.691483,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:13:53"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:53"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 08:13:53"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 69...","timestamp":"2025-10-22 08:13:53"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 69 \r\nAND active = 1","timestamp":"2025-10-22 08:13:53"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:53"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:53"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-22 08:13:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":455.081498,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-22 08:13:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:54"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 08:13:54"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (506ms)","timestamp":"2025-10-22 08:13:54"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":506.4163,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-22 08:13:54"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":69}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:13:54"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:13:54"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 08:13:54"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:54"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:54"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:13:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":45.725186,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:13:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:54"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 08:13:54"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 69...","timestamp":"2025-10-22 08:13:54"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 69\r\nORDER BY class, ordr","timestamp":"2025-10-22 08:13:54"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:13:54"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:13:54"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 08:13:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":254.255357,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 08:13:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:13:54"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 08:13:54"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (302ms)","timestamp":"2025-10-22 08:13:54"}
{"body":{"values":{"0":{"paramName":"xrefID","paramVal":67}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-22 08:14:01"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-22 08:14:01"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:14:01"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:14:01"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:14:01"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":178.831252,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:14:01"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:14:01"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:14:01"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:14:01"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:14:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":411.134304,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:14:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:14:02"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 08:14:02"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 08:14:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":406.727266,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 08:14:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:14:02"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-22 08:14:02"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (1000ms)","timestamp":"2025-10-22 08:14:02"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":999.743331,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-22 08:14:02"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:14:02"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:14:02"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 08:14:02"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:14:02"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:14:02"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:14:02"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:14:02"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 08:14:02"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:14:02"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:14:02"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:14:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":39.815975,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:14:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:14:02"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 08:14:02"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-22 08:14:02"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 67\r\nORDER BY class, ordr","timestamp":"2025-10-22 08:14:02"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:14:02"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:14:02"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:14:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.437331,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:14:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:14:02"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 08:14:02"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-22 08:14:02"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 67 \r\nAND active = 1","timestamp":"2025-10-22 08:14:02"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:14:02"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:14:02"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 08:14:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":171.621008,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 08:14:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:14:02"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 08:14:02"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (216ms)","timestamp":"2025-10-22 08:14:02"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 08:14:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":174.112621,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 08:14:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:14:02"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 08:14:02"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (215ms)","timestamp":"2025-10-22 08:14:02"}
{"body":{"eventSQLId":"getEventSQL","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:14:06"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:14:06"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: getEventSQL","timestamp":"2025-10-22 08:14:06"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:14:06"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:14:06"}
{"body":{"eventSQLId":"getEventSQL","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:14:06"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:14:06"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: getEventSQL","timestamp":"2025-10-22 08:14:06"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:14:06"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:14:06"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:14:06"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":196.464482,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:14:06"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:14:06"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: getEventSQL (ID: 13)","timestamp":"2025-10-22 08:14:06"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-22 08:14:06"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name, comp_type, qryName, qrySQL\r\n     FROM api_wf.vw_eventSQL\r\n     WHERE xref_id = 67","timestamp":"2025-10-22 08:14:06"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:14:06"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:14:06"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:14:06"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":198.656646,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:14:06"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:14:06"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: getEventSQL (ID: 13)","timestamp":"2025-10-22 08:14:06"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-22 08:14:06"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name, comp_type, qryName, qrySQL\r\n     FROM api_wf.vw_eventSQL\r\n     WHERE xref_id = 67","timestamp":"2025-10-22 08:14:06"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:14:06"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:14:06"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:14:06"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":46.757612,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:14:06"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:14:06"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: getEventSQL (ID: 13)","timestamp":"2025-10-22 08:14:06"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (245ms)","timestamp":"2025-10-22 08:14:06"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:14:06"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":47.136146,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:14:06"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:14:06"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: getEventSQL (ID: 13)","timestamp":"2025-10-22 08:14:06"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (247ms)","timestamp":"2025-10-22 08:14:06"}
{"body":{"eventSQLId":"getEventSQL","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:24:42"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:24:42"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: getEventSQL","timestamp":"2025-10-22 08:24:42"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:24:42"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:24:42"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:24:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":48.124314,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:24:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:24:42"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: getEventSQL (ID: 13)","timestamp":"2025-10-22 08:24:42"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-22 08:24:42"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name, comp_type, qryName, qrySQL\r\n     FROM api_wf.vw_eventSQL\r\n     WHERE xref_id = 67","timestamp":"2025-10-22 08:24:42"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:24:42"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:24:42"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:24:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":63.36848,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:24:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:24:42"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: getEventSQL (ID: 13)","timestamp":"2025-10-22 08:24:42"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (115ms)","timestamp":"2025-10-22 08:24:42"}
{"body":{"data":{"comp_name":"undefinedDelete","comp_type":"Button","container":"rowActions","description":"Delete row action button","parent_id":67,"posOrder":"0,0,auto","title":"Delete"},"method":"INSERT","table":"api_wf.eventComp_xref"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-22 08:25:55"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-22 08:25:55"}
{"data":{"comp_name":"undefinedDelete","comp_type":"Button","container":"rowActions","description":"Delete row action button","parent_id":67,"posOrder":"0,0,auto","title":"Delete"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.eventComp_xref","timestamp":"2025-10-22 08:25:55"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:25:55"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:25:55"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:25:55"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":89.337966,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:25:55"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:25:55"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:25:55"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:25:55"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:25:55"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":212.018003,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:25:55"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:25:55"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.eventComp_xref (parent_id, comp_name, comp_type, title, container, posOrder, description, created_at, created_by) VALUES (67, 'undefinedDelete', 'Button', 'Delete', 'rowActions', '0,0,auto', 'Delete row action button', NOW(), 'Paul')","timestamp":"2025-10-22 08:25:55"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 08:25:55"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 08:25:55"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":195.642612,"errorCode":"ER_BAD_FIELD_ERROR","errorType":"Error","method":"POST","operation":"database_query","success":false},"timestamp":"2025-10-22 08:25:55"}
{"code":"ER_BAD_FIELD_ERROR","errno":1054,"level":"error","message":"Unknown column 'container' in 'field list'","sql":"INSERT INTO api_wf.eventComp_xref (parent_id, comp_name, comp_type, title, container, posOrder, description, created_at, created_by) VALUES (67, 'undefinedDelete', 'Button', 'Delete', 'rowActions', '0,0,auto', 'Delete row action button', NOW(), 'Paul')","sqlMessage":"Unknown column 'container' in 'field list'","sqlState":"42S22","stack":"Error: Unknown column 'container' in 'field list'\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:57:40)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-22 08:25:55"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-10-22 08:25:55"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-22 08:25:55"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:25:55"}
{"category":"database_error","constraint":null,"level":"error","message":"[enhanceErrorResponse] INSERT failed: Database operation failed","timestamp":"2025-10-22 08:25:55"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-22 08:25:55"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (532ms)","timestamp":"2025-10-22 08:25:55"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":532.337884,"method":"POST","operation":"http_request","path":"/api/execDML","status":200},"timestamp":"2025-10-22 08:25:55"}
{"body":{"impacts":{"0":{"affectedApps":{"0":"studio"},"changeType":"MODIFY","createdBy":"claude","description":"Removed Generate Action Buttons section (moved to Props tab)","filePath":"apps/studio/src/components/PropertyEditors/QuerySetup.jsx"},"1":{"affectedApps":{"0":"studio"},"changeType":"MODIFY","createdBy":"claude","description":"Moved Generate Delete Row Action to Props tab between ColumnSelector and OverrideEditor, added action styles","filePath":"apps/studio/src/components/ComponentPropertiesPanel.jsx"}},"planId":42},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/logImpact","timestamp":"2025-10-22 08:31:45"}
{"level":"http","message":"[logImpact.js] POST /api/logImpact","timestamp":"2025-10-22 08:31:45"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 08:31:45"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 08:31:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":385.915341,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 08:31:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:31:45"}
{"level":"info","message":"[impactLogger.js] Logged 2 impacts","timestamp":"2025-10-22 08:31:45"}
{"level":"info","message":"[logImpact.js] Impact logging completed successfully","timestamp":"2025-10-22 08:31:45"}
{"level":"info","message":"[app.js]  Response: POST /api/logImpact 200 (387ms)","timestamp":"2025-10-22 08:31:45"}
{"body":{"data":{"comp_name":"undefinedDelete","comp_type":"Button","container":"rowActions","description":"Delete row action button","parent_id":67,"posOrder":"0,0,auto","title":"Delete"},"method":"INSERT","table":"api_wf.eventComp_xref"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-22 08:32:23"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-22 08:32:23"}
{"data":{"comp_name":"undefinedDelete","comp_type":"Button","container":"rowActions","description":"Delete row action button","parent_id":67,"posOrder":"0,0,auto","title":"Delete"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.eventComp_xref","timestamp":"2025-10-22 08:32:23"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:32:23"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:32:23"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:32:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":44.489416,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:32:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:32:23"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:32:23"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:32:23"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:32:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":99.480476,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:32:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:32:23"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.eventComp_xref (parent_id, comp_name, comp_type, title, container, posOrder, description, created_at, created_by) VALUES (67, 'undefinedDelete', 'Button', 'Delete', 'rowActions', '0,0,auto', 'Delete row action button', NOW(), 'Paul')","timestamp":"2025-10-22 08:32:23"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 08:32:23"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 08:32:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":103.845203,"errorCode":"ER_BAD_FIELD_ERROR","errorType":"Error","method":"POST","operation":"database_query","success":false},"timestamp":"2025-10-22 08:32:23"}
{"code":"ER_BAD_FIELD_ERROR","errno":1054,"level":"error","message":"Unknown column 'container' in 'field list'","sql":"INSERT INTO api_wf.eventComp_xref (parent_id, comp_name, comp_type, title, container, posOrder, description, created_at, created_by) VALUES (67, 'undefinedDelete', 'Button', 'Delete', 'rowActions', '0,0,auto', 'Delete row action button', NOW(), 'Paul')","sqlMessage":"Unknown column 'container' in 'field list'","sqlState":"42S22","stack":"Error: Unknown column 'container' in 'field list'\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:57:40)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-22 08:32:23"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-10-22 08:32:23"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-22 08:32:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:32:23"}
{"category":"database_error","constraint":null,"level":"error","message":"[enhanceErrorResponse] INSERT failed: Database operation failed","timestamp":"2025-10-22 08:32:23"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-22 08:32:23"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (357ms)","timestamp":"2025-10-22 08:32:23"}
{"body":{"customSQL":"DESCRIBE api_wf.eventTrigger","eventSQLId":0},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:33:02"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:33:02"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 400 (1ms)","timestamp":"2025-10-22 08:33:02"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.511707,"method":"POST","operation":"http_request","path":"/api/execEventType","status":400},"timestamp":"2025-10-22 08:33:02"}
{"body":{"data":{"comp_name":"undefinedDelete","comp_type":"Button","container":"rowActions","description":"Delete row action button","parent_id":67,"posOrder":"0,0,auto","title":"Delete"},"method":"INSERT","table":"api_wf.eventComp_xref"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-22 08:41:46"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-22 08:41:46"}
{"data":{"comp_name":"undefinedDelete","comp_type":"Button","container":"rowActions","description":"Delete row action button","parent_id":67,"posOrder":"0,0,auto","title":"Delete"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.eventComp_xref","timestamp":"2025-10-22 08:41:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:41:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:41:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:41:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.049273,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:41:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:41:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:41:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:41:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:41:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.298888,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:41:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:41:46"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.eventComp_xref (parent_id, comp_name, comp_type, title, container, posOrder, description, created_at, created_by) VALUES (67, 'undefinedDelete', 'Button', 'Delete', 'rowActions', '0,0,auto', 'Delete row action button', NOW(), 'Paul')","timestamp":"2025-10-22 08:41:46"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 08:41:46"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 08:41:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":71.347251,"errorCode":"ER_BAD_FIELD_ERROR","errorType":"Error","method":"POST","operation":"database_query","success":false},"timestamp":"2025-10-22 08:41:46"}
{"code":"ER_BAD_FIELD_ERROR","errno":1054,"level":"error","message":"Unknown column 'container' in 'field list'","sql":"INSERT INTO api_wf.eventComp_xref (parent_id, comp_name, comp_type, title, container, posOrder, description, created_at, created_by) VALUES (67, 'undefinedDelete', 'Button', 'Delete', 'rowActions', '0,0,auto', 'Delete row action button', NOW(), 'Paul')","sqlMessage":"Unknown column 'container' in 'field list'","sqlState":"42S22","stack":"Error: Unknown column 'container' in 'field list'\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:57:40)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-22 08:41:46"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-10-22 08:41:46"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-22 08:41:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:41:46"}
{"category":"database_error","constraint":null,"level":"error","message":"[enhanceErrorResponse] INSERT failed: Database operation failed","timestamp":"2025-10-22 08:41:46"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-22 08:41:46"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (174ms)","timestamp":"2025-10-22 08:41:46"}
{"body":{"data":{"comp_name":"undefinedDelete","comp_type":"Button","container":"rowActions","description":"Delete row action button","parent_id":67,"posOrder":"0,0,auto","title":"Delete"},"method":"INSERT","table":"api_wf.eventComp_xref"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-22 08:42:59"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-22 08:42:59"}
{"data":{"comp_name":"undefinedDelete","comp_type":"Button","container":"rowActions","description":"Delete row action button","parent_id":67,"posOrder":"0,0,auto","title":"Delete"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.eventComp_xref","timestamp":"2025-10-22 08:42:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:42:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:42:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:42:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":45.532549,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:42:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:42:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:42:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:42:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:42:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":49.460627,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:42:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:42:59"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.eventComp_xref (parent_id, comp_name, comp_type, title, container, posOrder, description, created_at, created_by) VALUES (67, 'undefinedDelete', 'Button', 'Delete', 'rowActions', '0,0,auto', 'Delete row action button', NOW(), 'Paul')","timestamp":"2025-10-22 08:42:59"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 08:42:59"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 08:42:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":215.230448,"errorCode":"ER_BAD_FIELD_ERROR","errorType":"Error","method":"POST","operation":"database_query","success":false},"timestamp":"2025-10-22 08:42:59"}
{"code":"ER_BAD_FIELD_ERROR","errno":1054,"level":"error","message":"Unknown column 'container' in 'field list'","sql":"INSERT INTO api_wf.eventComp_xref (parent_id, comp_name, comp_type, title, container, posOrder, description, created_at, created_by) VALUES (67, 'undefinedDelete', 'Button', 'Delete', 'rowActions', '0,0,auto', 'Delete row action button', NOW(), 'Paul')","sqlMessage":"Unknown column 'container' in 'field list'","sqlState":"42S22","stack":"Error: Unknown column 'container' in 'field list'\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:57:40)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-22 08:42:59"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-10-22 08:42:59"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-22 08:42:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:42:59"}
{"category":"database_error","constraint":null,"level":"error","message":"[enhanceErrorResponse] INSERT failed: Database operation failed","timestamp":"2025-10-22 08:42:59"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-22 08:42:59"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (374ms)","timestamp":"2025-10-22 08:42:59"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:43:52"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:43:52"}
{"body":{"eventSQLId":"eventTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:43:52"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: eventTypeList","timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:43:52"}
{"body":{"eventSQLId":"qrySqlList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:43:52"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: qrySqlList","timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:43:52"}
{"body":{"eventSQLId":"triggerList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 08:43:52"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: triggerList","timestamp":"2025-10-22 08:43:52"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:43:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.082674,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 70\r\nAND   comp_type = 'App'\r\nAND   xref_id <> parent_id  -- exclude root.","timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:43:52"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:43:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":79.320081,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: eventTypeList (ID: 9)","timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name, category, title, style\r\nFROM api_wf.eventType\r\nORDER BY Hier, name","timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:43:52"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:43:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":68.453758,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: qrySqlList (ID: 17)","timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, qryName, qrySQL, description\r\nFROM api_wf.eventSQL\r\nWHERE active = 1\r\nORDER BY qryName","timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:43:52"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 08:43:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":91.373898,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:43:52"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-22 08:43:52"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (131ms)","timestamp":"2025-10-22 08:43:52"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 29","timestamp":"2025-10-22 08:43:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":75.131195,"method":"GET","operation":"database_query","rowCount":29,"success":true},"timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:43:52"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: qrySqlList (ID: 17)","timestamp":"2025-10-22 08:43:52"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (146ms)","timestamp":"2025-10-22 08:43:52"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-22 08:43:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":81.652602,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:43:52"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: eventTypeList (ID: 9)","timestamp":"2025-10-22 08:43:52"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (163ms)","timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:43:52"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:43:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":245.896968,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: triggerList (ID: 16)","timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select a.id, a.trigType, content_type, a.is_dom_event, a.name, \r\na.description, a.example \r\nfrom    api_wf.triggers a \r\norder by a.trigType, name","timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:43:52"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 23","timestamp":"2025-10-22 08:43:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":72.906792,"method":"GET","operation":"database_query","rowCount":23,"success":true},"timestamp":"2025-10-22 08:43:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:43:52"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: triggerList (ID: 16)","timestamp":"2025-10-22 08:43:52"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (321ms)","timestamp":"2025-10-22 08:43:52"}
{"body":{"data":{"comp_name":"undefinedDelete","comp_type":"Button","container":"rowActions","description":"Delete row action button","parent_id":67,"posOrder":"0,0,auto","title":"Delete"},"method":"INSERT","table":"api_wf.eventComp_xref"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-22 08:45:17"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-22 08:45:17"}
{"data":{"comp_name":"undefinedDelete","comp_type":"Button","container":"rowActions","description":"Delete row action button","parent_id":67,"posOrder":"0,0,auto","title":"Delete"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.eventComp_xref","timestamp":"2025-10-22 08:45:17"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:45:17"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:45:17"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:45:17"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":101.967418,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:45:17"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:45:17"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 08:45:17"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 08:45:17"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 08:45:17"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":68.831592,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 08:45:17"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:45:17"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.eventComp_xref (parent_id, comp_name, comp_type, title, container, posOrder, description, created_at, created_by) VALUES (67, 'undefinedDelete', 'Button', 'Delete', 'rowActions', '0,0,auto', 'Delete row action button', NOW(), 'Paul')","timestamp":"2025-10-22 08:45:17"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 08:45:17"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 08:45:17"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":135.162481,"errorCode":"ER_BAD_FIELD_ERROR","errorType":"Error","method":"POST","operation":"database_query","success":false},"timestamp":"2025-10-22 08:45:18"}
{"code":"ER_BAD_FIELD_ERROR","errno":1054,"level":"error","message":"Unknown column 'container' in 'field list'","sql":"INSERT INTO api_wf.eventComp_xref (parent_id, comp_name, comp_type, title, container, posOrder, description, created_at, created_by) VALUES (67, 'undefinedDelete', 'Button', 'Delete', 'rowActions', '0,0,auto', 'Delete row action button', NOW(), 'Paul')","sqlMessage":"Unknown column 'container' in 'field list'","sqlState":"42S22","stack":"Error: Unknown column 'container' in 'field list'\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:57:40)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-22 08:45:18"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-10-22 08:45:18"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-22 08:45:18"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 08:45:18"}
{"category":"database_error","constraint":null,"level":"error","message":"[enhanceErrorResponse] INSERT failed: Database operation failed","timestamp":"2025-10-22 08:45:18"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-22 08:45:18"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (347ms)","timestamp":"2025-10-22 08:45:18"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-22 08:55:42"}
{"body":{"eventSQLId":"eventTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:48:27"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: eventTypeList","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:48:27"}
{"body":{"eventSQLId":"triggerList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:48:27"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: triggerList","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:48:27"}
{"body":{"eventSQLId":"qrySqlList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:48:27"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: qrySqlList","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:48:27"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:48:27"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":40.21791,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: qrySqlList (ID: 17)","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, qryName, qrySQL, description\r\nFROM api_wf.eventSQL\r\nWHERE active = 1\r\nORDER BY qryName","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:48:27"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:48:27"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.203278,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: triggerList (ID: 16)","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select a.id, a.trigType, content_type, a.is_dom_event, a.name, \r\na.description, a.example \r\nfrom    api_wf.triggers a \r\norder by a.trigType, name","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:48:27"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:48:27"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":45.880243,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: eventTypeList (ID: 9)","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name, category, title, style\r\nFROM api_wf.eventType\r\nORDER BY Hier, name","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:48:27"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 29","timestamp":"2025-10-22 09:48:27"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":93.271994,"method":"GET","operation":"database_query","rowCount":29,"success":true},"timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:48:27"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: qrySqlList (ID: 17)","timestamp":"2025-10-22 09:48:27"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (134ms)","timestamp":"2025-10-22 09:48:27"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-22 09:48:27"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":90.947293,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:48:27"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: eventTypeList (ID: 9)","timestamp":"2025-10-22 09:48:27"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (138ms)","timestamp":"2025-10-22 09:48:27"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 23","timestamp":"2025-10-22 09:48:27"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":94.329967,"method":"GET","operation":"database_query","rowCount":23,"success":true},"timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:48:27"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: triggerList (ID: 16)","timestamp":"2025-10-22 09:48:27"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (137ms)","timestamp":"2025-10-22 09:48:27"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:48:27"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:48:27"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:48:27"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:48:27"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:48:27"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":96.248573,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 70\r\nAND   comp_type = 'App'\r\nAND   xref_id <> parent_id  -- exclude root.","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:48:27"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:48:27"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":245.322228,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 70\r\nAND   comp_type = 'App'\r\nAND   xref_id <> parent_id  -- exclude root.","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:48:27"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 09:48:27"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":154.035106,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:48:27"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-22 09:48:27"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (251ms)","timestamp":"2025-10-22 09:48:27"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 09:48:27"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":56.873326,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 09:48:27"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:48:27"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-22 09:48:27"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (304ms)","timestamp":"2025-10-22 09:48:27"}
{"body":{"values":{"0":{"paramName":"appID","paramVal":"51"},"1":{"paramName":"appName","paramVal":"admin"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-22 09:49:38"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-22 09:49:38"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:38"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:38"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:49:38"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":113.346153,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:49:38"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:38"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:38"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:38"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:49:39"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":145.191261,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:49:39"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:39"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 09:49:39"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 09:49:39"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":271.342436,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 09:49:39"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:39"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 09:49:39"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 09:49:39"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":118.555874,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 09:49:39"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:39"}
{"level":"debug","message":"[setVals.js] Set 2 values for pc7900@gmail.com","timestamp":"2025-10-22 09:49:39"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (650ms)","timestamp":"2025-10-22 09:49:39"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":650.131101,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-22 09:49:39"}
{"body":{"eventSQLId":"pageList","params":{"appID":"51"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:49:39"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:49:39"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: pageList","timestamp":"2025-10-22 09:49:39"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:39"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:39"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:49:39"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":84.389179,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:49:39"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:39"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: pageList (ID: 2)","timestamp":"2025-10-22 09:49:39"}
{"level":"debug","message":"[execEventType.js] Using passed param :appID → 51...","timestamp":"2025-10-22 09:49:39"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 51\r\nAND   comp_type in ('Page','CRUD')","timestamp":"2025-10-22 09:49:39"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:39"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:39"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:49:39"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":100.340275,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:49:39"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:39"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: pageList (ID: 2)","timestamp":"2025-10-22 09:49:39"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (186ms)","timestamp":"2025-10-22 09:49:39"}
{"body":{"values":{"0":{"paramName":"pageID","paramVal":"64"},"1":{"paramName":"pageName","paramVal":"{pageName}"},"2":{"paramName":"xrefID","paramVal":"64"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-22 09:49:41"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-22 09:49:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:49:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.071183,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:42"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:49:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":32.616349,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 09:49:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":101.619806,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 09:49:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":145.47136,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 09:49:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":160.561621,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[setVals.js] Set 3 values for pc7900@gmail.com","timestamp":"2025-10-22 09:49:42"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (478ms)","timestamp":"2025-10-22 09:49:42"}
{"body":{"eventSQLId":"xrefHierarchy","params":{"xrefID":"64"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:49:42"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefHierarchy","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:42"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:49:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.13469,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefHierarchy (ID: 3)","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_structure(64)","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:42"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-22 09:49:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":73.819493,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:42"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefHierarchy (ID: 3)","timestamp":"2025-10-22 09:49:42"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (109ms)","timestamp":"2025-10-22 09:49:42"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":51}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:49:42"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:42"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:49:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":70.341489,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 51...","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 51 \r\nAND active = 1","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:42"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 09:49:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":72.207315,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:42"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 09:49:42"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (144ms)","timestamp":"2025-10-22 09:49:42"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":51}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:49:42"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:42"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:49:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.916041,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 51...","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 51\r\nORDER BY class, ordr","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:42"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:49:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":155.575824,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:42"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 09:49:42"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (193ms)","timestamp":"2025-10-22 09:49:42"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:49:42"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:42"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:42"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:49:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":41.72155,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 64 \r\nAND active = 1","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-22 09:49:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":122.427215,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:43"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 09:49:43"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (165ms)","timestamp":"2025-10-22 09:49:43"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:49:43"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:49:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":228.21797,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 64\r\nORDER BY class, ordr","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:49:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":102.729834,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:43"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 09:49:43"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (333ms)","timestamp":"2025-10-22 09:49:43"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":65}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:49:43"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:49:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":88.535015,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 65...","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 65 \r\nAND active = 1","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-22 09:49:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":205.205818,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:43"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 09:49:43"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (295ms)","timestamp":"2025-10-22 09:49:43"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":65}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:49:43"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:49:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":46.37643,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 65...","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 65\r\nORDER BY class, ordr","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-22 09:49:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":151.453201,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:43"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 09:49:43"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (199ms)","timestamp":"2025-10-22 09:49:43"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":66}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:49:43"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:49:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":50.172966,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 66...","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 66 \r\nAND active = 1","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:49:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":248.687821,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:44"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 09:49:44"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (301ms)","timestamp":"2025-10-22 09:49:44"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":66}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:49:44"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:49:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.742108,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 66...","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 66\r\nORDER BY class, ordr","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 09:49:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":255.4164,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:44"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 09:49:44"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (299ms)","timestamp":"2025-10-22 09:49:44"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:49:44"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:49:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":46.077372,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 67 \r\nAND active = 1","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 09:49:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":150.020019,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:44"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 09:49:44"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (198ms)","timestamp":"2025-10-22 09:49:44"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:49:44"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:49:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":68.795301,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 67\r\nORDER BY class, ordr","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 09:49:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":49.096976,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:44"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 09:49:44"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (119ms)","timestamp":"2025-10-22 09:49:44"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":68}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:49:44"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:49:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":166.432687,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 68...","timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 68 \r\nAND active = 1","timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-22 09:49:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":201.758355,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:45"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 09:49:45"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (370ms)","timestamp":"2025-10-22 09:49:45"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":68}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:49:45"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:49:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":51.206814,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 68...","timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 68\r\nORDER BY class, ordr","timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:49:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":188.178032,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:45"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 09:49:45"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (241ms)","timestamp":"2025-10-22 09:49:45"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":69}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:49:45"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:49:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":57.480569,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 69...","timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 69 \r\nAND active = 1","timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-22 09:49:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":127.518385,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:45"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 09:49:45"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (186ms)","timestamp":"2025-10-22 09:49:45"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":69}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:49:45"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:49:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":31.072965,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 69...","timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 69\r\nORDER BY class, ordr","timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 09:49:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":85.547776,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 09:49:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:45"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 09:49:45"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (118ms)","timestamp":"2025-10-22 09:49:45"}
{"body":{"values":{"0":{"paramName":"xrefID","paramVal":67}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-22 09:49:50"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-22 09:49:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:49:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":187.336746,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:49:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:49:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.8787,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:49:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:50"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 09:49:50"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 09:49:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":297.071601,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 09:49:51"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:51"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-22 09:49:51"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (524ms)","timestamp":"2025-10-22 09:49:51"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":523.708293,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-22 09:49:51"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:49:51"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:49:51"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 09:49:51"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:51"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:51"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:49:51"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:49:51"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 09:49:51"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:51"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:51"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:49:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":44.494628,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:49:51"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:51"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 09:49:51"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-22 09:49:51"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 67 \r\nAND active = 1","timestamp":"2025-10-22 09:49:51"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:51"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:51"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:49:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":300.734785,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:49:51"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:51"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 09:49:51"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-22 09:49:51"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 67\r\nORDER BY class, ordr","timestamp":"2025-10-22 09:49:51"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:49:51"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:49:51"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 09:49:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":261.84391,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 09:49:51"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:51"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 09:49:51"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (308ms)","timestamp":"2025-10-22 09:49:51"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 09:49:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":51.886179,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 09:49:51"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:49:51"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 09:49:51"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (354ms)","timestamp":"2025-10-22 09:49:51"}
{"body":{"data":{"id":57,"paramName":"selectable","paramVal":"true","xref_id":67},"method":"UPDATE","primaryKey":"id","table":"api_wf.eventProps"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-22 09:50:28"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-22 09:50:28"}
{"data":{"id":57,"paramName":"selectable","paramVal":"true","xref_id":67},"level":"debug","message":"[dmlProcessor.js] Processing UPDATE on api_wf.eventProps","primaryKey":"id","timestamp":"2025-10-22 09:50:28"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:50:28"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:50:28"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:50:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":117.520928,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:50:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:50:28"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:50:28"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:50:28"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:50:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":31.599456,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:50:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:50:28"}
{"level":"info","message":"[dmlProcessor.js] Executing UPDATE SQL:","sql":"UPDATE api_wf.eventProps SET xref_id = 67, paramName = 'selectable', paramVal = 'true', updated_at = NOW(), updated_by = 'Paul' WHERE id = 57","timestamp":"2025-10-22 09:50:28"}
{"level":"debug","message":"[dbUtils.js] Executing PATCH query: ********","timestamp":"2025-10-22 09:50:28"}
{"level":"debug","message":"[dbUtils.js] Handling PATCH-specific logic","timestamp":"2025-10-22 09:50:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":376.818934,"method":"PATCH","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 09:50:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:50:28"}
{"level":"info","message":"[dmlProcessor.js] UPDATE executed successfully on api_wf.eventProps","timestamp":"2025-10-22 09:50:28"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-22 09:50:28"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (529ms)","timestamp":"2025-10-22 09:50:28"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":528.562747,"method":"POST","operation":"http_request","path":"/api/execDML","status":200},"timestamp":"2025-10-22 09:50:28"}
{"body":{"data":{"id":59,"paramName":"columns","paramVal":"[{\"name\":\"id\",\"dataType\":\"int\",\"nullable\":\"NO\",\"defaultValue\":null,\"inputType\":\"number\"},{\"name\":\"name\",\"dataType\":\"varchar\",\"nullable\":\"NO\",\"defaultValue\":null,\"inputType\":\"text\"},{\"name\":\"description\",\"dataType\":\"text\",\"nullable\":\"NO\",\"defaultValue\":null,\"inputType\":\"textarea\"},{\"name\":\"account_id\",\"dataType\":\"int\",\"nullable\":\"NO\",\"defaultValue\":null,\"inputType\":\"number\"}]","xref_id":67},"method":"UPDATE","primaryKey":"id","table":"api_wf.eventProps"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-22 09:50:28"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-22 09:50:28"}
{"data":{"id":59,"paramName":"columns","paramVal":"[{\"name\":\"id\",\"dataType\":\"int\",\"nullable\":\"NO\",\"defaultValue\":null,\"inputType\":\"number\"},{\"name\":\"name\",\"dataType\":\"varchar\",\"nullable\":\"NO\",\"defaultValue\":null,\"inputType\":\"text\"},{\"name\":\"description\",\"dataType\":\"text\",\"nullable\":\"NO\",\"defaultValue\":null,\"inputType\":\"textarea\"},{\"name\":\"account_id\",\"dataType\":\"int\",\"nullable\":\"NO\",\"defaultValue\":null,\"inputType\":\"number\"}]","xref_id":67},"level":"debug","message":"[dmlProcessor.js] Processing UPDATE on api_wf.eventProps","primaryKey":"id","timestamp":"2025-10-22 09:50:28"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:50:28"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:50:28"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:50:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":185.079772,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:50:29"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:50:29"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:50:29"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:50:29"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:50:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":102.708158,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:50:29"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:50:29"}
{"level":"info","message":"[dmlProcessor.js] Executing UPDATE SQL:","sql":"UPDATE api_wf.eventProps SET xref_id = 67, paramName = 'columns', paramVal = '[{\"name\":\"id\",\"dataType\":\"int\",\"nullable\":\"NO\",\"defaultValue\":null,\"inputType\":\"number\"},{\"name\":\"name\",\"dataType\":\"varchar\",\"nullable\":\"NO\",\"defaultValue\":null,\"inputType\":\"text\"},{\"name\":\"description\",\"dataType\":\"text\",\"nullable\":\"NO\",\"defaultValue\":null,\"inputType\":\"textarea\"},{\"name\":\"account_id\",\"dataType\":\"int\",\"nullable\":\"NO\",\"defaultValue\":null,\"inputType\":\"number\"}]', updated_at = NOW(), updated_by = 'Paul' WHERE id = 59","timestamp":"2025-10-22 09:50:29"}
{"level":"debug","message":"[dbUtils.js] Executing PATCH query: ********","timestamp":"2025-10-22 09:50:29"}
{"level":"debug","message":"[dbUtils.js] Handling PATCH-specific logic","timestamp":"2025-10-22 09:50:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":307.741339,"method":"PATCH","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 09:50:29"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:50:29"}
{"level":"info","message":"[dmlProcessor.js] UPDATE executed successfully on api_wf.eventProps","timestamp":"2025-10-22 09:50:29"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-22 09:50:29"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (598ms)","timestamp":"2025-10-22 09:50:29"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":598.150616,"method":"POST","operation":"http_request","path":"/api/execDML","status":200},"timestamp":"2025-10-22 09:50:29"}
{"body":{"data":{"id":60,"paramName":"columnOverrides","paramVal":"{\"id\":{\"hidden\":true,\"required\":true},\"name\":{\"label\":\"Name\",\"width\":\"150px\",\"required\":true,\"sortable\":true},\"description\":{\"hidden\":false},\"account_id\":{\"hidden\":true,\"required\":true}}","xref_id":67},"method":"UPDATE","primaryKey":"id","table":"api_wf.eventProps"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-22 09:50:29"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-22 09:50:29"}
{"data":{"id":60,"paramName":"columnOverrides","paramVal":"{\"id\":{\"hidden\":true,\"required\":true},\"name\":{\"label\":\"Name\",\"width\":\"150px\",\"required\":true,\"sortable\":true},\"description\":{\"hidden\":false},\"account_id\":{\"hidden\":true,\"required\":true}}","xref_id":67},"level":"debug","message":"[dmlProcessor.js] Processing UPDATE on api_wf.eventProps","primaryKey":"id","timestamp":"2025-10-22 09:50:29"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:50:29"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:50:29"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:50:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":55.980321,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:50:29"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:50:29"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:50:29"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:50:29"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:50:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":136.250942,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:50:29"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:50:29"}
{"level":"info","message":"[dmlProcessor.js] Executing UPDATE SQL:","sql":"UPDATE api_wf.eventProps SET xref_id = 67, paramName = 'columnOverrides', paramVal = '{\"id\":{\"hidden\":true,\"required\":true},\"name\":{\"label\":\"Name\",\"width\":\"150px\",\"required\":true,\"sortable\":true},\"description\":{\"hidden\":false},\"account_id\":{\"hidden\":true,\"required\":true}}', updated_at = NOW(), updated_by = 'Paul' WHERE id = 60","timestamp":"2025-10-22 09:50:29"}
{"level":"debug","message":"[dbUtils.js] Executing PATCH query: ********","timestamp":"2025-10-22 09:50:29"}
{"level":"debug","message":"[dbUtils.js] Handling PATCH-specific logic","timestamp":"2025-10-22 09:50:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":393.506696,"method":"PATCH","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 09:50:30"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:50:30"}
{"level":"info","message":"[dmlProcessor.js] UPDATE executed successfully on api_wf.eventProps","timestamp":"2025-10-22 09:50:30"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-22 09:50:30"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (588ms)","timestamp":"2025-10-22 09:50:30"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":587.532198,"method":"POST","operation":"http_request","path":"/api/execDML","status":200},"timestamp":"2025-10-22 09:50:30"}
{"body":{"data":{"paramName":"rowActions","paramVal":"[{\"id\":\"delete\",\"type\":\"button\",\"icon\":\"Delete\",\"color\":\"error\",\"tooltip\":\"Delete\",\"trigger\":{\"action\":\"execDML\",\"content\":{\"method\":\"DELETE\",\"confirm\":true,\"confirmMessage\":\"Are you sure you want to delete this item?\"}}}]","xref_id":67},"method":"INSERT","table":"api_wf.eventProps"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-22 09:50:30"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-22 09:50:30"}
{"data":{"paramName":"rowActions","paramVal":"[{\"id\":\"delete\",\"type\":\"button\",\"icon\":\"Delete\",\"color\":\"error\",\"tooltip\":\"Delete\",\"trigger\":{\"action\":\"execDML\",\"content\":{\"method\":\"DELETE\",\"confirm\":true,\"confirmMessage\":\"Are you sure you want to delete this item?\"}}}]","xref_id":67},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.eventProps","timestamp":"2025-10-22 09:50:30"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:50:30"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:50:30"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:50:30"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.19165,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:50:30"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:50:30"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:50:30"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:50:30"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:50:30"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":73.430278,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:50:30"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:50:30"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.eventProps (xref_id, paramName, paramVal, created_at, created_by) VALUES (67, 'rowActions', '[{\"id\":\"delete\",\"type\":\"button\",\"icon\":\"Delete\",\"color\":\"error\",\"tooltip\":\"Delete\",\"trigger\":{\"action\":\"execDML\",\"content\":{\"method\":\"DELETE\",\"confirm\":true,\"confirmMessage\":\"Are you sure you want to delete this item?\"}}}]', NOW(), 'Paul')","timestamp":"2025-10-22 09:50:30"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 09:50:30"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 09:50:30"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":287.798052,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 09:50:30"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:50:30"}
{"level":"info","message":"[dmlProcessor.js] INSERT executed successfully on api_wf.eventProps","timestamp":"2025-10-22 09:50:30"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-22 09:50:30"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (397ms)","timestamp":"2025-10-22 09:50:30"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:50:44"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:50:44"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-22 09:50:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:50:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:50:44"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-22 09:50:44"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-22 09:50:44"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-22 09:50:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:50:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:50:44"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:50:44"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:50:44"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-22 09:50:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:50:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:50:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:50:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":168.475801,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:50:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:50:44"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-22 09:50:44"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-22 09:50:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:50:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:50:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:50:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":152.474173,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:50:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:50:44"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-22 09:50:44"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-22 09:50:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:50:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:50:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-22 09:50:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":62.893434,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-22 09:50:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:50:44"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-22 09:50:44"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (234ms)","timestamp":"2025-10-22 09:50:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-22 09:50:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":63.602133,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-22 09:50:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:50:44"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-22 09:50:44"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (218ms)","timestamp":"2025-10-22 09:50:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-22 09:50:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":287.299471,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-22 09:50:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:50:44"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-22 09:50:44"}
{"level":"info","message":"[getEventTypes.js] Fetched 19 eventTypes","timestamp":"2025-10-22 09:50:44"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (296ms)","timestamp":"2025-10-22 09:50:44"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-22 09:50:44"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-22 09:50:44"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-22 09:50:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:50:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:50:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-22 09:50:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":281.400884,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-22 09:50:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:50:45"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-22 09:50:45"}
{"level":"info","message":"[getEventTypes.js] Fetched 19 eventTypes","timestamp":"2025-10-22 09:50:45"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (285ms)","timestamp":"2025-10-22 09:50:45"}
{"body":{"eventSQLId":"eventTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:51:20"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: eventTypeList","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:20"}
{"body":{"eventSQLId":"triggerList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:51:20"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: triggerList","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:20"}
{"body":{"eventSQLId":"qrySqlList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:51:20"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: qrySqlList","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":240.509485,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: eventTypeList (ID: 9)","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name, category, title, style\r\nFROM api_wf.eventType\r\nORDER BY Hier, name","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":322.399019,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: qrySqlList (ID: 17)","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, qryName, qrySQL, description\r\nFROM api_wf.eventSQL\r\nWHERE active = 1\r\nORDER BY qryName","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-22 09:51:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":101.45707,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:20"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: eventTypeList (ID: 9)","timestamp":"2025-10-22 09:51:20"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (346ms)","timestamp":"2025-10-22 09:51:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":330.040642,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: triggerList (ID: 16)","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select a.id, a.trigType, content_type, a.is_dom_event, a.name, \r\na.description, a.example \r\nfrom    api_wf.triggers a \r\norder by a.trigType, name","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 29","timestamp":"2025-10-22 09:51:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":62.825921,"method":"GET","operation":"database_query","rowCount":29,"success":true},"timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:20"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: qrySqlList (ID: 17)","timestamp":"2025-10-22 09:51:20"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (389ms)","timestamp":"2025-10-22 09:51:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 23","timestamp":"2025-10-22 09:51:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":105.656823,"method":"GET","operation":"database_query","rowCount":23,"success":true},"timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:20"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: triggerList (ID: 16)","timestamp":"2025-10-22 09:51:20"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (439ms)","timestamp":"2025-10-22 09:51:20"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:51:20"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:20"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:51:20"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":57.739972,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 70\r\nAND   comp_type = 'App'\r\nAND   xref_id <> parent_id  -- exclude root.","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":54.520405,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 70\r\nAND   comp_type = 'App'\r\nAND   xref_id <> parent_id  -- exclude root.","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 09:51:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":72.883281,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 09:51:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:20"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-22 09:51:20"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (134ms)","timestamp":"2025-10-22 09:51:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 09:51:21"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":298.035904,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 09:51:21"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:21"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-22 09:51:21"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (355ms)","timestamp":"2025-10-22 09:51:21"}
{"body":{"values":{"0":{"paramName":"appID","paramVal":"51"},"1":{"paramName":"appName","paramVal":"admin"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-22 09:51:26"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-22 09:51:26"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:26"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:26"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":151.314191,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:26"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:26"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:26"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":102.333437,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:26"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 09:51:26"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 09:51:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":310.4613,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 09:51:27"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:27"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 09:51:27"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 09:51:27"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":507.010577,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 09:51:27"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:27"}
{"level":"debug","message":"[setVals.js] Set 2 values for pc7900@gmail.com","timestamp":"2025-10-22 09:51:27"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (1073ms)","timestamp":"2025-10-22 09:51:27"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1072.964708,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-22 09:51:27"}
{"body":{"eventSQLId":"pageList","params":{"appID":"51"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:51:27"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:51:27"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: pageList","timestamp":"2025-10-22 09:51:27"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:27"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:27"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:27"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":111.469328,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:27"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:27"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: pageList (ID: 2)","timestamp":"2025-10-22 09:51:27"}
{"level":"debug","message":"[execEventType.js] Using passed param :appID → 51...","timestamp":"2025-10-22 09:51:27"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 51\r\nAND   comp_type in ('Page','CRUD')","timestamp":"2025-10-22 09:51:27"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:27"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:27"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:27"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.90026,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:27"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:27"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: pageList (ID: 2)","timestamp":"2025-10-22 09:51:27"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (147ms)","timestamp":"2025-10-22 09:51:27"}
{"body":{"values":{"0":{"paramName":"pageID","paramVal":"64"},"1":{"paramName":"pageName","paramVal":"{pageName}"},"2":{"paramName":"xrefID","paramVal":"64"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-22 09:51:28"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-22 09:51:28"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:28"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:28"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.433541,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:28"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:28"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:28"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":81.993006,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:29"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:29"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 09:51:29"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 09:51:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":409.082361,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 09:51:29"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:29"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 09:51:29"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 09:51:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":385.393771,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 09:51:29"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:29"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 09:51:29"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 09:51:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":305.600792,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[setVals.js] Set 3 values for pc7900@gmail.com","timestamp":"2025-10-22 09:51:30"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (1220ms)","timestamp":"2025-10-22 09:51:30"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1220.382427,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-22 09:51:30"}
{"body":{"eventSQLId":"xrefHierarchy","params":{"xrefID":"64"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:51:30"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefHierarchy","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:30"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:30"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":134.454438,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefHierarchy (ID: 3)","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_structure(64)","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:30"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-22 09:51:30"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":60.132226,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:30"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefHierarchy (ID: 3)","timestamp":"2025-10-22 09:51:30"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (196ms)","timestamp":"2025-10-22 09:51:30"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":51}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:51:30"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:30"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:30"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":92.812196,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 51...","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 51 \r\nAND active = 1","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:30"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 09:51:30"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":98.052937,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:30"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 09:51:30"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (193ms)","timestamp":"2025-10-22 09:51:30"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":51}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:51:30"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:30"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:30"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":88.56745,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 51...","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 51\r\nORDER BY class, ordr","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:30"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:30"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":159.292542,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:30"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 09:51:30"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (249ms)","timestamp":"2025-10-22 09:51:30"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:51:30"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:30"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:30"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":40.028617,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 64 \r\nAND active = 1","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:30"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-22 09:51:30"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":40.31793,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:30"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 09:51:30"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (82ms)","timestamp":"2025-10-22 09:51:30"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:51:30"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:30"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:30"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":106.94619,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 64\r\nORDER BY class, ordr","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":200.239345,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (309ms)","timestamp":"2025-10-22 09:51:31"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":65}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:51:31"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":41.328311,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 65...","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 65 \r\nAND active = 1","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":32.934964,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (75ms)","timestamp":"2025-10-22 09:51:31"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":65}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:51:31"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":43.673315,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 65...","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 65\r\nORDER BY class, ordr","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":29.673547,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (75ms)","timestamp":"2025-10-22 09:51:31"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":66}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:51:31"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.913553,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 66...","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 66 \r\nAND active = 1","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":30.866858,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (68ms)","timestamp":"2025-10-22 09:51:31"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":66}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:51:31"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":44.460851,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 66...","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 66\r\nORDER BY class, ordr","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":68.806146,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (115ms)","timestamp":"2025-10-22 09:51:31"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:51:31"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.730026,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 67 \r\nAND active = 1","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 4","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.503932,"method":"GET","operation":"database_query","rowCount":4,"success":true},"timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (72ms)","timestamp":"2025-10-22 09:51:31"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:51:31"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.184565,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 67\r\nORDER BY class, ordr","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":72.915226,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (110ms)","timestamp":"2025-10-22 09:51:31"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":68}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:51:31"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.72902,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 68...","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 68 \r\nAND active = 1","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.177909,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (72ms)","timestamp":"2025-10-22 09:51:31"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":68}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:51:31"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.693674,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 68...","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 68\r\nORDER BY class, ordr","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":31.748259,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (70ms)","timestamp":"2025-10-22 09:51:31"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":69}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:51:31"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:31"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:31"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:32"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.292385,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:32"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:32"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 09:51:32"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 69...","timestamp":"2025-10-22 09:51:32"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 69 \r\nAND active = 1","timestamp":"2025-10-22 09:51:32"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:32"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:32"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-22 09:51:32"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.236114,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-22 09:51:32"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:32"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 09:51:32"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (71ms)","timestamp":"2025-10-22 09:51:32"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":69}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:51:32"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:51:32"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 09:51:32"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:32"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:32"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:32"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.448968,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:32"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:32"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 09:51:32"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 69...","timestamp":"2025-10-22 09:51:32"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 69\r\nORDER BY class, ordr","timestamp":"2025-10-22 09:51:32"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:32"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:32"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 09:51:32"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":63.420091,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 09:51:32"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:32"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 09:51:32"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (98ms)","timestamp":"2025-10-22 09:51:32"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-22 09:51:49"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-22 09:51:49"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-22 09:51:49"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:49"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:49"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:51:49"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:51:49"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-22 09:51:49"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:49"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:49"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:51:49"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:51:49"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-22 09:51:49"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:49"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:49"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:49"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":198.178992,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:49"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:49"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-22 09:51:49"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-22 09:51:49"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:49"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:49"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:49"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":195.609896,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:49"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:49"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-22 09:51:49"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-22 09:51:49"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:49"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:49"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-22 09:51:49"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":65.675311,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-22 09:51:49"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:49"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-22 09:51:49"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (263ms)","timestamp":"2025-10-22 09:51:49"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-22 09:51:49"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":289.498738,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-22 09:51:49"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:49"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-22 09:51:49"}
{"level":"info","message":"[getEventTypes.js] Fetched 19 eventTypes","timestamp":"2025-10-22 09:51:49"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (292ms)","timestamp":"2025-10-22 09:51:49"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-22 09:51:49"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-22 09:51:49"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-22 09:51:49"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:49"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:49"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-22 09:51:49"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":135.652465,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-22 09:51:49"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:49"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-22 09:51:49"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (335ms)","timestamp":"2025-10-22 09:51:49"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-22 09:51:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":108.320667,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-22 09:51:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:50"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-22 09:51:50"}
{"level":"info","message":"[getEventTypes.js] Fetched 19 eventTypes","timestamp":"2025-10-22 09:51:50"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (111ms)","timestamp":"2025-10-22 09:51:50"}
{"body":{"values":{"0":{"paramName":"selectedID","paramVal":22}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-22 09:51:54"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-22 09:51:54"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:54"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:54"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":79.997826,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:54"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:54"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:54"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":99.66151,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:54"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 09:51:54"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 09:51:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":251.860849,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 09:51:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:54"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-22 09:51:54"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (433ms)","timestamp":"2025-10-22 09:51:54"}
{"body":{"eventSQLId":"{pageName}Dtl","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:51:54"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:51:54"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}Dtl","timestamp":"2025-10-22 09:51:54"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:54"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:54"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:55"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":97.552251,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:55"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:55"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}Dtl (ID: 23)","timestamp":"2025-10-22 09:51:55"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:55"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:55"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:55"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":45.275977,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:55"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:55"}
{"level":"debug","message":"[execEventType.js] Resolved from context :selectedID → 22","timestamp":"2025-10-22 09:51:55"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select \r\n\tid, \r\n\tname,\r\n\tdescription,\r\n\taccount_id\r\nfrom whatsfresh.ingredient_types\r\nwhere id = 22","timestamp":"2025-10-22 09:51:55"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:51:55"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:51:55"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:51:55"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":210.815903,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:51:55"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:51:55"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}Dtl (ID: 23)","timestamp":"2025-10-22 09:51:55"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (355ms)","timestamp":"2025-10-22 09:51:55"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:53:42"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:53:42"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-22 09:53:42"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:53:42"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:53:42"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-22 09:53:42"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-22 09:53:42"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-22 09:53:42"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:53:42"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:53:42"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 09:53:42"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 09:53:42"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-22 09:53:42"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:53:42"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:53:42"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:53:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":160.961191,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:53:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:53:42"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-22 09:53:42"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-22 09:53:42"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:53:42"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:53:42"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 09:53:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":171.852455,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 09:53:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:53:42"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-22 09:53:42"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-22 09:53:42"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:53:42"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:53:42"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-22 09:53:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":182.513575,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-22 09:53:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:53:42"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-22 09:53:42"}
{"level":"info","message":"[getEventTypes.js] Fetched 19 eventTypes","timestamp":"2025-10-22 09:53:42"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (186ms)","timestamp":"2025-10-22 09:53:42"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-22 09:53:42"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-22 09:53:42"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-22 09:53:42"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 09:53:42"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 09:53:42"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-22 09:53:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.644338,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-22 09:53:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:53:42"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-22 09:53:42"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (207ms)","timestamp":"2025-10-22 09:53:42"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-22 09:53:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.970748,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-22 09:53:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:53:42"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-22 09:53:42"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (200ms)","timestamp":"2025-10-22 09:53:42"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-22 09:53:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":368.429034,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-22 09:53:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 09:53:42"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-22 09:53:42"}
{"level":"info","message":"[getEventTypes.js] Fetched 19 eventTypes","timestamp":"2025-10-22 09:53:42"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (370ms)","timestamp":"2025-10-22 09:53:42"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-22 09:55:42"}
{"body":{"data":{"assigned_to":"","comments":"","description":"# Grid Row Actions Renderer Implementation\n\n## Context\nGrid rowActions prop is now configurable in studio UI and saves correctly to pageConfig, but the DirectRenderer does not yet display the action buttons in grid rows.\n\n## Current State\n- ✅ Studio UI: Add/remove rowActions in Props tab\n- ✅ PageConfig: rowActions prop saves correctly\n- ❌ Renderer: Does not display action buttons\n\n## Implementation Steps\n\n### Immediate (Priority: high)\n1. Update DirectRenderer table rendering to detect rowActions prop\n2. Add actions column to table header when rowActions exist\n3. Render action buttons in each table row\n4. Wire up button clicks to trigger execution (execDML, navigate, etc.)\n5. Test delete action with confirmation popup\n\n### Short Term (Priority: medium)\n6. Add support for multiple row actions (edit, view, delete)\n7. Implement icon rendering for actions\n8. Add tooltip support\n9. Style actions column to match eventType config\n10. Handle action button states (disabled, loading)\n\n### Future (Priority: low)\n11. Support button groups for space saving\n12. Add action visibility conditions\n13. Create action editor modal in studio\n14. Support custom action types\n\n## Technical Details\n\n### Files to Modify\n- `/apps/studio/src/rendering/DirectRenderer.jsx` - Main renderer\n- `/apps/studio/src/rendering/utils/rowRenderer.js` - Row rendering logic\n- Possibly create new `/apps/studio/src/rendering/utils/actionRenderer.js`\n\n### EventType Config Reference\nGrid eventType (id: 12) already has actions config:\n```json\n\"actions\": {\n  \"enabled\": true,\n  \"position\": \"right\",\n  \"width\": \"100px\"\n}\n```\n\n### RowActions Prop Structure\n```javascript\nrowActions: [\n  {\n    id: \"delete\",\n    type: \"button\",\n    icon: \"Delete\",\n    color: \"error\",\n    tooltip: \"Delete\",\n    trigger: {\n      action: \"execDML\",\n      content: { method: \"DELETE\", confirm: true, confirmMessage: \"...\" }\n    }\n  }\n]\n```\n\n## Success Criteria\n- Delete button appears in each grid row\n- Clicking delete shows confirmation popup\n- Executing delete removes row from database and refreshes grid\n- Multiple actions can coexist in same row\n- Actions respect trigger configuration","name":"Implement Grid rowActions Renderer Support","priority":"high","status":"pending"},"method":"INSERT","table":"api_wf.plans"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-22 10:04:09"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-22 10:04:09"}
{"data":{"assigned_to":"","comments":"","description":"# Grid Row Actions Renderer Implementation\n\n## Context\nGrid rowActions prop is now configurable in studio UI and saves correctly to pageConfig, but the DirectRenderer does not yet display the action buttons in grid rows.\n\n## Current State\n- ✅ Studio UI: Add/remove rowActions in Props tab\n- ✅ PageConfig: rowActions prop saves correctly\n- ❌ Renderer: Does not display action buttons\n\n## Implementation Steps\n\n### Immediate (Priority: high)\n1. Update DirectRenderer table rendering to detect rowActions prop\n2. Add actions column to table header when rowActions exist\n3. Render action buttons in each table row\n4. Wire up button clicks to trigger execution (execDML, navigate, etc.)\n5. Test delete action with confirmation popup\n\n### Short Term (Priority: medium)\n6. Add support for multiple row actions (edit, view, delete)\n7. Implement icon rendering for actions\n8. Add tooltip support\n9. Style actions column to match eventType config\n10. Handle action button states (disabled, loading)\n\n### Future (Priority: low)\n11. Support button groups for space saving\n12. Add action visibility conditions\n13. Create action editor modal in studio\n14. Support custom action types\n\n## Technical Details\n\n### Files to Modify\n- `/apps/studio/src/rendering/DirectRenderer.jsx` - Main renderer\n- `/apps/studio/src/rendering/utils/rowRenderer.js` - Row rendering logic\n- Possibly create new `/apps/studio/src/rendering/utils/actionRenderer.js`\n\n### EventType Config Reference\nGrid eventType (id: 12) already has actions config:\n```json\n\"actions\": {\n  \"enabled\": true,\n  \"position\": \"right\",\n  \"width\": \"100px\"\n}\n```\n\n### RowActions Prop Structure\n```javascript\nrowActions: [\n  {\n    id: \"delete\",\n    type: \"button\",\n    icon: \"Delete\",\n    color: \"error\",\n    tooltip: \"Delete\",\n    trigger: {\n      action: \"execDML\",\n      content: { method: \"DELETE\", confirm: true, confirmMessage: \"...\" }\n    }\n  }\n]\n```\n\n## Success Criteria\n- Delete button appears in each grid row\n- Clicking delete shows confirmation popup\n- Executing delete removes row from database and refreshes grid\n- Multiple actions can coexist in same row\n- Actions respect trigger configuration","name":"Implement Grid rowActions Renderer Support","priority":"high","status":"pending"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.plans","timestamp":"2025-10-22 10:04:09"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 10:04:09"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 10:04:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 10:04:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":140.298764,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 10:04:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 10:04:09"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 10:04:09"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 10:04:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 10:04:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":102.055777,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 10:04:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 10:04:09"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.plans (name, status, priority, description, comments, assigned_to, created_at, created_by) VALUES ('Implement Grid rowActions Renderer Support', 'pending', 'high', '# Grid Row Actions Renderer Implementation\n\n## Context\nGrid rowActions prop is now configurable in studio UI and saves correctly to pageConfig, but the DirectRenderer does not yet display the action buttons in grid rows.\n\n## Current State\n- ✅ Studio UI: Add/remove rowActions in Props tab\n- ✅ PageConfig: rowActions prop saves correctly\n- ❌ Renderer: Does not display action buttons\n\n## Implementation Steps\n\n### Immediate (Priority: high)\n1. Update DirectRenderer table rendering to detect rowActions prop\n2. Add actions column to table header when rowActions exist\n3. Render action buttons in each table row\n4. Wire up button clicks to trigger execution (execDML, navigate, etc.)\n5. Test delete action with confirmation popup\n\n### Short Term (Priority: medium)\n6. Add support for multiple row actions (edit, view, delete)\n7. Implement icon rendering for actions\n8. Add tooltip support\n9. Style actions column to match eventType config\n10. Handle action button states (disabled, loading)\n\n### Future (Priority: low)\n11. Support button groups for space saving\n12. Add action visibility conditions\n13. Create action editor modal in studio\n14. Support custom action types\n\n## Technical Details\n\n### Files to Modify\n- `/apps/studio/src/rendering/DirectRenderer.jsx` - Main renderer\n- `/apps/studio/src/rendering/utils/rowRenderer.js` - Row rendering logic\n- Possibly create new `/apps/studio/src/rendering/utils/actionRenderer.js`\n\n### EventType Config Reference\nGrid eventType (id: 12) already has actions config:\n```json\n\"actions\": {\n  \"enabled\": true,\n  \"position\": \"right\",\n  \"width\": \"100px\"\n}\n```\n\n### RowActions Prop Structure\n```javascript\nrowActions: [\n  {\n    id: \"delete\",\n    type: \"button\",\n    icon: \"Delete\",\n    color: \"error\",\n    tooltip: \"Delete\",\n    trigger: {\n      action: \"execDML\",\n      content: { method: \"DELETE\", confirm: true, confirmMessage: \"...\" }\n    }\n  }\n]\n```\n\n## Success Criteria\n- Delete button appears in each grid row\n- Clicking delete shows confirmation popup\n- Executing delete removes row from database and refreshes grid\n- Multiple actions can coexist in same row\n- Actions respect trigger configuration', '', '', NOW(), 'Paul')","timestamp":"2025-10-22 10:04:09"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 10:04:09"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 10:04:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":424.598553,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 10:04:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 10:04:10"}
{"level":"info","message":"[dmlProcessor.js] INSERT executed successfully on api_wf.plans","timestamp":"2025-10-22 10:04:10"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-22 10:04:10"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (669ms)","timestamp":"2025-10-22 10:04:10"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":669.327246,"method":"POST","operation":"http_request","path":"/api/execDML","status":200},"timestamp":"2025-10-22 10:04:10"}
{"body":{"data":{"from_agent":"claude","message":"# Claude Session Summary - 2025-10-21\n\n**Focus:** Fixed session startup workflow, added Grid rowActions configuration UI, and improved AI documentation\n**Primary AI:** Claude\n\n---\n\n## ✅ Major Accomplishments\n\n### 1. Session Startup Workflow Fixes\n- **Fixed impactLogger.js** - Added missing `api_wf.` schema prefix to plan_impacts table queries\n- **Fixed startSession.md** - Corrected API endpoint (port 3004→3001, eventType→eventSQLId: 30)\n- **Created .claude/commands/startSession.md** - Claude-specific command referencing shared spec\n- **Updated summary.md** - Separated plan creation from summary storage, fixed field mappings (userID→created_by)\n- **Tested end-to-end** - Plan 42 created, summary 43 stored, impacts tracked successfully\n\n### 2. Database Views Documentation\n- **Created AI/views/ directory** - Centralized view documentation for both Claude and Kiro\n- **Documented 6 views:**\n  - vw_module_impact_dtl - Module change history\n  - vw_module_map - Module dependencies\n  - vw_eventTrigger - Component trigger mappings\n  - vw_hier_components - Component hierarchy\n  - vw_eventSQL - Component-to-query mappings\n  - vw_eventProp - Component properties\n- **Each doc includes:** Purpose, key columns, common query patterns, use cases\n\n### 3. Grid rowActions Configuration System\n- **Redesigned approach:** Row actions as Grid prop instead of child components (simpler, matches old pageMap pattern)\n- **Added UI in Props tab:**\n  - Shows current row actions with remove buttons\n  - \"+ Add Delete Action\" button\n  - Saves immediately to IndexedDB\n- **RowActions prop structure:**\n  ```javascript\n  rowActions: [\n    {\n      id: \"delete\",\n      icon: \"Delete\",\n      trigger: { action: \"execDML\", content: { method: \"DELETE\", confirm: true } }\n    }\n  ]\n  ```\n- **Status:** Configuration working, renderer support needed (Plan 43)\n\n### 4. Summary Workflow Improvements  \n- **Added module dependency refresh section** - Optional commands for when imports/structure changes\n- **Fixed two-step workflow** - Create plan first, then summary references it\n- **Impact tracking** - 9 files modified/created for Plan 42\n\n---\n\n## 📊 Statistics\n\n- **Files modified:** 5 (impactLogger.js, startSession.md, summary.md, QuerySetup.jsx, ComponentPropertiesPanel.jsx)\n- **Files created:** 8 (.claude/commands/startSession.md, 6 AI/views/*.md, Plan 43)\n- **Plans created:** 2 (Plan 42: Session workflows, Plan 43: Renderer implementation)\n- **Summaries stored:** 1 (Summary 43 for Plan 42)\n- **Impacts tracked:** 9 file changes to Plan 42\n- **Database fixes:** 2 (schema prefix, field mappings)\n- **Views documented:** 6\n\n---\n\n## 🚀 Next Steps\n\n### See Plan: 43 - Implement Grid rowActions Renderer Support\n\n**Immediate:**\n1. Update DirectRenderer to detect rowActions prop\n2. Add actions column to table rendering\n3. Render action buttons in each row\n4. Wire up button clicks to trigger execution\n5. Test delete action with confirmation\n\n**Future:**\n- Support multiple row actions (edit, view, navigate)\n- Add button groups for space efficiency\n- Create action editor modal\n\n---\n\n## 💡 Key Learnings\n\n### Database Schema Consistency\n- Always use api_wf. prefix for cross-database queries\n- execDML auto-injects created_by from userID - omit from payload\n- Field name mismatches cause silent failures\n\n### Design Pattern Evolution\n- Started with: Child components + triggers (complex, sync issues)\n- Ended with: Simple props (matches old pageMap, easier to manage)\n- Lesson: Try simplest approach first, add complexity only when needed\n\n### Documentation as Architecture\n- AI/views/ directory enables self-service investigation\n- Query patterns in docs save tokens and time\n- Centralized docs prevent duplicate work between Claude/Kiro\n\n### Workflow Design\n- Create dependent records first to capture IDs\n- Separate concerns: plans table ≠ plan_communications table  \n- Document workflow order clearly in shared specs\n\n---\n\n**Status:** Studio rowActions configuration complete, ready for renderer implementation (Plan 43)","plan_id":43,"subject":"Studio Grid rowActions Configuration & Session Startup Fixes","to_agent":"any","type":"summary"},"method":"INSERT","table":"api_wf.plan_communications"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-22 10:04:45"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-22 10:04:45"}
{"data":{"from_agent":"claude","message":"# Claude Session Summary - 2025-10-21\n\n**Focus:** Fixed session startup workflow, added Grid rowActions configuration UI, and improved AI documentation\n**Primary AI:** Claude\n\n---\n\n## ✅ Major Accomplishments\n\n### 1. Session Startup Workflow Fixes\n- **Fixed impactLogger.js** - Added missing `api_wf.` schema prefix to plan_impacts table queries\n- **Fixed startSession.md** - Corrected API endpoint (port 3004→3001, eventType→eventSQLId: 30)\n- **Created .claude/commands/startSession.md** - Claude-specific command referencing shared spec\n- **Updated summary.md** - Separated plan creation from summary storage, fixed field mappings (userID→created_by)\n- **Tested end-to-end** - Plan 42 created, summary 43 stored, impacts tracked successfully\n\n### 2. Database Views Documentation\n- **Created AI/views/ directory** - Centralized view documentation for both Claude and Kiro\n- **Documented 6 views:**\n  - vw_module_impact_dtl - Module change history\n  - vw_module_map - Module dependencies\n  - vw_eventTrigger - Component trigger mappings\n  - vw_hier_components - Component hierarchy\n  - vw_eventSQL - Component-to-query mappings\n  - vw_eventProp - Component properties\n- **Each doc includes:** Purpose, key columns, common query patterns, use cases\n\n### 3. Grid rowActions Configuration System\n- **Redesigned approach:** Row actions as Grid prop instead of child components (simpler, matches old pageMap pattern)\n- **Added UI in Props tab:**\n  - Shows current row actions with remove buttons\n  - \"+ Add Delete Action\" button\n  - Saves immediately to IndexedDB\n- **RowActions prop structure:**\n  ```javascript\n  rowActions: [\n    {\n      id: \"delete\",\n      icon: \"Delete\",\n      trigger: { action: \"execDML\", content: { method: \"DELETE\", confirm: true } }\n    }\n  ]\n  ```\n- **Status:** Configuration working, renderer support needed (Plan 43)\n\n### 4. Summary Workflow Improvements  \n- **Added module dependency refresh section** - Optional commands for when imports/structure changes\n- **Fixed two-step workflow** - Create plan first, then summary references it\n- **Impact tracking** - 9 files modified/created for Plan 42\n\n---\n\n## 📊 Statistics\n\n- **Files modified:** 5 (impactLogger.js, startSession.md, summary.md, QuerySetup.jsx, ComponentPropertiesPanel.jsx)\n- **Files created:** 8 (.claude/commands/startSession.md, 6 AI/views/*.md, Plan 43)\n- **Plans created:** 2 (Plan 42: Session workflows, Plan 43: Renderer implementation)\n- **Summaries stored:** 1 (Summary 43 for Plan 42)\n- **Impacts tracked:** 9 file changes to Plan 42\n- **Database fixes:** 2 (schema prefix, field mappings)\n- **Views documented:** 6\n\n---\n\n## 🚀 Next Steps\n\n### See Plan: 43 - Implement Grid rowActions Renderer Support\n\n**Immediate:**\n1. Update DirectRenderer to detect rowActions prop\n2. Add actions column to table rendering\n3. Render action buttons in each row\n4. Wire up button clicks to trigger execution\n5. Test delete action with confirmation\n\n**Future:**\n- Support multiple row actions (edit, view, navigate)\n- Add button groups for space efficiency\n- Create action editor modal\n\n---\n\n## 💡 Key Learnings\n\n### Database Schema Consistency\n- Always use api_wf. prefix for cross-database queries\n- execDML auto-injects created_by from userID - omit from payload\n- Field name mismatches cause silent failures\n\n### Design Pattern Evolution\n- Started with: Child components + triggers (complex, sync issues)\n- Ended with: Simple props (matches old pageMap, easier to manage)\n- Lesson: Try simplest approach first, add complexity only when needed\n\n### Documentation as Architecture\n- AI/views/ directory enables self-service investigation\n- Query patterns in docs save tokens and time\n- Centralized docs prevent duplicate work between Claude/Kiro\n\n### Workflow Design\n- Create dependent records first to capture IDs\n- Separate concerns: plans table ≠ plan_communications table  \n- Document workflow order clearly in shared specs\n\n---\n\n**Status:** Studio rowActions configuration complete, ready for renderer implementation (Plan 43)","plan_id":43,"subject":"Studio Grid rowActions Configuration & Session Startup Fixes","to_agent":"any","type":"summary"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.plan_communications","timestamp":"2025-10-22 10:04:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 10:04:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 10:04:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 10:04:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":98.587851,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 10:04:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 10:04:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 10:04:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 10:04:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 10:04:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":69.47302,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 10:04:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 10:04:45"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.plan_communications (plan_id, from_agent, to_agent, type, subject, message, created_at, created_by) VALUES (43, 'claude', 'any', 'summary', 'Studio Grid rowActions Configuration & Session Startup Fixes', '# Claude Session Summary - 2025-10-21\n\n**Focus:** Fixed session startup workflow, added Grid rowActions configuration UI, and improved AI documentation\n**Primary AI:** Claude\n\n---\n\n## ✅ Major Accomplishments\n\n### 1. Session Startup Workflow Fixes\n- **Fixed impactLogger.js** - Added missing `api_wf.` schema prefix to plan_impacts table queries\n- **Fixed startSession.md** - Corrected API endpoint (port 3004→3001, eventType→eventSQLId: 30)\n- **Created .claude/commands/startSession.md** - Claude-specific command referencing shared spec\n- **Updated summary.md** - Separated plan creation from summary storage, fixed field mappings (userID→created_by)\n- **Tested end-to-end** - Plan 42 created, summary 43 stored, impacts tracked successfully\n\n### 2. Database Views Documentation\n- **Created AI/views/ directory** - Centralized view documentation for both Claude and Kiro\n- **Documented 6 views:**\n  - vw_module_impact_dtl - Module change history\n  - vw_module_map - Module dependencies\n  - vw_eventTrigger - Component trigger mappings\n  - vw_hier_components - Component hierarchy\n  - vw_eventSQL - Component-to-query mappings\n  - vw_eventProp - Component properties\n- **Each doc includes:** Purpose, key columns, common query patterns, use cases\n\n### 3. Grid rowActions Configuration System\n- **Redesigned approach:** Row actions as Grid prop instead of child components (simpler, matches old pageMap pattern)\n- **Added UI in Props tab:**\n  - Shows current row actions with remove buttons\n  - \"+ Add Delete Action\" button\n  - Saves immediately to IndexedDB\n- **RowActions prop structure:**\n  ```javascript\n  rowActions: [\n    {\n      id: \"delete\",\n      icon: \"Delete\",\n      trigger: { action: \"execDML\", content: { method: \"DELETE\", confirm: true } }\n    }\n  ]\n  ```\n- **Status:** Configuration working, renderer support needed (Plan 43)\n\n### 4. Summary Workflow Improvements  \n- **Added module dependency refresh section** - Optional commands for when imports/structure changes\n- **Fixed two-step workflow** - Create plan first, then summary references it\n- **Impact tracking** - 9 files modified/created for Plan 42\n\n---\n\n## 📊 Statistics\n\n- **Files modified:** 5 (impactLogger.js, startSession.md, summary.md, QuerySetup.jsx, ComponentPropertiesPanel.jsx)\n- **Files created:** 8 (.claude/commands/startSession.md, 6 AI/views/*.md, Plan 43)\n- **Plans created:** 2 (Plan 42: Session workflows, Plan 43: Renderer implementation)\n- **Summaries stored:** 1 (Summary 43 for Plan 42)\n- **Impacts tracked:** 9 file changes to Plan 42\n- **Database fixes:** 2 (schema prefix, field mappings)\n- **Views documented:** 6\n\n---\n\n## 🚀 Next Steps\n\n### See Plan: 43 - Implement Grid rowActions Renderer Support\n\n**Immediate:**\n1. Update DirectRenderer to detect rowActions prop\n2. Add actions column to table rendering\n3. Render action buttons in each row\n4. Wire up button clicks to trigger execution\n5. Test delete action with confirmation\n\n**Future:**\n- Support multiple row actions (edit, view, navigate)\n- Add button groups for space efficiency\n- Create action editor modal\n\n---\n\n## 💡 Key Learnings\n\n### Database Schema Consistency\n- Always use api_wf. prefix for cross-database queries\n- execDML auto-injects created_by from userID - omit from payload\n- Field name mismatches cause silent failures\n\n### Design Pattern Evolution\n- Started with: Child components + triggers (complex, sync issues)\n- Ended with: Simple props (matches old pageMap, easier to manage)\n- Lesson: Try simplest approach first, add complexity only when needed\n\n### Documentation as Architecture\n- AI/views/ directory enables self-service investigation\n- Query patterns in docs save tokens and time\n- Centralized docs prevent duplicate work between Claude/Kiro\n\n### Workflow Design\n- Create dependent records first to capture IDs\n- Separate concerns: plans table ≠ plan_communications table  \n- Document workflow order clearly in shared specs\n\n---\n\n**Status:** Studio rowActions configuration complete, ready for renderer implementation (Plan 43)', NOW(), 'Paul')","timestamp":"2025-10-22 10:04:45"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 10:04:45"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 10:04:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":273.601423,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 10:04:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 10:04:45"}
{"level":"info","message":"[dmlProcessor.js] INSERT executed successfully on api_wf.plan_communications","timestamp":"2025-10-22 10:04:45"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-22 10:04:45"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (444ms)","timestamp":"2025-10-22 10:04:45"}
{"body":{"impacts":{"0":{"affectedApps":{"0":"shared"},"changeType":"CREATE","createdBy":"claude","description":"Documented module change history view with purpose, columns, query patterns, and use cases","filePath":"AI/views/vw_module_impact_dtl.md"},"1":{"affectedApps":{"0":"shared"},"changeType":"CREATE","createdBy":"claude","description":"Documented module dependency mapping view","filePath":"AI/views/vw_module_map.md"},"2":{"affectedApps":{"0":"shared"},"changeType":"CREATE","createdBy":"claude","description":"Documented component trigger workflow view","filePath":"AI/views/vw_eventTrigger.md"},"3":{"affectedApps":{"0":"shared"},"changeType":"CREATE","createdBy":"claude","description":"Documented component hierarchy view","filePath":"AI/views/vw_hier_components.md"},"4":{"affectedApps":{"0":"shared"},"changeType":"CREATE","createdBy":"claude","description":"Documented component-to-SQL mapping view","filePath":"AI/views/vw_eventSQL.md"},"5":{"affectedApps":{"0":"shared"},"changeType":"CREATE","createdBy":"claude","description":"Documented component properties view","filePath":"AI/views/vw_eventProp.md"}},"planId":42},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/logImpact","timestamp":"2025-10-22 10:04:55"}
{"level":"http","message":"[logImpact.js] POST /api/logImpact","timestamp":"2025-10-22 10:04:55"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 10:04:55"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 10:04:55"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":281.670376,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 10:04:55"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 10:04:55"}
{"level":"info","message":"[impactLogger.js] Logged 6 impacts","timestamp":"2025-10-22 10:04:55"}
{"level":"info","message":"[logImpact.js] Impact logging completed successfully","timestamp":"2025-10-22 10:04:55"}
{"level":"info","message":"[app.js]  Response: POST /api/logImpact 200 (283ms)","timestamp":"2025-10-22 10:04:55"}
{"body":{"columns":{"0":"session_date","1":"agent","2":"accomplishments","3":"next_steps","4":"statistics"},"limit":2,"orderBy":{"0":{"column":"session_date","direction":"DESC"}},"table":"api_wf.ai_session_summaries"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/queryData","timestamp":"2025-10-22 10:28:12"}
{"level":"warn","message":"[server.js] Route not found: POST /api/queryData","timestamp":"2025-10-22 10:28:12"}
{"level":"info","message":"[app.js]  Response: POST /api/queryData 404 (1ms)","timestamp":"2025-10-22 10:28:12"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.960136,"method":"POST","operation":"http_request","path":"/api/queryData","status":404},"timestamp":"2025-10-22 10:28:12"}
{"body":{"columns":{"0":"plan_id","1":"file_path","2":"change_type","3":"phase","4":"description","5":"status","6":"created_at"},"limit":20,"orderBy":{"0":{"column":"created_at","direction":"DESC"}},"table":"api_wf.plan_impacts","where":{"0":{"column":"created_at","operator":">=","raw":true,"value":"DATE_SUB(NOW(), INTERVAL 24 HOUR)"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/queryData","timestamp":"2025-10-22 10:28:12"}
{"level":"warn","message":"[server.js] Route not found: POST /api/queryData","timestamp":"2025-10-22 10:28:12"}
{"level":"info","message":"[app.js]  Response: POST /api/queryData 404 (1ms)","timestamp":"2025-10-22 10:28:12"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.528759,"method":"POST","operation":"http_request","path":"/api/queryData","status":404},"timestamp":"2025-10-22 10:28:12"}
{"contentType":"application/json","eventType":"queryData","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 10:28:18"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 10:28:18"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 400 (0ms)","timestamp":"2025-10-22 10:28:18"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.465285,"method":"POST","operation":"http_request","path":"/api/execEventType","status":400},"timestamp":"2025-10-22 10:28:18"}
{"contentType":"application/json","eventType":"queryData","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 10:28:19"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 10:28:19"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 400 (0ms)","timestamp":"2025-10-22 10:28:19"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.457091,"method":"POST","operation":"http_request","path":"/api/execEventType","status":400},"timestamp":"2025-10-22 10:28:19"}
{"body":{"limit":2,"method":"SELECT","orderBy":{"0":{"column":"session_date","direction":"DESC"}},"table":"api_wf.ai_session_summaries"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-22 10:28:34"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-22 10:28:34"}
{"level":"debug","message":"[dmlProcessor.js] Processing SELECT on api_wf.ai_session_summaries","timestamp":"2025-10-22 10:28:34"}
{"code":"MISSING_REQUIRED_FIELDS","level":"error","message":"[execDML.js] DML operation failed: method, table, and data are required","stack":"Error: method, table, and data are required\n    at processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:42:19)\n    at execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:30)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:157:13)\n    at Route.dispatch (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:117:3)\n    at handle (/home/paul/wf-monorepo-new/node_modules/router/index.js:435:11)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at /home/paul/wf-monorepo-new/node_modules/router/index.js:295:15\n    at processParams (/home/paul/wf-monorepo-new/node_modules/router/index.js:582:12)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/index.js:291:5)","status":400,"timestamp":"2025-10-22 10:28:34"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 400 (1ms)","timestamp":"2025-10-22 10:28:34"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.832182,"method":"POST","operation":"http_request","path":"/api/execDML","status":400},"timestamp":"2025-10-22 10:28:34"}
{"body":{"limit":20,"method":"SELECT","orderBy":{"0":{"column":"created_at","direction":"DESC"}},"table":"api_wf.plan_impacts","where":{"0":{"column":"created_at","operator":">=","raw":true,"value":"DATE_SUB(NOW(), INTERVAL 24 HOUR)"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-22 10:28:34"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-22 10:28:34"}
{"level":"debug","message":"[dmlProcessor.js] Processing SELECT on api_wf.plan_impacts","timestamp":"2025-10-22 10:28:34"}
{"code":"MISSING_REQUIRED_FIELDS","level":"error","message":"[execDML.js] DML operation failed: method, table, and data are required","stack":"Error: method, table, and data are required\n    at processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:42:19)\n    at execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:30)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:157:13)\n    at Route.dispatch (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:117:3)\n    at handle (/home/paul/wf-monorepo-new/node_modules/router/index.js:435:11)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at /home/paul/wf-monorepo-new/node_modules/router/index.js:295:15\n    at processParams (/home/paul/wf-monorepo-new/node_modules/router/index.js:582:12)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/index.js:291:5)","status":400,"timestamp":"2025-10-22 10:28:34"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 400 (1ms)","timestamp":"2025-10-22 10:28:34"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.897274,"method":"POST","operation":"http_request","path":"/api/execDML","status":400},"timestamp":"2025-10-22 10:28:34"}
{"body":{"eventSQLId":"sessionRecentList"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 10:31:42"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 10:31:42"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: sessionRecentList","timestamp":"2025-10-22 10:31:42"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 10:31:42"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 10:31:42"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 10:31:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":141.73135,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 10:31:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 10:31:42"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: sessionRecentList (ID: 30)","timestamp":"2025-10-22 10:31:42"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT a.id, a.subject, a.message, a.from_agent, a.to_agent, a.created_at \r\nFROM   api_wf.plan_communications a\r\nWHERE a.type = 'summary'\r\nORDER BY a.created_at DESC \r\nlimit 2","timestamp":"2025-10-22 10:31:42"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 10:31:42"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 10:31:42"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-22 10:31:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":135.087189,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 10:31:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 10:31:42"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: sessionRecentList (ID: 30)","timestamp":"2025-10-22 10:31:42"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (279ms)","timestamp":"2025-10-22 10:31:42"}
{"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"GET","path":"/api/impacts/recent","query":{"hours":"24"},"timestamp":"2025-10-22 10:31:47"}
{"level":"http","message":"[logImpact.js] GET /api/impacts/recent?hours=24","timestamp":"2025-10-22 10:31:47"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 10:31:47"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 10:31:47"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 10","timestamp":"2025-10-22 10:31:47"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":196.239622,"method":"GET","operation":"database_query","rowCount":10,"success":true},"timestamp":"2025-10-22 10:31:47"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 10:31:47"}
{"level":"info","message":"[logImpact.js] Retrieved undefined recent impacts","timestamp":"2025-10-22 10:31:47"}
{"level":"info","message":"[app.js]  Response: GET /api/impacts/recent 200 (197ms)","timestamp":"2025-10-22 10:31:47"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-22 10:55:42"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-10-22 10:58:19"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-10-22 10:58:19"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-10-22 10:58:19"}
{"level":"debug","message":"[index.js]  Initializing routes","timestamp":"2025-10-22 10:58:19"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-10-22 10:58:19"}
{"0":"POST /api/execEventType","1":"GET /api/eventType/:xrefId","10":"POST /api/clearVals","11":"POST /api/logImpact","12":"GET /api/impacts/recent","13":"GET /api/impacts/batch/:batchId","14":"GET /api/studio/genPageConfig","15":"POST /api/genPageConfig","16":"POST /api/initialize","17":"GET /api/util/list-routes","18":"POST /api/util/restart-server","19":"POST /api/util/run-migration","2":"GET /api/eventTypes","20":"POST /api/auth/login","21":"GET /api/github/labels","22":"GET /api/github/issues","23":"POST /api/github/issues","24":"GET /api/github/issues/:issue_number/comments","25":"POST /api/github/upload-image","3":"GET /api/triggers","4":"POST /api/execDML","5":"POST /api/execCreateDoc","6":"GET /api/getDoc","7":"POST /api/studio/genFields","8":"GET /api/getVal","9":"POST /api/setVals","level":"info","message":"[registerRoutes.js] Routes registered:","timestamp":"2025-10-22 10:58:19"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-10-22 10:58:19"}
{"level":"debug","message":"[index.js]  Routes initialized","timestamp":"2025-10-22 10:58:19"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-10-22 10:58:19"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-10-22 10:58:19"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-10-22 10:58:19"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-10-22 10:58:19"}
{"body":{"eventSQLId":"eventTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 10:58:53"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 10:58:53"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: eventTypeList","timestamp":"2025-10-22 10:58:53"}
{"body":{"eventSQLId":"qrySqlList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 10:58:53"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 10:58:53"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: qrySqlList","timestamp":"2025-10-22 10:58:53"}
{"body":{"eventSQLId":"triggerList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 10:58:53"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 10:58:53"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: triggerList","timestamp":"2025-10-22 10:58:53"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 10:58:54"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 10:58:54"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 10:58:54"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 10:58:54"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 10:58:54"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 10:58:54"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 10:58:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":742.459202,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 10:58:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 10:58:54"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: eventTypeList (ID: 9)","timestamp":"2025-10-22 10:58:54"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name, category, title, style\r\nFROM api_wf.eventType\r\nORDER BY Hier, name","timestamp":"2025-10-22 10:58:54"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 10:58:54"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 10:58:54"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 10:58:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":724.577819,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 10:58:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 10:58:54"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: triggerList (ID: 16)","timestamp":"2025-10-22 10:58:54"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select a.id, a.trigType, content_type, a.is_dom_event, a.name, \r\na.description, a.example \r\nfrom    api_wf.triggers a \r\norder by a.trigType, name","timestamp":"2025-10-22 10:58:54"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 10:58:54"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 10:58:54"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 10:58:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":731.706438,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 10:58:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 10:58:54"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: qrySqlList (ID: 17)","timestamp":"2025-10-22 10:58:54"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, qryName, qrySQL, description\r\nFROM api_wf.eventSQL\r\nWHERE active = 1\r\nORDER BY qryName","timestamp":"2025-10-22 10:58:54"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 10:58:54"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 10:58:54"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 23","timestamp":"2025-10-22 10:58:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":209.761427,"method":"GET","operation":"database_query","rowCount":23,"success":true},"timestamp":"2025-10-22 10:58:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 10:58:54"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: triggerList (ID: 16)","timestamp":"2025-10-22 10:58:54"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (941ms)","timestamp":"2025-10-22 10:58:54"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":940.531302,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-22 10:58:54"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 29","timestamp":"2025-10-22 10:58:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":218.883444,"method":"GET","operation":"database_query","rowCount":29,"success":true},"timestamp":"2025-10-22 10:58:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 10:58:54"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: qrySqlList (ID: 17)","timestamp":"2025-10-22 10:58:54"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (966ms)","timestamp":"2025-10-22 10:58:54"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":965.992871,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-22 10:58:54"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-22 10:58:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":233.938635,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-22 10:58:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 10:58:54"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: eventTypeList (ID: 9)","timestamp":"2025-10-22 10:58:54"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (986ms)","timestamp":"2025-10-22 10:58:54"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":986.357394,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-22 10:58:54"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 10:58:54"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 10:58:54"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-22 10:58:54"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 10:58:54"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 10:58:54"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 10:58:54"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 10:58:54"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-22 10:58:54"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 10:58:54"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 10:58:54"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 10:58:55"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":213.041096,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 10:58:55"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 10:58:55"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-22 10:58:55"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 70\r\nAND   comp_type = 'App'\r\nAND   xref_id <> parent_id  -- exclude root.","timestamp":"2025-10-22 10:58:55"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 10:58:55"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 10:58:55"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 10:58:55"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":219.268696,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 10:58:55"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 10:58:55"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-22 10:58:55"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 70\r\nAND   comp_type = 'App'\r\nAND   xref_id <> parent_id  -- exclude root.","timestamp":"2025-10-22 10:58:55"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 10:58:55"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 10:58:55"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 10:58:55"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":104.633365,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 10:58:55"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 10:58:55"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-22 10:58:55"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (322ms)","timestamp":"2025-10-22 10:58:55"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 10:58:55"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":104.618411,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 10:58:55"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 10:58:55"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-22 10:58:55"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (327ms)","timestamp":"2025-10-22 10:58:55"}
{"body":{"eventSQLId":"eventTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:03:44"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:03:44"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: eventTypeList","timestamp":"2025-10-22 11:03:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:03:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:03:44"}
{"body":{"eventSQLId":"qrySqlList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:03:44"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:03:44"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: qrySqlList","timestamp":"2025-10-22 11:03:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:03:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:03:44"}
{"body":{"eventSQLId":"triggerList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:03:44"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:03:44"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: triggerList","timestamp":"2025-10-22 11:03:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:03:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:03:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:03:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":70.134819,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:03:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:03:44"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: eventTypeList (ID: 9)","timestamp":"2025-10-22 11:03:44"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name, category, title, style\r\nFROM api_wf.eventType\r\nORDER BY Hier, name","timestamp":"2025-10-22 11:03:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:03:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:03:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:03:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":63.62086,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:03:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:03:44"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: triggerList (ID: 16)","timestamp":"2025-10-22 11:03:44"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select a.id, a.trigType, content_type, a.is_dom_event, a.name, \r\na.description, a.example \r\nfrom    api_wf.triggers a \r\norder by a.trigType, name","timestamp":"2025-10-22 11:03:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:03:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:03:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:03:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":69.18935,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:03:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:03:44"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: qrySqlList (ID: 17)","timestamp":"2025-10-22 11:03:44"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, qryName, qrySQL, description\r\nFROM api_wf.eventSQL\r\nWHERE active = 1\r\nORDER BY qryName","timestamp":"2025-10-22 11:03:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:03:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:03:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 23","timestamp":"2025-10-22 11:03:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":63.987473,"method":"GET","operation":"database_query","rowCount":23,"success":true},"timestamp":"2025-10-22 11:03:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:03:44"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: triggerList (ID: 16)","timestamp":"2025-10-22 11:03:44"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (130ms)","timestamp":"2025-10-22 11:03:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-22 11:03:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":72.347877,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-22 11:03:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:03:44"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: eventTypeList (ID: 9)","timestamp":"2025-10-22 11:03:44"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (146ms)","timestamp":"2025-10-22 11:03:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 29","timestamp":"2025-10-22 11:03:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":82.700943,"method":"GET","operation":"database_query","rowCount":29,"success":true},"timestamp":"2025-10-22 11:03:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:03:44"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: qrySqlList (ID: 17)","timestamp":"2025-10-22 11:03:44"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (156ms)","timestamp":"2025-10-22 11:03:44"}
{"body":{"eventSQLId":"eventTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:03:52"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:03:52"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: eventTypeList","timestamp":"2025-10-22 11:03:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:03:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:03:52"}
{"body":{"eventSQLId":"qrySqlList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:03:52"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:03:52"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: qrySqlList","timestamp":"2025-10-22 11:03:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:03:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:03:52"}
{"body":{"eventSQLId":"triggerList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:03:52"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:03:52"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: triggerList","timestamp":"2025-10-22 11:03:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:03:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:03:52"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:03:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":65.882818,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:03:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:03:52"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: eventTypeList (ID: 9)","timestamp":"2025-10-22 11:03:52"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name, category, title, style\r\nFROM api_wf.eventType\r\nORDER BY Hier, name","timestamp":"2025-10-22 11:03:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:03:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:03:52"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:03:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":101.692179,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:03:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:03:52"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: triggerList (ID: 16)","timestamp":"2025-10-22 11:03:52"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select a.id, a.trigType, content_type, a.is_dom_event, a.name, \r\na.description, a.example \r\nfrom    api_wf.triggers a \r\norder by a.trigType, name","timestamp":"2025-10-22 11:03:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:03:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:03:52"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:03:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":115.593566,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:03:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:03:52"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: qrySqlList (ID: 17)","timestamp":"2025-10-22 11:03:52"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, qryName, qrySQL, description\r\nFROM api_wf.eventSQL\r\nWHERE active = 1\r\nORDER BY qryName","timestamp":"2025-10-22 11:03:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:03:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:03:52"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-22 11:03:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":168.166493,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-22 11:03:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:03:52"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: eventTypeList (ID: 9)","timestamp":"2025-10-22 11:03:52"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (237ms)","timestamp":"2025-10-22 11:03:52"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 23","timestamp":"2025-10-22 11:03:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":153.931769,"method":"GET","operation":"database_query","rowCount":23,"success":true},"timestamp":"2025-10-22 11:03:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:03:52"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: triggerList (ID: 16)","timestamp":"2025-10-22 11:03:52"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (260ms)","timestamp":"2025-10-22 11:03:52"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 29","timestamp":"2025-10-22 11:03:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":156.323176,"method":"GET","operation":"database_query","rowCount":29,"success":true},"timestamp":"2025-10-22 11:03:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:03:52"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: qrySqlList (ID: 17)","timestamp":"2025-10-22 11:03:52"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (275ms)","timestamp":"2025-10-22 11:03:52"}
{"body":{"eventSQLId":"eventTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:04:56"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:04:56"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: eventTypeList","timestamp":"2025-10-22 11:04:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:04:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:04:56"}
{"body":{"eventSQLId":"qrySqlList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:04:56"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:04:56"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: qrySqlList","timestamp":"2025-10-22 11:04:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:04:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:04:56"}
{"body":{"eventSQLId":"triggerList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:04:56"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:04:56"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: triggerList","timestamp":"2025-10-22 11:04:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:04:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:04:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:04:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":32.839466,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:04:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:04:56"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: eventTypeList (ID: 9)","timestamp":"2025-10-22 11:04:56"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name, category, title, style\r\nFROM api_wf.eventType\r\nORDER BY Hier, name","timestamp":"2025-10-22 11:04:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:04:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:04:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:04:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.199388,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:04:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:04:56"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: qrySqlList (ID: 17)","timestamp":"2025-10-22 11:04:56"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, qryName, qrySQL, description\r\nFROM api_wf.eventSQL\r\nWHERE active = 1\r\nORDER BY qryName","timestamp":"2025-10-22 11:04:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:04:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:04:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:04:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.788121,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:04:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:04:56"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: triggerList (ID: 16)","timestamp":"2025-10-22 11:04:56"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select a.id, a.trigType, content_type, a.is_dom_event, a.name, \r\na.description, a.example \r\nfrom    api_wf.triggers a \r\norder by a.trigType, name","timestamp":"2025-10-22 11:04:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:04:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:04:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-22 11:04:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.315145,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-22 11:04:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:04:56"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: eventTypeList (ID: 9)","timestamp":"2025-10-22 11:04:56"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (73ms)","timestamp":"2025-10-22 11:04:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 29","timestamp":"2025-10-22 11:04:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.938502,"method":"GET","operation":"database_query","rowCount":29,"success":true},"timestamp":"2025-10-22 11:04:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:04:56"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: qrySqlList (ID: 17)","timestamp":"2025-10-22 11:04:56"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (73ms)","timestamp":"2025-10-22 11:04:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 23","timestamp":"2025-10-22 11:04:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.009004,"method":"GET","operation":"database_query","rowCount":23,"success":true},"timestamp":"2025-10-22 11:04:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:04:56"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: triggerList (ID: 16)","timestamp":"2025-10-22 11:04:56"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (73ms)","timestamp":"2025-10-22 11:04:56"}
{"body":{"eventSQLId":"eventTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:05:07"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:05:07"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: eventTypeList","timestamp":"2025-10-22 11:05:07"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:05:07"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:05:07"}
{"body":{"eventSQLId":"qrySqlList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:05:07"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:05:07"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: qrySqlList","timestamp":"2025-10-22 11:05:07"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:05:07"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:05:07"}
{"body":{"eventSQLId":"triggerList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:05:07"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:05:07"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: triggerList","timestamp":"2025-10-22 11:05:07"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:05:07"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:05:07"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:05:07"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":162.977128,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:05:07"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:05:07"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: triggerList (ID: 16)","timestamp":"2025-10-22 11:05:07"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select a.id, a.trigType, content_type, a.is_dom_event, a.name, \r\na.description, a.example \r\nfrom    api_wf.triggers a \r\norder by a.trigType, name","timestamp":"2025-10-22 11:05:07"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:05:07"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:05:07"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:05:07"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":168.810209,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:05:07"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:05:07"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: qrySqlList (ID: 17)","timestamp":"2025-10-22 11:05:07"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, qryName, qrySQL, description\r\nFROM api_wf.eventSQL\r\nWHERE active = 1\r\nORDER BY qryName","timestamp":"2025-10-22 11:05:07"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:05:07"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:05:07"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:05:07"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":186.097813,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:05:07"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:05:07"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: eventTypeList (ID: 9)","timestamp":"2025-10-22 11:05:07"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name, category, title, style\r\nFROM api_wf.eventType\r\nORDER BY Hier, name","timestamp":"2025-10-22 11:05:07"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:05:07"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:05:07"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 23","timestamp":"2025-10-22 11:05:07"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":93.350898,"method":"GET","operation":"database_query","rowCount":23,"success":true},"timestamp":"2025-10-22 11:05:07"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:05:07"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: triggerList (ID: 16)","timestamp":"2025-10-22 11:05:07"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (259ms)","timestamp":"2025-10-22 11:05:07"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 29","timestamp":"2025-10-22 11:05:07"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":106.252167,"method":"GET","operation":"database_query","rowCount":29,"success":true},"timestamp":"2025-10-22 11:05:07"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:05:07"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: qrySqlList (ID: 17)","timestamp":"2025-10-22 11:05:07"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (279ms)","timestamp":"2025-10-22 11:05:07"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-22 11:05:07"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":108.890508,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-22 11:05:07"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:05:07"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: eventTypeList (ID: 9)","timestamp":"2025-10-22 11:05:07"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (298ms)","timestamp":"2025-10-22 11:05:07"}
{"body":{"eventSQLId":"eventTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:05:42"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:05:42"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: eventTypeList","timestamp":"2025-10-22 11:05:42"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:05:42"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:05:42"}
{"body":{"eventSQLId":"qrySqlList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:05:42"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:05:42"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: qrySqlList","timestamp":"2025-10-22 11:05:42"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:05:42"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:05:42"}
{"body":{"eventSQLId":"triggerList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:05:42"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:05:42"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: triggerList","timestamp":"2025-10-22 11:05:42"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:05:42"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:05:42"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:05:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":232.39546,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:05:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:05:43"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: eventTypeList (ID: 9)","timestamp":"2025-10-22 11:05:43"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name, category, title, style\r\nFROM api_wf.eventType\r\nORDER BY Hier, name","timestamp":"2025-10-22 11:05:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:05:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:05:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:05:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":224.815281,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:05:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:05:43"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: qrySqlList (ID: 17)","timestamp":"2025-10-22 11:05:43"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, qryName, qrySQL, description\r\nFROM api_wf.eventSQL\r\nWHERE active = 1\r\nORDER BY qryName","timestamp":"2025-10-22 11:05:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:05:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:05:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:05:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":220.226082,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:05:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:05:43"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: triggerList (ID: 16)","timestamp":"2025-10-22 11:05:43"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select a.id, a.trigType, content_type, a.is_dom_event, a.name, \r\na.description, a.example \r\nfrom    api_wf.triggers a \r\norder by a.trigType, name","timestamp":"2025-10-22 11:05:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:05:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:05:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-22 11:05:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":309.522177,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-22 11:05:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:05:43"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: eventTypeList (ID: 9)","timestamp":"2025-10-22 11:05:43"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (545ms)","timestamp":"2025-10-22 11:05:43"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":544.500517,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-22 11:05:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 29","timestamp":"2025-10-22 11:05:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":309.267971,"method":"GET","operation":"database_query","rowCount":29,"success":true},"timestamp":"2025-10-22 11:05:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:05:43"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: qrySqlList (ID: 17)","timestamp":"2025-10-22 11:05:43"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (537ms)","timestamp":"2025-10-22 11:05:43"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":536.551047,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-22 11:05:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 23","timestamp":"2025-10-22 11:05:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":310.597093,"method":"GET","operation":"database_query","rowCount":23,"success":true},"timestamp":"2025-10-22 11:05:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:05:43"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: triggerList (ID: 16)","timestamp":"2025-10-22 11:05:43"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (533ms)","timestamp":"2025-10-22 11:05:43"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":533.394899,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-22 11:05:43"}
{"body":{"eventSQLId":"eventTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:06:37"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: eventTypeList","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:06:37"}
{"body":{"eventSQLId":"qrySqlList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:06:37"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: qrySqlList","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:06:37"}
{"body":{"eventSQLId":"triggerList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:06:37"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: triggerList","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:06:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:06:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.53908,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: eventTypeList (ID: 9)","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name, category, title, style\r\nFROM api_wf.eventType\r\nORDER BY Hier, name","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:06:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:06:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.260161,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: qrySqlList (ID: 17)","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, qryName, qrySQL, description\r\nFROM api_wf.eventSQL\r\nWHERE active = 1\r\nORDER BY qryName","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:06:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:06:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.547643,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: triggerList (ID: 16)","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select a.id, a.trigType, content_type, a.is_dom_event, a.name, \r\na.description, a.example \r\nfrom    api_wf.triggers a \r\norder by a.trigType, name","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:06:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-22 11:06:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.131956,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:06:37"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: eventTypeList (ID: 9)","timestamp":"2025-10-22 11:06:37"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (78ms)","timestamp":"2025-10-22 11:06:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 29","timestamp":"2025-10-22 11:06:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.253569,"method":"GET","operation":"database_query","rowCount":29,"success":true},"timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:06:37"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: qrySqlList (ID: 17)","timestamp":"2025-10-22 11:06:37"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (81ms)","timestamp":"2025-10-22 11:06:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 23","timestamp":"2025-10-22 11:06:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":44.117693,"method":"GET","operation":"database_query","rowCount":23,"success":true},"timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:06:37"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: triggerList (ID: 16)","timestamp":"2025-10-22 11:06:37"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (82ms)","timestamp":"2025-10-22 11:06:37"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:06:37"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:06:37"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:06:37"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:06:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:06:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":45.758099,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 70\r\nAND   comp_type = 'App'\r\nAND   xref_id <> parent_id  -- exclude root.","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:06:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 11:06:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.661913,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:06:37"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-22 11:06:37"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (82ms)","timestamp":"2025-10-22 11:06:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:06:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":77.329353,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 70\r\nAND   comp_type = 'App'\r\nAND   xref_id <> parent_id  -- exclude root.","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:06:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 11:06:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":72.89994,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 11:06:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:06:37"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-22 11:06:37"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (152ms)","timestamp":"2025-10-22 11:06:37"}
{"body":{"eventSQLId":"eventTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:07:14"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: eventTypeList","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:14"}
{"body":{"eventSQLId":"qrySqlList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:07:14"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: qrySqlList","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:14"}
{"body":{"eventSQLId":"triggerList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:07:14"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: triggerList","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:14"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:07:14"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.702751,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: eventTypeList (ID: 9)","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name, category, title, style\r\nFROM api_wf.eventType\r\nORDER BY Hier, name","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:14"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:07:14"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":41.1163,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: qrySqlList (ID: 17)","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, qryName, qrySQL, description\r\nFROM api_wf.eventSQL\r\nWHERE active = 1\r\nORDER BY qryName","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:14"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:07:14"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":47.041605,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: triggerList (ID: 16)","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select a.id, a.trigType, content_type, a.is_dom_event, a.name, \r\na.description, a.example \r\nfrom    api_wf.triggers a \r\norder by a.trigType, name","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:14"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-22 11:07:14"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":38.839269,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:14"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: eventTypeList (ID: 9)","timestamp":"2025-10-22 11:07:14"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (86ms)","timestamp":"2025-10-22 11:07:14"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 29","timestamp":"2025-10-22 11:07:14"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.776128,"method":"GET","operation":"database_query","rowCount":29,"success":true},"timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:14"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: qrySqlList (ID: 17)","timestamp":"2025-10-22 11:07:14"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (87ms)","timestamp":"2025-10-22 11:07:14"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 23","timestamp":"2025-10-22 11:07:14"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":38.945608,"method":"GET","operation":"database_query","rowCount":23,"success":true},"timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:14"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: triggerList (ID: 16)","timestamp":"2025-10-22 11:07:14"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (94ms)","timestamp":"2025-10-22 11:07:14"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:07:14"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:14"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:07:14"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:14"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:07:14"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":163.873476,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 70\r\nAND   comp_type = 'App'\r\nAND   xref_id <> parent_id  -- exclude root.","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:14"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:07:14"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":168.977611,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 70\r\nAND   comp_type = 'App'\r\nAND   xref_id <> parent_id  -- exclude root.","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:14"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 11:07:14"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":58.349321,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:14"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-22 11:07:14"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (225ms)","timestamp":"2025-10-22 11:07:14"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 11:07:14"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":59.093933,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 11:07:14"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:14"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-22 11:07:14"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (231ms)","timestamp":"2025-10-22 11:07:14"}
{"body":{"values":{"0":{"paramName":"appID","paramVal":"51"},"1":{"paramName":"appName","paramVal":"admin"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-22 11:07:26"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-22 11:07:26"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:26"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:26"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:07:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":189.701034,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:07:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:26"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:26"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:26"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:07:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":204.148969,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:07:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:26"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 11:07:26"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 11:07:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":307.464715,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 11:07:27"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:27"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 11:07:27"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 11:07:27"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":306.180313,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 11:07:27"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:27"}
{"level":"debug","message":"[setVals.js] Set 2 values for pc7900@gmail.com","timestamp":"2025-10-22 11:07:27"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (1010ms)","timestamp":"2025-10-22 11:07:27"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1010.249624,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-22 11:07:27"}
{"body":{"eventSQLId":"pageList","params":{"appID":"51"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:07:27"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:07:27"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: pageList","timestamp":"2025-10-22 11:07:27"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:27"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:27"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:07:27"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":101.62277,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:07:27"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:27"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: pageList (ID: 2)","timestamp":"2025-10-22 11:07:27"}
{"level":"debug","message":"[execEventType.js] Using passed param :appID → 51...","timestamp":"2025-10-22 11:07:27"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 51\r\nAND   comp_type in ('Page','CRUD')","timestamp":"2025-10-22 11:07:27"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:27"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:27"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:07:27"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":196.990085,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:07:27"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:27"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: pageList (ID: 2)","timestamp":"2025-10-22 11:07:27"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (300ms)","timestamp":"2025-10-22 11:07:27"}
{"body":{"values":{"0":{"paramName":"pageID","paramVal":"64"},"1":{"paramName":"pageName","paramVal":"{pageName}"},"2":{"paramName":"xrefID","paramVal":"64"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-22 11:07:32"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-22 11:07:32"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:32"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:32"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:07:33"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":96.764634,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:07:33"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:33"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:33"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:33"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:07:33"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":134.645787,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:07:33"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:33"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 11:07:33"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 11:07:33"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":408.483223,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 11:07:33"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:33"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 11:07:33"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 11:07:33"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":275.886514,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 11:07:33"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:33"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 11:07:33"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 11:07:33"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":409.615252,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 11:07:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:34"}
{"level":"debug","message":"[setVals.js] Set 3 values for pc7900@gmail.com","timestamp":"2025-10-22 11:07:34"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (1329ms)","timestamp":"2025-10-22 11:07:34"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1328.833685,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-22 11:07:34"}
{"body":{"eventSQLId":"xrefHierarchy","params":{"xrefID":"64"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:07:34"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:07:34"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefHierarchy","timestamp":"2025-10-22 11:07:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:07:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":188.442463,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:07:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:34"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefHierarchy (ID: 3)","timestamp":"2025-10-22 11:07:34"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-22 11:07:34"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_structure(64)","timestamp":"2025-10-22 11:07:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-22 11:07:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":194.012374,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 11:07:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:34"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefHierarchy (ID: 3)","timestamp":"2025-10-22 11:07:34"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (384ms)","timestamp":"2025-10-22 11:07:34"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":51}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:07:34"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:07:34"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 11:07:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:07:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":68.816752,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:07:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:34"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 11:07:34"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 51...","timestamp":"2025-10-22 11:07:34"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 51 \r\nAND active = 1","timestamp":"2025-10-22 11:07:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 11:07:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":138.119563,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 11:07:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:34"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 11:07:34"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (208ms)","timestamp":"2025-10-22 11:07:34"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":51}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:07:34"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:07:34"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 11:07:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:07:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":197.708869,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 51...","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 51\r\nORDER BY class, ordr","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:07:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":145.669968,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:35"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 11:07:35"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (345ms)","timestamp":"2025-10-22 11:07:35"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:07:35"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:07:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":65.604649,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 64 \r\nAND active = 1","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-22 11:07:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":100.869283,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:35"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 11:07:35"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (168ms)","timestamp":"2025-10-22 11:07:35"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:07:35"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:07:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":95.853516,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 64\r\nORDER BY class, ordr","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:07:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":104.20334,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:35"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 11:07:35"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (201ms)","timestamp":"2025-10-22 11:07:35"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":65}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:07:35"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:07:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":82.321581,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 65...","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 65 \r\nAND active = 1","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-22 11:07:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":159.62712,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:35"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 11:07:35"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (243ms)","timestamp":"2025-10-22 11:07:35"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":65}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:07:35"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:07:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":68.901393,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 65...","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 65\r\nORDER BY class, ordr","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-22 11:07:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":178.695634,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:36"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 11:07:36"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (249ms)","timestamp":"2025-10-22 11:07:36"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":66}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:07:36"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:36"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:07:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.614709,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 66...","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 66 \r\nAND active = 1","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:36"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:07:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":162.188358,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:36"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 11:07:36"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (199ms)","timestamp":"2025-10-22 11:07:36"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":66}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:07:36"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:36"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:07:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":45.143421,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 66...","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 66\r\nORDER BY class, ordr","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:36"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 11:07:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":250.394003,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:36"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 11:07:36"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (297ms)","timestamp":"2025-10-22 11:07:36"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:07:36"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:36"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:07:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":41.23495,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 67 \r\nAND active = 1","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:36"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 4","timestamp":"2025-10-22 11:07:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":247.900946,"method":"GET","operation":"database_query","rowCount":4,"success":true},"timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:36"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 11:07:36"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (291ms)","timestamp":"2025-10-22 11:07:36"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:07:36"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:36"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:07:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":45.704904,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 67\r\nORDER BY class, ordr","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:36"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:36"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 11:07:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":251.785803,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:37"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 11:07:37"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (299ms)","timestamp":"2025-10-22 11:07:37"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":68}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:07:37"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:07:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":52.387939,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 68...","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 68 \r\nAND active = 1","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-22 11:07:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":145.624204,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:37"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 11:07:37"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (199ms)","timestamp":"2025-10-22 11:07:37"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":68}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:07:37"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:07:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":58.061544,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 68...","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 68\r\nORDER BY class, ordr","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:07:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":185.366132,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:37"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 11:07:37"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (245ms)","timestamp":"2025-10-22 11:07:37"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":69}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:07:37"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:07:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.381556,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 69...","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 69 \r\nAND active = 1","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-22 11:07:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":66.873711,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:37"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-22 11:07:37"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (102ms)","timestamp":"2025-10-22 11:07:37"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":69}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 11:07:37"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 11:07:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":31.858929,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 69...","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 69\r\nORDER BY class, ordr","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 11:07:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 11:07:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":75.736258,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 11:07:37"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-22 11:07:37"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (110ms)","timestamp":"2025-10-22 11:07:37"}
{"level":"debug","message":"[app.js]  Request","method":"GET","path":"/health","timestamp":"2025-10-22 11:07:49"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/favicon.ico","timestamp":"2025-10-22 11:07:49"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-22 11:13:19"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-22 12:13:19"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-22 13:13:19"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-22 14:27:07"}
{"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/util/run-migration","timestamp":"2025-10-22 15:06:39"}
{"level":"http","message":"[runMigration.js] POST /api/util/run-migration","timestamp":"2025-10-22 15:06:39"}
{"level":"info","message":"[runMigration.js] Starting migration script","timestamp":"2025-10-22 15:06:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:06:39]\u001b[0m 🚀 Starting Complete Migration Process","timestamp":"2025-10-22 15:06:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:06:39]\u001b[0m ======================================","timestamp":"2025-10-22 15:06:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:06:39]\u001b[0m Running pre-flight checks...","timestamp":"2025-10-22 15:06:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:06:39]\u001b[0m Tunnel management will be handled by step 00","timestamp":"2025-10-22 15:06:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Pre-flight checks passed","timestamp":"2025-10-22 15:06:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:06:39]\u001b[0m Starting migration with 14 steps...","timestamp":"2025-10-22 15:06:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: ","timestamp":"2025-10-22 15:06:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:06:39]\u001b[0m About to start executing steps...","timestamp":"2025-10-22 15:06:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:06:39]\u001b[0m DEBUG: Testing loop entry...","timestamp":"2025-10-22 15:06:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:06:39]\u001b[0m DEBUG: Number of steps in array: 14","timestamp":"2025-10-22 15:06:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:06:39]\u001b[0m DEBUG: First step: 00_start_tunnels.sh","timestamp":"2025-10-22 15:06:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:06:39]\u001b[0m DEBUG: Starting for loop...","timestamp":"2025-10-22 15:06:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:06:39]\u001b[0m 📍 Step 1/14: 00_start_tunnels.sh","timestamp":"2025-10-22 15:06:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:06:39]\u001b[0m DEBUG: Executing ./migration/steps_v2/00_start_tunnels.sh...","timestamp":"2025-10-22 15:06:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:06:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:06:39]\u001b[0m 🚀 Starting: 00 - Start SSH Tunnels","timestamp":"2025-10-22 15:06:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:06:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:06:39]\u001b[0m Checking SSH tunnel status...","timestamp":"2025-10-22 15:06:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:06:39]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:06:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;31m[ERROR]\u001b[0m Production tunnel not accessible on port 13306","timestamp":"2025-10-22 15:06:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;31m[ERROR]\u001b[0m Run: ./session/start.sh prodServer","timestamp":"2025-10-22 15:06:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:06:39]\u001b[0m Starting SSH tunnel manager...","timestamp":"2025-10-22 15:06:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:06:39]\u001b[0m 🔵 Starting production tunnel...","timestamp":"2025-10-22 15:06:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:06:40]\u001b[0m Creating production tunnel: localhost:13306 -> paul@whatsfresh.app:3306","timestamp":"2025-10-22 15:06:40"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:06:40]\u001b[0m Please enter password for paul@whatsfresh.app when prompted...","timestamp":"2025-10-22 15:06:40"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m ✅ Production tunnel started (PID: 282770)","timestamp":"2025-10-22 15:07:07"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:07]\u001b[0m    Connect with: mysql -h localhost -P 13306 -u paul -p","timestamp":"2025-10-22 15:07:07"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:07]\u001b[0m 🟢 Starting test tunnel...","timestamp":"2025-10-22 15:07:07"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:07]\u001b[0m Creating test tunnel with SSH key: localhost:13307 -> wf_admin@159.223.104.19:3306","timestamp":"2025-10-22 15:07:07"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m ✅ Test tunnel started (PID: 282870)","timestamp":"2025-10-22 15:07:10"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:10]\u001b[0m    Connect with: mysql -h localhost -P 13307 -u wf_admin -p","timestamp":"2025-10-22 15:07:10"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:10]\u001b[0m 📊 Tunnel Status:","timestamp":"2025-10-22 15:07:10"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m 🔵 Production tunnel: ACTIVE (PID: 282770)","timestamp":"2025-10-22 15:07:10"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:10]\u001b[0m    Port: localhost:13306 -> paul@whatsfresh.app:3306","timestamp":"2025-10-22 15:07:10"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m    ✓ Port 13306 is accessible","timestamp":"2025-10-22 15:07:10"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: ","timestamp":"2025-10-22 15:07:10"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m 🟢 Test tunnel: ACTIVE (PID: 282870)","timestamp":"2025-10-22 15:07:10"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:10]\u001b[0m    Port: localhost:13307 -> wf_admin@159.223.104.19:3306","timestamp":"2025-10-22 15:07:10"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m    ✓ Port 13307 is accessible","timestamp":"2025-10-22 15:07:10"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:10]\u001b[0m Waiting 5 seconds for tunnels to establish...","timestamp":"2025-10-22 15:07:10"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:15]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:07:15"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible\n\u001b[0;32m[SUCCESS]\u001b[0m Both SSH tunnels started and accessible\n=================================================================","timestamp":"2025-10-22 15:07:15"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 00 - Start SSH Tunnels - SSH tunnels started successfully\n=================================================================","timestamp":"2025-10-22 15:07:15"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:15]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:07:15"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 1 completed: 00_start_tunnels.sh","timestamp":"2025-10-22 15:07:15"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:15]\u001b[0m 📍 Step 2/14: 01_clear_wf_stage.sh","timestamp":"2025-10-22 15:07:15"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:15]\u001b[0m DEBUG: Executing ./migration/steps_v2/01_clear_wf_stage.sh...","timestamp":"2025-10-22 15:07:15"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:07:15"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:15]\u001b[0m 🚀 Starting: 01 - Clear Staging Database","timestamp":"2025-10-22 15:07:15"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:07:15"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:15]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:07:15"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:07:16"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:17]\u001b[0m Clearing wf_stage database...","timestamp":"2025-10-22 15:07:17"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m wf_stage database cleared successfully","timestamp":"2025-10-22 15:07:20"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 01 - Clear Staging Database - Staging database ready for fresh data\n=================================================================","timestamp":"2025-10-22 15:07:20"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:20]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:07:20"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 2 completed: 01_clear_wf_stage.sh","timestamp":"2025-10-22 15:07:20"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:20]\u001b[0m 📍 Step 3/14: 02_bulk_copy_to_staging.sh","timestamp":"2025-10-22 15:07:20"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:20]\u001b[0m DEBUG: Executing ./migration/steps_v2/02_bulk_copy_to_staging.sh...","timestamp":"2025-10-22 15:07:20"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:07:20"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:20]\u001b[0m 🚀 Starting: 02 - Bulk Copy to Staging","timestamp":"2025-10-22 15:07:20"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:07:20"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:20]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:07:20"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:07:20"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:20]\u001b[0m Bulk copying 17 tables to wf_stage database...","timestamp":"2025-10-22 15:07:20"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:20]\u001b[0m Ensuring wf_stage database exists...","timestamp":"2025-10-22 15:07:20"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:21]\u001b[0m Exporting 17 tables from production...","timestamp":"2025-10-22 15:07:21"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:33]\u001b[0m Bulk export completed successfully","timestamp":"2025-10-22 15:07:33"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:33]\u001b[0m Importing tables to wf_stage database...","timestamp":"2025-10-22 15:07:33"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:56]\u001b[0m Bulk import completed successfully","timestamp":"2025-10-22 15:07:56"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:56]\u001b[0m Removing generated columns from staging tables...","timestamp":"2025-10-22 15:07:56"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Bulk copy completed: 17 tables in 36s","timestamp":"2025-10-22 15:07:57"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 02 - Bulk Copy to Staging - All tables copied to wf_stage and generated columns removed\n=================================================================","timestamp":"2025-10-22 15:07:57"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:57]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:07:57"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 3 completed: 02_bulk_copy_to_staging.sh","timestamp":"2025-10-22 15:07:57"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:57]\u001b[0m 📍 Step 4/14: 03_setup_whatsfresh.sh","timestamp":"2025-10-22 15:07:57"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:57]\u001b[0m DEBUG: Executing ./migration/steps_v2/03_setup_whatsfresh.sh...","timestamp":"2025-10-22 15:07:57"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:07:58"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:58]\u001b[0m 🚀 Starting: 03 - Setup Whatsfresh Database","timestamp":"2025-10-22 15:07:58"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:07:58"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:58]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:07:58"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:07:58"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:58]\u001b[0m Executing procedure: copyToWhatsfresh","timestamp":"2025-10-22 15:07:58"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:07:58]\u001b[0m Description: Clear whatsfresh and copy base tables from wf_stage","timestamp":"2025-10-22 15:07:58"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Procedure copyToWhatsfresh completed in 3s\n=================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 03 - Setup Whatsfresh Database - Base tables copied to whatsfresh successfully","timestamp":"2025-10-22 15:08:01"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:08:01"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:01]\u001b[0m DEBUG: Step returned exit code: 0\n\u001b[0;32m[SUCCESS]\u001b[0m Step 4 completed: 03_setup_whatsfresh.sh\n\n\u001b[0;34m[15:08:01]\u001b[0m 📍 Step 5/14: 04_convertIngrBtch.sh\n\u001b[0;34m[15:08:01]\u001b[0m DEBUG: Executing ./migration/steps_v2/04_convertIngrBtch.sh...","timestamp":"2025-10-22 15:08:01"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:08:01"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:01]\u001b[0m 🚀 Starting: 04 - Convert Ingredient Batches\n=================================================================\n\u001b[0;34m[15:08:01]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:08:01"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:08:01"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:01]\u001b[0m Executing procedure: convertIngrBtch","timestamp":"2025-10-22 15:08:01"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:01]\u001b[0m Description: Converting ingredient batches from production to test format","timestamp":"2025-10-22 15:08:01"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Procedure convertIngrBtch completed in 2s","timestamp":"2025-10-22 15:08:03"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 04 - Convert Ingredient Batches - Ingredient batches converted\n=================================================================","timestamp":"2025-10-22 15:08:03"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:03]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:08:03"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 5 completed: 04_convertIngrBtch.sh","timestamp":"2025-10-22 15:08:03"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:03]\u001b[0m 📍 Step 6/14: 05_convertProd.sh","timestamp":"2025-10-22 15:08:03"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:03]\u001b[0m DEBUG: Executing ./migration/steps_v2/05_convertProd.sh...","timestamp":"2025-10-22 15:08:03"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:08:03"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:03]\u001b[0m 🚀 Starting: 05 - Convert Products","timestamp":"2025-10-22 15:08:03"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:08:03"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:03]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:08:03"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:08:03"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:03]\u001b[0m Executing procedure: convertProd","timestamp":"2025-10-22 15:08:03"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:03]\u001b[0m Description: Converting products from production to test format","timestamp":"2025-10-22 15:08:03"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Procedure convertProd completed in 1s","timestamp":"2025-10-22 15:08:04"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 05 - Convert Products - Products converted\n=================================================================","timestamp":"2025-10-22 15:08:04"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:04]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:08:04"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 6 completed: 05_convertProd.sh","timestamp":"2025-10-22 15:08:04"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: ","timestamp":"2025-10-22 15:08:04"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:04]\u001b[0m 📍 Step 7/14: 06_convertProdBtch.sh","timestamp":"2025-10-22 15:08:04"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:04]\u001b[0m DEBUG: Executing ./migration/steps_v2/06_convertProdBtch.sh...","timestamp":"2025-10-22 15:08:04"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:08:04"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:04]\u001b[0m 🚀 Starting: 06 - Convert Product Batches","timestamp":"2025-10-22 15:08:04"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:08:04"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:04]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:08:04"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:08:04"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:04]\u001b[0m Executing procedure: convertProdBtch","timestamp":"2025-10-22 15:08:04"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:04]\u001b[0m Description: Convert Product Batches from production to test format","timestamp":"2025-10-22 15:08:04"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Procedure convertProdBtch completed in 0s","timestamp":"2025-10-22 15:08:04"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 06 - Convert Product Batches - Convert Product Batches completed\n=================================================================","timestamp":"2025-10-22 15:08:04"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:04]\u001b[0m DEBUG: Step returned exit code: 0\n\u001b[0;32m[SUCCESS]\u001b[0m Step 7 completed: 06_convertProdBtch.sh","timestamp":"2025-10-22 15:08:04"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:04]\u001b[0m 📍 Step 8/14: 07_convertRcpeBtch.sh","timestamp":"2025-10-22 15:08:04"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:04]\u001b[0m DEBUG: Executing ./migration/steps_v2/07_convertRcpeBtch.sh...","timestamp":"2025-10-22 15:08:04"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:08:05"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:05]\u001b[0m 🚀 Starting: 07 - Convert Recipe Batches","timestamp":"2025-10-22 15:08:05"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:08:05"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:05]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:08:05"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:08:05"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:05]\u001b[0m Executing procedure: convertRcpeBtch","timestamp":"2025-10-22 15:08:05"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:05]\u001b[0m Description: Convert Recipe Batches from production to test format","timestamp":"2025-10-22 15:08:05"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Procedure convertRcpeBtch completed in 0s","timestamp":"2025-10-22 15:08:05"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 07 - Convert Recipe Batches - Convert Recipe Batches completed\n=================================================================\n\n\u001b[0;34m[15:08:05]\u001b[0m DEBUG: Step returned exit code: 0\n\u001b[0;32m[SUCCESS]\u001b[0m Step 8 completed: 07_convertRcpeBtch.sh\n\n\u001b[0;34m[15:08:05]\u001b[0m 📍 Step 9/14: 08_convertTaskBtch.sh","timestamp":"2025-10-22 15:08:05"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:05]\u001b[0m DEBUG: Executing ./migration/steps_v2/08_convertTaskBtch.sh...","timestamp":"2025-10-22 15:08:05"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:08:05"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:05]\u001b[0m 🚀 Starting: 08 - Convert Task Batches","timestamp":"2025-10-22 15:08:05"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:08:05"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:05]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:08:05"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:08:05"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:05]\u001b[0m Executing procedure: convertTaskBtch","timestamp":"2025-10-22 15:08:05"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:05]\u001b[0m Description: Convert Task Batches from production to test format","timestamp":"2025-10-22 15:08:05"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Procedure convertTaskBtch completed in 2s","timestamp":"2025-10-22 15:08:07"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 08 - Convert Task Batches - Convert Task Batches completed\n=================================================================","timestamp":"2025-10-22 15:08:07"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:07]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:08:07"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 9 completed: 08_convertTaskBtch.sh","timestamp":"2025-10-22 15:08:07"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:07]\u001b[0m 📍 Step 10/14: 09_convertProdIngr_Map.sh","timestamp":"2025-10-22 15:08:07"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:07]\u001b[0m DEBUG: Executing ./migration/steps_v2/09_convertProdIngr_Map.sh...","timestamp":"2025-10-22 15:08:07"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:08:07"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:07]\u001b[0m 🚀 Starting: 09 - Convert Product Ingredient Mapping","timestamp":"2025-10-22 15:08:07"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:08:07"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:07]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:08:07"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:08:07"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:07]\u001b[0m Executing procedure: convertProdIngr_Map","timestamp":"2025-10-22 15:08:07"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:07]\u001b[0m Description: Convert Product Ingredient Mapping from production to test format","timestamp":"2025-10-22 15:08:07"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Procedure convertProdIngr_Map completed in 17s","timestamp":"2025-10-22 15:08:24"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 09 - Convert Product Ingredient Mapping - Convert Product Ingredient Mapping completed\n=================================================================","timestamp":"2025-10-22 15:08:24"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:24]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:08:24"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 10 completed: 09_convertProdIngr_Map.sh","timestamp":"2025-10-22 15:08:24"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: ","timestamp":"2025-10-22 15:08:24"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:24]\u001b[0m 📍 Step 11/14: 10_createShopEvent.sh","timestamp":"2025-10-22 15:08:24"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:24]\u001b[0m DEBUG: Executing ./migration/steps_v2/10_createShopEvent.sh...","timestamp":"2025-10-22 15:08:24"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:08:24"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:24]\u001b[0m 🚀 Starting: 10 - Create Shop Events","timestamp":"2025-10-22 15:08:24"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:08:24"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:24]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:08:24"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:08:24"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:24]\u001b[0m Executing procedure: createShopEvent","timestamp":"2025-10-22 15:08:24"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:24]\u001b[0m Description: Create Shop Events from production to test format","timestamp":"2025-10-22 15:08:24"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Procedure createShopEvent completed in 1s","timestamp":"2025-10-22 15:08:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 10 - Create Shop Events - Create Shop Events completed\n=================================================================","timestamp":"2025-10-22 15:08:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:25]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:08:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 11 completed: 10_createShopEvent.sh","timestamp":"2025-10-22 15:08:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: ","timestamp":"2025-10-22 15:08:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:25]\u001b[0m 📍 Step 12/14: 11_ConvertMeasureUnits.sh","timestamp":"2025-10-22 15:08:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:25]\u001b[0m DEBUG: Executing ./migration/steps_v2/11_ConvertMeasureUnits.sh...","timestamp":"2025-10-22 15:08:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:08:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:25]\u001b[0m 🚀 Starting: 11 - Create Measure Units","timestamp":"2025-10-22 15:08:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:08:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:25]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:08:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:08:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:25]\u001b[0m Executing procedure: ConvertMeasureUnits","timestamp":"2025-10-22 15:08:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:25]\u001b[0m Description: Create Measure Units from production to test format","timestamp":"2025-10-22 15:08:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Procedure ConvertMeasureUnits completed in 6s","timestamp":"2025-10-22 15:08:31"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 11 - Create Measure Units - Convert Measure Units completed\n=================================================================","timestamp":"2025-10-22 15:08:31"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:31]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:08:31"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 12 completed: 11_ConvertMeasureUnits.sh","timestamp":"2025-10-22 15:08:31"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: ","timestamp":"2025-10-22 15:08:31"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:31]\u001b[0m 📍 Step 13/14: 12_convertIndices.sh","timestamp":"2025-10-22 15:08:31"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:31]\u001b[0m DEBUG: Executing ./migration/steps_v2/12_convertIndices.sh...","timestamp":"2025-10-22 15:08:31"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: ","timestamp":"2025-10-22 15:08:31"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:08:31"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:31]\u001b[0m 🚀 Starting: 12 - Add Indices and active columns","timestamp":"2025-10-22 15:08:31"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:08:31"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:31]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:08:31"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:08:31"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:31]\u001b[0m Executing procedure: convertIndices","timestamp":"2025-10-22 15:08:31"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:31]\u001b[0m Description: Convert Indices from production to test format","timestamp":"2025-10-22 15:08:31"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Procedure convertIndices completed in 11s","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 12 - Add Indices and active columns - Convert Indices completed\n=================================================================","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:42]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 13 completed: 12_convertIndices.sh","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:42]\u001b[0m 📍 Step 14/14: 13_stop_tunnels.sh","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:42]\u001b[0m DEBUG: Executing ./migration/steps_v2/13_stop_tunnels.sh...","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:42]\u001b[0m 🚀 Starting: 13 - Stop SSH Tunnels","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:42]\u001b[0m Stopping SSH tunnels...","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:42]\u001b[0m 🔴 Stopping production tunnel...","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Production tunnel stopped (PID: 282770)","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:42]\u001b[0m 🔴 Stopping test tunnel...","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Test tunnel stopped (PID: 282870)","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m All tunnels stopped","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m SSH tunnels stopped successfully\n=================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 13 - Stop SSH Tunnels - SSH tunnels closed cleanly\n=================================================================","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:42]\u001b[0m Migration cleanup complete","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:42]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 14 completed: 13_stop_tunnels.sh","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: ","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: ","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m 🎉 MIGRATION COMPLETED SUCCESSFULLY!\n=================================================================\n\u001b[0;34m[15:08:42]\u001b[0m 📊 Final Summary:","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:42]\u001b[0m   Total steps: 14","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:42]\u001b[0m   All steps completed successfully","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:42]\u001b[0m   Total duration: 123s","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:42]\u001b[0m   Log file: migration-logs/25-10-22 15:06 migration.log","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: ","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:42]\u001b[0m Next steps:","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:42]\u001b[0m   1. Validate migrated data","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:42]\u001b[0m   2. Test your application with migrated data","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:08:42]\u001b[0m   3. SSH tunnels have been closed automatically","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Migration process complete! 🎊","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[runMigration.js] Migration completed successfully","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"[app.js]  Response: POST /api/util/run-migration 200 (122652ms)","timestamp":"2025-10-22 15:08:42"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":122652.447275,"method":"POST","operation":"http_request","path":"/api/util/run-migration","status":200},"timestamp":"2025-10-22 15:08:42"}
{"body":{"eventSQLId":"eventTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 15:12:34"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 15:12:34"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: eventTypeList","timestamp":"2025-10-22 15:12:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:12:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:12:34"}
{"body":{"eventSQLId":"qrySqlList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 15:12:34"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 15:12:34"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: qrySqlList","timestamp":"2025-10-22 15:12:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:12:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:12:34"}
{"body":{"eventSQLId":"triggerList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 15:12:34"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 15:12:34"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: triggerList","timestamp":"2025-10-22 15:12:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 15:12:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":43.540038,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 15:12:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:12:34"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: eventTypeList (ID: 9)","timestamp":"2025-10-22 15:12:34"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name, category, title, style\r\nFROM api_wf.eventType\r\nORDER BY Hier, name","timestamp":"2025-10-22 15:12:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:12:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:12:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 15:12:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":39.139167,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 15:12:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:12:34"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: qrySqlList (ID: 17)","timestamp":"2025-10-22 15:12:34"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, qryName, qrySQL, description\r\nFROM api_wf.eventSQL\r\nWHERE active = 1\r\nORDER BY qryName","timestamp":"2025-10-22 15:12:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:12:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:12:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-22 15:12:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":136.746087,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-22 15:12:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:12:34"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: eventTypeList (ID: 9)","timestamp":"2025-10-22 15:12:34"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (185ms)","timestamp":"2025-10-22 15:12:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 29","timestamp":"2025-10-22 15:12:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":141.301503,"method":"GET","operation":"database_query","rowCount":29,"success":true},"timestamp":"2025-10-22 15:12:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:12:34"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: qrySqlList (ID: 17)","timestamp":"2025-10-22 15:12:34"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (187ms)","timestamp":"2025-10-22 15:12:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:12:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:12:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 15:12:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":454.605745,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 15:12:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:12:34"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: triggerList (ID: 16)","timestamp":"2025-10-22 15:12:34"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select a.id, a.trigType, content_type, a.is_dom_event, a.name, \r\na.description, a.example \r\nfrom    api_wf.triggers a \r\norder by a.trigType, name","timestamp":"2025-10-22 15:12:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:12:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:12:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 23","timestamp":"2025-10-22 15:12:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":53.351205,"method":"GET","operation":"database_query","rowCount":23,"success":true},"timestamp":"2025-10-22 15:12:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:12:34"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: triggerList (ID: 16)","timestamp":"2025-10-22 15:12:34"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (514ms)","timestamp":"2025-10-22 15:12:34"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":513.556705,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-22 15:12:34"}
{"body":{"eventSQLId":"eventTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 15:12:40"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 15:12:40"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: eventTypeList","timestamp":"2025-10-22 15:12:40"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:12:40"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:12:40"}
{"body":{"eventSQLId":"qrySqlList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 15:12:40"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 15:12:40"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: qrySqlList","timestamp":"2025-10-22 15:12:40"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:12:40"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:12:40"}
{"body":{"eventSQLId":"triggerList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 15:12:40"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 15:12:40"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: triggerList","timestamp":"2025-10-22 15:12:40"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:12:40"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:12:40"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 15:12:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":91.061105,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 15:12:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:12:40"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: triggerList (ID: 16)","timestamp":"2025-10-22 15:12:40"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select a.id, a.trigType, content_type, a.is_dom_event, a.name, \r\na.description, a.example \r\nfrom    api_wf.triggers a \r\norder by a.trigType, name","timestamp":"2025-10-22 15:12:40"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:12:40"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:12:40"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 15:12:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":102.169899,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 15:12:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:12:40"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: eventTypeList (ID: 9)","timestamp":"2025-10-22 15:12:40"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name, category, title, style\r\nFROM api_wf.eventType\r\nORDER BY Hier, name","timestamp":"2025-10-22 15:12:40"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:12:40"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:12:40"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 23","timestamp":"2025-10-22 15:12:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":100.854475,"method":"GET","operation":"database_query","rowCount":23,"success":true},"timestamp":"2025-10-22 15:12:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:12:40"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: triggerList (ID: 16)","timestamp":"2025-10-22 15:12:40"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (197ms)","timestamp":"2025-10-22 15:12:40"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-22 15:12:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":102.714909,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-22 15:12:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:12:40"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: eventTypeList (ID: 9)","timestamp":"2025-10-22 15:12:40"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (209ms)","timestamp":"2025-10-22 15:12:40"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 15:12:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":206.941919,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 15:12:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:12:40"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: qrySqlList (ID: 17)","timestamp":"2025-10-22 15:12:40"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, qryName, qrySQL, description\r\nFROM api_wf.eventSQL\r\nWHERE active = 1\r\nORDER BY qryName","timestamp":"2025-10-22 15:12:40"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:12:40"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:12:40"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 29","timestamp":"2025-10-22 15:12:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":44.174721,"method":"GET","operation":"database_query","rowCount":29,"success":true},"timestamp":"2025-10-22 15:12:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:12:40"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: qrySqlList (ID: 17)","timestamp":"2025-10-22 15:12:40"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (255ms)","timestamp":"2025-10-22 15:12:40"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 15:12:45"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:12:45"}
{"body":{"eventSQLId":"eventTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 15:12:45"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: eventTypeList","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:12:45"}
{"body":{"eventSQLId":"qrySqlList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 15:12:45"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: qrySqlList","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:12:45"}
{"body":{"eventSQLId":"triggerList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 15:12:45"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: triggerList","timestamp":"2025-10-22 15:12:45"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 15:12:45"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-22 15:12:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 15:12:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":43.908,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 70\r\nAND   comp_type = 'App'\r\nAND   xref_id <> parent_id  -- exclude root.","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:12:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 15:12:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.448218,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: qrySqlList (ID: 17)","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, qryName, qrySQL, description\r\nFROM api_wf.eventSQL\r\nWHERE active = 1\r\nORDER BY qryName","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:12:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 15:12:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":74.625774,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: eventTypeList (ID: 9)","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name, category, title, style\r\nFROM api_wf.eventType\r\nORDER BY Hier, name","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:12:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 15:12:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.491292,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:12:45"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-22 15:12:45"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (84ms)","timestamp":"2025-10-22 15:12:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 29","timestamp":"2025-10-22 15:12:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":41.651523,"method":"GET","operation":"database_query","rowCount":29,"success":true},"timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:12:45"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: qrySqlList (ID: 17)","timestamp":"2025-10-22 15:12:45"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (82ms)","timestamp":"2025-10-22 15:12:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-22 15:12:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":68.127916,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:12:45"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: eventTypeList (ID: 9)","timestamp":"2025-10-22 15:12:45"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (148ms)","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:12:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 15:12:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":382.743012,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: triggerList (ID: 16)","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select a.id, a.trigType, content_type, a.is_dom_event, a.name, \r\na.description, a.example \r\nfrom    api_wf.triggers a \r\norder by a.trigType, name","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:12:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 15:12:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":376.341722,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 70\r\nAND   comp_type = 'App'\r\nAND   xref_id <> parent_id  -- exclude root.","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:12:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 15:12:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":62.483285,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:12:45"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-22 15:12:45"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (443ms)","timestamp":"2025-10-22 15:12:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 23","timestamp":"2025-10-22 15:12:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":66.159771,"method":"GET","operation":"database_query","rowCount":23,"success":true},"timestamp":"2025-10-22 15:12:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:12:45"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: triggerList (ID: 16)","timestamp":"2025-10-22 15:12:45"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (453ms)","timestamp":"2025-10-22 15:12:45"}
{"body":{"eventSQLId":"eventTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 15:13:25"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 15:13:25"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: eventTypeList","timestamp":"2025-10-22 15:13:25"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:13:25"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:13:25"}
{"body":{"eventSQLId":"qrySqlList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 15:13:25"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 15:13:25"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: qrySqlList","timestamp":"2025-10-22 15:13:25"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:13:25"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:13:25"}
{"body":{"eventSQLId":"triggerList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 15:13:25"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 15:13:25"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: triggerList","timestamp":"2025-10-22 15:13:25"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:13:25"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:13:25"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 15:13:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":101.573588,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: eventTypeList (ID: 9)","timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name, category, title, style\r\nFROM api_wf.eventType\r\nORDER BY Hier, name","timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:13:26"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 15:13:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":108.008237,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: triggerList (ID: 16)","timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select a.id, a.trigType, content_type, a.is_dom_event, a.name, \r\na.description, a.example \r\nfrom    api_wf.triggers a \r\norder by a.trigType, name","timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:13:26"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-22 15:13:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":32.45807,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:13:26"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: eventTypeList (ID: 9)","timestamp":"2025-10-22 15:13:26"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (139ms)","timestamp":"2025-10-22 15:13:26"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 15:13:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":133.594743,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: qrySqlList (ID: 17)","timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, qryName, qrySQL, description\r\nFROM api_wf.eventSQL\r\nWHERE active = 1\r\nORDER BY qryName","timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:13:26"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 23","timestamp":"2025-10-22 15:13:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":79.716086,"method":"GET","operation":"database_query","rowCount":23,"success":true},"timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:13:26"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: triggerList (ID: 16)","timestamp":"2025-10-22 15:13:26"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (196ms)","timestamp":"2025-10-22 15:13:26"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 29","timestamp":"2025-10-22 15:13:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":161.481273,"method":"GET","operation":"database_query","rowCount":29,"success":true},"timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:13:26"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: qrySqlList (ID: 17)","timestamp":"2025-10-22 15:13:26"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (299ms)","timestamp":"2025-10-22 15:13:26"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 15:13:26"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:13:26"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 15:13:26"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:13:26"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 15:13:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":93.160028,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 70\r\nAND   comp_type = 'App'\r\nAND   xref_id <> parent_id  -- exclude root.","timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:13:26"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 15:13:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":90.603912,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 70\r\nAND   comp_type = 'App'\r\nAND   xref_id <> parent_id  -- exclude root.","timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:13:26"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 15:13:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":93.507048,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:13:26"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-22 15:13:26"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (188ms)","timestamp":"2025-10-22 15:13:26"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-22 15:13:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":198.051008,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-22 15:13:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:13:26"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-22 15:13:26"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (296ms)","timestamp":"2025-10-22 15:13:26"}
{"body":{"eventSQLId":"eventTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 15:13:29"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 15:13:29"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: eventTypeList","timestamp":"2025-10-22 15:13:29"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:13:29"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:13:29"}
{"body":{"eventSQLId":"qrySqlList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 15:13:29"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 15:13:29"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: qrySqlList","timestamp":"2025-10-22 15:13:29"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:13:29"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:13:29"}
{"body":{"eventSQLId":"triggerList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 15:13:29"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 15:13:29"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: triggerList","timestamp":"2025-10-22 15:13:29"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:13:29"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:13:29"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 15:13:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":40.951965,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 15:13:29"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:13:29"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: eventTypeList (ID: 9)","timestamp":"2025-10-22 15:13:29"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name, category, title, style\r\nFROM api_wf.eventType\r\nORDER BY Hier, name","timestamp":"2025-10-22 15:13:29"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:13:29"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:13:29"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 15:13:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":38.63239,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 15:13:29"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:13:29"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: triggerList (ID: 16)","timestamp":"2025-10-22 15:13:29"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select a.id, a.trigType, content_type, a.is_dom_event, a.name, \r\na.description, a.example \r\nfrom    api_wf.triggers a \r\norder by a.trigType, name","timestamp":"2025-10-22 15:13:29"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:13:29"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:13:29"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-22 15:13:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":40.275791,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-22 15:13:29"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:13:29"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: eventTypeList (ID: 9)","timestamp":"2025-10-22 15:13:29"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (86ms)","timestamp":"2025-10-22 15:13:29"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 15:13:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":73.708461,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 15:13:29"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:13:29"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: qrySqlList (ID: 17)","timestamp":"2025-10-22 15:13:29"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, qryName, qrySQL, description\r\nFROM api_wf.eventSQL\r\nWHERE active = 1\r\nORDER BY qryName","timestamp":"2025-10-22 15:13:29"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:13:29"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:13:29"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 29","timestamp":"2025-10-22 15:13:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":59.710822,"method":"GET","operation":"database_query","rowCount":29,"success":true},"timestamp":"2025-10-22 15:13:29"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:13:29"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: qrySqlList (ID: 17)","timestamp":"2025-10-22 15:13:29"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (140ms)","timestamp":"2025-10-22 15:13:29"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 23","timestamp":"2025-10-22 15:13:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":93.06087,"method":"GET","operation":"database_query","rowCount":23,"success":true},"timestamp":"2025-10-22 15:13:29"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:13:29"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: triggerList (ID: 16)","timestamp":"2025-10-22 15:13:29"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (137ms)","timestamp":"2025-10-22 15:13:29"}
{"body":{"password":"********"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/util/run-migration","timestamp":"2025-10-22 15:13:48"}
{"level":"http","message":"[runMigration.js] POST /api/util/run-migration","timestamp":"2025-10-22 15:13:48"}
{"level":"info","message":"[runMigration.js] Starting migration script","timestamp":"2025-10-22 15:13:48"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:13:48]\u001b[0m 🚀 Starting Complete Migration Process","timestamp":"2025-10-22 15:13:48"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:13:48]\u001b[0m ======================================","timestamp":"2025-10-22 15:13:48"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:13:48]\u001b[0m Running pre-flight checks...","timestamp":"2025-10-22 15:13:48"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:13:48]\u001b[0m Tunnel management will be handled by step 00","timestamp":"2025-10-22 15:13:48"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Pre-flight checks passed","timestamp":"2025-10-22 15:13:48"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:13:48]\u001b[0m Starting migration with 14 steps...","timestamp":"2025-10-22 15:13:48"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: ","timestamp":"2025-10-22 15:13:48"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:13:48]\u001b[0m About to start executing steps...","timestamp":"2025-10-22 15:13:48"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:13:48]\u001b[0m DEBUG: Testing loop entry...","timestamp":"2025-10-22 15:13:48"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:13:48]\u001b[0m DEBUG: Number of steps in array: 14","timestamp":"2025-10-22 15:13:48"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:13:48]\u001b[0m DEBUG: First step: 00_start_tunnels.sh","timestamp":"2025-10-22 15:13:48"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:13:48]\u001b[0m DEBUG: Starting for loop...","timestamp":"2025-10-22 15:13:48"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:13:48]\u001b[0m 📍 Step 1/14: 00_start_tunnels.sh","timestamp":"2025-10-22 15:13:48"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:13:48]\u001b[0m DEBUG: Executing ./migration/steps_v2/00_start_tunnels.sh...","timestamp":"2025-10-22 15:13:48"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:13:49"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:13:49]\u001b[0m 🚀 Starting: 00 - Start SSH Tunnels","timestamp":"2025-10-22 15:13:49"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:13:49"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:13:49]\u001b[0m Checking SSH tunnel status...","timestamp":"2025-10-22 15:13:49"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:13:49]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:13:49"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;31m[ERROR]\u001b[0m Production tunnel not accessible on port 13306\n\u001b[0;31m[ERROR]\u001b[0m Run: ./session/start.sh prodServer","timestamp":"2025-10-22 15:13:49"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:13:49]\u001b[0m Starting SSH tunnel manager...","timestamp":"2025-10-22 15:13:49"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:13:49]\u001b[0m 🔵 Starting production tunnel...","timestamp":"2025-10-22 15:13:49"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:13:49]\u001b[0m Creating production tunnel: localhost:13306 -> paul@whatsfresh.app:3306","timestamp":"2025-10-22 15:13:49"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:13:49]\u001b[0m Please enter password for paul@whatsfresh.app when prompted...","timestamp":"2025-10-22 15:13:49"}
{"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/util/run-migration","timestamp":"2025-10-22 15:20:52"}
{"level":"http","message":"[runMigration.js] POST /api/util/run-migration","timestamp":"2025-10-22 15:20:52"}
{"level":"info","message":"[runMigration.js] Starting migration script","timestamp":"2025-10-22 15:20:52"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:20:52]\u001b[0m 🚀 Starting Complete Migration Process","timestamp":"2025-10-22 15:20:52"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:20:52]\u001b[0m ======================================","timestamp":"2025-10-22 15:20:52"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:20:52]\u001b[0m Running pre-flight checks...","timestamp":"2025-10-22 15:20:52"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:20:52]\u001b[0m Tunnel management will be handled by step 00","timestamp":"2025-10-22 15:20:52"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Pre-flight checks passed","timestamp":"2025-10-22 15:20:52"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:20:52]\u001b[0m Starting migration with 14 steps...","timestamp":"2025-10-22 15:20:52"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: ","timestamp":"2025-10-22 15:20:52"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:20:52]\u001b[0m About to start executing steps...","timestamp":"2025-10-22 15:20:52"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:20:52]\u001b[0m DEBUG: Testing loop entry...","timestamp":"2025-10-22 15:20:52"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:20:53]\u001b[0m DEBUG: Number of steps in array: 14","timestamp":"2025-10-22 15:20:53"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:20:53]\u001b[0m DEBUG: First step: 00_start_tunnels.sh","timestamp":"2025-10-22 15:20:53"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:20:53]\u001b[0m DEBUG: Starting for loop...","timestamp":"2025-10-22 15:20:53"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:20:53]\u001b[0m 📍 Step 1/14: 00_start_tunnels.sh","timestamp":"2025-10-22 15:20:53"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:20:53]\u001b[0m DEBUG: Executing ./migration/steps_v2/00_start_tunnels.sh...","timestamp":"2025-10-22 15:20:53"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:20:53"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:20:53]\u001b[0m 🚀 Starting: 00 - Start SSH Tunnels","timestamp":"2025-10-22 15:20:53"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:20:53"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:20:53]\u001b[0m Checking SSH tunnel status...","timestamp":"2025-10-22 15:20:53"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:20:53]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:20:53"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;31m[ERROR]\u001b[0m Production tunnel not accessible on port 13306","timestamp":"2025-10-22 15:20:53"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;31m[ERROR]\u001b[0m Run: ./session/start.sh prodServer","timestamp":"2025-10-22 15:20:53"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:20:53]\u001b[0m Starting SSH tunnel manager...","timestamp":"2025-10-22 15:20:53"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:20:53]\u001b[0m 🔵 Starting production tunnel...","timestamp":"2025-10-22 15:20:53"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:20:53]\u001b[0m Creating production tunnel: localhost:13306 -> paul@whatsfresh.app:3306","timestamp":"2025-10-22 15:20:53"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:20:53]\u001b[0m Please enter password for paul@whatsfresh.app when prompted...","timestamp":"2025-10-22 15:20:53"}
{"level":"error","message":"[runMigration.js] [MIGRATION ERROR]: Connection closed by 134.209.121.192 port 22","timestamp":"2025-10-22 15:21:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;31m[ERROR]\u001b[0m Failed to start SSH tunnels\n=================================================================\n\u001b[0;31m[ERROR]\u001b[0m ❌ Failed: 00 - Start SSH Tunnels - Tunnel startup failed\n=================================================================","timestamp":"2025-10-22 15:21:42"}
{"level":"error","message":"[runMigration.js] Migration failed with exit code 1","timestamp":"2025-10-22 15:21:42"}
{"level":"info","message":"[app.js]  Response: POST /api/util/run-migration 500 (474173ms)","timestamp":"2025-10-22 15:21:42"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":474173.323061,"method":"POST","operation":"http_request","path":"/api/util/run-migration","status":500},"timestamp":"2025-10-22 15:21:42"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-10-22 15:30:26"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-10-22 15:30:27"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-10-22 15:30:27"}
{"level":"debug","message":"[index.js]  Initializing routes","timestamp":"2025-10-22 15:30:27"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-10-22 15:30:27"}
{"0":"POST /api/execEventType","1":"GET /api/eventType/:xrefId","10":"POST /api/clearVals","11":"POST /api/logImpact","12":"GET /api/impacts/recent","13":"GET /api/impacts/batch/:batchId","14":"GET /api/studio/genPageConfig","15":"POST /api/genPageConfig","16":"POST /api/initialize","17":"GET /api/util/list-routes","18":"POST /api/util/restart-server","19":"POST /api/util/run-migration","2":"GET /api/eventTypes","20":"POST /api/util/open-terminal","21":"POST /api/auth/login","22":"GET /api/github/labels","23":"GET /api/github/issues","24":"POST /api/github/issues","25":"GET /api/github/issues/:issue_number/comments","26":"POST /api/github/upload-image","3":"GET /api/triggers","4":"POST /api/execDML","5":"POST /api/execCreateDoc","6":"GET /api/getDoc","7":"POST /api/studio/genFields","8":"GET /api/getVal","9":"POST /api/setVals","level":"info","message":"[registerRoutes.js] Routes registered:","timestamp":"2025-10-22 15:30:27"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-10-22 15:30:27"}
{"level":"debug","message":"[index.js]  Routes initialized","timestamp":"2025-10-22 15:30:27"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-10-22 15:30:27"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-10-22 15:30:27"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-10-22 15:30:27"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-10-22 15:30:27"}
{"body":{"command":"./migration/run.sh","directory":"/home/paul/a-wf-migration"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/util/open-terminal","timestamp":"2025-10-22 15:30:37"}
{"level":"http","message":"[openTerminal.js] POST /api/util/open-terminal","timestamp":"2025-10-22 15:30:37"}
{"level":"info","message":"[openTerminal.js] Opening terminal in /home/paul/a-wf-migration","timestamp":"2025-10-22 15:30:37"}
{"level":"info","message":"[app.js]  Response: POST /api/util/open-terminal 200 (11ms)","timestamp":"2025-10-22 15:30:37"}
{"body":{"eventSQLId":"qrySqlList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 15:35:18"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 15:35:18"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: qrySqlList","timestamp":"2025-10-22 15:35:18"}
{"body":{"eventSQLId":"eventTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 15:35:18"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 15:35:18"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: eventTypeList","timestamp":"2025-10-22 15:35:18"}
{"body":{"eventSQLId":"triggerList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 15:35:18"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 15:35:18"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: triggerList","timestamp":"2025-10-22 15:35:18"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:35:18"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:35:18"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:35:18"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:35:18"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:35:18"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:35:18"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 15:35:18"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":470.93242,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 15:35:18"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:35:18"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: eventTypeList (ID: 9)","timestamp":"2025-10-22 15:35:18"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name, category, title, style\r\nFROM api_wf.eventType\r\nORDER BY Hier, name","timestamp":"2025-10-22 15:35:18"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:35:18"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:35:18"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 15:35:18"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":484.327022,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 15:35:18"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:35:18"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: qrySqlList (ID: 17)","timestamp":"2025-10-22 15:35:18"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, qryName, qrySQL, description\r\nFROM api_wf.eventSQL\r\nWHERE active = 1\r\nORDER BY qryName","timestamp":"2025-10-22 15:35:18"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:35:18"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:35:18"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 15:35:18"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":568.546802,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 15:35:18"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:35:18"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: triggerList (ID: 16)","timestamp":"2025-10-22 15:35:18"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select a.id, a.trigType, content_type, a.is_dom_event, a.name, \r\na.description, a.example \r\nfrom    api_wf.triggers a \r\norder by a.trigType, name","timestamp":"2025-10-22 15:35:18"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:35:18"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:35:18"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-22 15:35:19"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":180.483554,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-22 15:35:19"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:35:19"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: eventTypeList (ID: 9)","timestamp":"2025-10-22 15:35:19"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (659ms)","timestamp":"2025-10-22 15:35:19"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":659.025922,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-22 15:35:19"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 29","timestamp":"2025-10-22 15:35:19"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":181.974257,"method":"GET","operation":"database_query","rowCount":29,"success":true},"timestamp":"2025-10-22 15:35:19"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:35:19"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: qrySqlList (ID: 17)","timestamp":"2025-10-22 15:35:19"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (685ms)","timestamp":"2025-10-22 15:35:19"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":684.996952,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-22 15:35:19"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 23","timestamp":"2025-10-22 15:35:19"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":133.111805,"method":"GET","operation":"database_query","rowCount":23,"success":true},"timestamp":"2025-10-22 15:35:19"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:35:19"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: triggerList (ID: 16)","timestamp":"2025-10-22 15:35:19"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (707ms)","timestamp":"2025-10-22 15:35:19"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":706.653423,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-22 15:35:19"}
{"body":{"command":"./migration/run.sh","directory":"/home/paul/a-wf-migration"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/util/open-terminal","timestamp":"2025-10-22 15:35:24"}
{"level":"http","message":"[openTerminal.js] POST /api/util/open-terminal","timestamp":"2025-10-22 15:35:24"}
{"level":"info","message":"[openTerminal.js] Opening terminal in /home/paul/a-wf-migration","timestamp":"2025-10-22 15:35:24"}
{"level":"info","message":"[app.js]  Response: POST /api/util/open-terminal 200 (7ms)","timestamp":"2025-10-22 15:35:24"}
{"body":{"command":"./migration/run.sh","directory":"/home/paul/a-wf-migration"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/util/open-terminal","timestamp":"2025-10-22 15:36:32"}
{"level":"http","message":"[openTerminal.js] POST /api/util/open-terminal","timestamp":"2025-10-22 15:36:32"}
{"level":"info","message":"[openTerminal.js] Opening terminal in /home/paul/a-wf-migration","timestamp":"2025-10-22 15:36:32"}
{"level":"info","message":"[app.js]  Response: POST /api/util/open-terminal 200 (8ms)","timestamp":"2025-10-22 15:36:32"}
{"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/util/run-migration","timestamp":"2025-10-22 15:36:39"}
{"level":"http","message":"[runMigration.js] POST /api/util/run-migration","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] Starting migration script (SSH tunnels should already be running)","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:39]\u001b[0m 🚀 Starting Complete Migration Process","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:39]\u001b[0m ======================================","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:39]\u001b[0m Running pre-flight checks...","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:39]\u001b[0m Tunnel management will be handled by step 00","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Pre-flight checks passed","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:39]\u001b[0m Starting migration with 14 steps...","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: ","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:39]\u001b[0m About to start executing steps...","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:39]\u001b[0m DEBUG: Testing loop entry...","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:39]\u001b[0m DEBUG: Number of steps in array: 14","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:39]\u001b[0m DEBUG: First step: 00_start_tunnels.sh","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:39]\u001b[0m DEBUG: Starting for loop...","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:39]\u001b[0m 📍 Step 1/14: 00_start_tunnels.sh","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:39]\u001b[0m DEBUG: Executing ./migration/steps_v2/00_start_tunnels.sh...","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:39]\u001b[0m 🚀 Starting: 00 - Start SSH Tunnels","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:39]\u001b[0m Checking SSH tunnel status...","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:39]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:39]\u001b[0m Tunnels already running - skipping tunnel startup","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 00 - Start SSH Tunnels - SSH tunnels confirmed active","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:39]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 1 completed: 00_start_tunnels.sh","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:39]\u001b[0m 📍 Step 2/14: 01_clear_wf_stage.sh","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:39]\u001b[0m DEBUG: Executing ./migration/steps_v2/01_clear_wf_stage.sh...","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:39]\u001b[0m 🚀 Starting: 01 - Clear Staging Database","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:39]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:36:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:40]\u001b[0m Clearing wf_stage database...","timestamp":"2025-10-22 15:36:40"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m wf_stage database cleared successfully","timestamp":"2025-10-22 15:36:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 01 - Clear Staging Database - Staging database ready for fresh data\n=================================================================","timestamp":"2025-10-22 15:36:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:43]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:36:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 2 completed: 01_clear_wf_stage.sh","timestamp":"2025-10-22 15:36:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: ","timestamp":"2025-10-22 15:36:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:43]\u001b[0m 📍 Step 3/14: 02_bulk_copy_to_staging.sh","timestamp":"2025-10-22 15:36:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:43]\u001b[0m DEBUG: Executing ./migration/steps_v2/02_bulk_copy_to_staging.sh...","timestamp":"2025-10-22 15:36:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:36:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:43]\u001b[0m 🚀 Starting: 02 - Bulk Copy to Staging","timestamp":"2025-10-22 15:36:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:36:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:43]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:36:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:36:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:43]\u001b[0m Bulk copying 17 tables to wf_stage database...","timestamp":"2025-10-22 15:36:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:43]\u001b[0m Ensuring wf_stage database exists...","timestamp":"2025-10-22 15:36:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:43]\u001b[0m Exporting 17 tables from production...","timestamp":"2025-10-22 15:36:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:57]\u001b[0m Bulk export completed successfully","timestamp":"2025-10-22 15:36:57"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:36:57]\u001b[0m Importing tables to wf_stage database...","timestamp":"2025-10-22 15:36:57"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:32]\u001b[0m Bulk import completed successfully","timestamp":"2025-10-22 15:37:32"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:32]\u001b[0m Removing generated columns from staging tables...","timestamp":"2025-10-22 15:37:32"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Bulk copy completed: 17 tables in 51s\n=================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 02 - Bulk Copy to Staging - All tables copied to wf_stage and generated columns removed","timestamp":"2025-10-22 15:37:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:37:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:34]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:37:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 3 completed: 02_bulk_copy_to_staging.sh","timestamp":"2025-10-22 15:37:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: ","timestamp":"2025-10-22 15:37:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:34]\u001b[0m 📍 Step 4/14: 03_setup_whatsfresh.sh","timestamp":"2025-10-22 15:37:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:34]\u001b[0m DEBUG: Executing ./migration/steps_v2/03_setup_whatsfresh.sh...","timestamp":"2025-10-22 15:37:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:37:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:34]\u001b[0m 🚀 Starting: 03 - Setup Whatsfresh Database","timestamp":"2025-10-22 15:37:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:37:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:34]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:37:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:37:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:34]\u001b[0m Executing procedure: copyToWhatsfresh","timestamp":"2025-10-22 15:37:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:34]\u001b[0m Description: Clear whatsfresh and copy base tables from wf_stage","timestamp":"2025-10-22 15:37:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Procedure copyToWhatsfresh completed in 3s","timestamp":"2025-10-22 15:37:37"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 03 - Setup Whatsfresh Database - Base tables copied to whatsfresh successfully\n=================================================================","timestamp":"2025-10-22 15:37:37"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:37]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:37:37"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 4 completed: 03_setup_whatsfresh.sh","timestamp":"2025-10-22 15:37:37"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: ","timestamp":"2025-10-22 15:37:37"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:37]\u001b[0m 📍 Step 5/14: 04_convertIngrBtch.sh","timestamp":"2025-10-22 15:37:37"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:37]\u001b[0m DEBUG: Executing ./migration/steps_v2/04_convertIngrBtch.sh...","timestamp":"2025-10-22 15:37:37"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:37:37"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:37]\u001b[0m 🚀 Starting: 04 - Convert Ingredient Batches","timestamp":"2025-10-22 15:37:37"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:37:37"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:37]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:37:37"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:37:37"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:37]\u001b[0m Executing procedure: convertIngrBtch","timestamp":"2025-10-22 15:37:37"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:37]\u001b[0m Description: Converting ingredient batches from production to test format","timestamp":"2025-10-22 15:37:37"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Procedure convertIngrBtch completed in 2s","timestamp":"2025-10-22 15:37:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 04 - Convert Ingredient Batches - Ingredient batches converted\n=================================================================","timestamp":"2025-10-22 15:37:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:39]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:37:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 5 completed: 04_convertIngrBtch.sh","timestamp":"2025-10-22 15:37:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:39]\u001b[0m 📍 Step 6/14: 05_convertProd.sh","timestamp":"2025-10-22 15:37:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:39]\u001b[0m DEBUG: Executing ./migration/steps_v2/05_convertProd.sh...","timestamp":"2025-10-22 15:37:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:37:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:39]\u001b[0m 🚀 Starting: 05 - Convert Products","timestamp":"2025-10-22 15:37:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:37:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:39]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:37:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:37:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:39]\u001b[0m Executing procedure: convertProd","timestamp":"2025-10-22 15:37:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:39]\u001b[0m Description: Converting products from production to test format","timestamp":"2025-10-22 15:37:39"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Procedure convertProd completed in 1s","timestamp":"2025-10-22 15:37:40"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 05 - Convert Products - Products converted\n=================================================================","timestamp":"2025-10-22 15:37:40"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:40]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:37:40"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 6 completed: 05_convertProd.sh","timestamp":"2025-10-22 15:37:40"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: ","timestamp":"2025-10-22 15:37:40"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:40]\u001b[0m 📍 Step 7/14: 06_convertProdBtch.sh","timestamp":"2025-10-22 15:37:40"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:40]\u001b[0m DEBUG: Executing ./migration/steps_v2/06_convertProdBtch.sh...","timestamp":"2025-10-22 15:37:40"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:37:40"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:40]\u001b[0m 🚀 Starting: 06 - Convert Product Batches","timestamp":"2025-10-22 15:37:40"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:37:40"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:40]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:37:40"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:37:40"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:40]\u001b[0m Executing procedure: convertProdBtch","timestamp":"2025-10-22 15:37:40"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:40]\u001b[0m Description: Convert Product Batches from production to test format","timestamp":"2025-10-22 15:37:40"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Procedure convertProdBtch completed in 2s","timestamp":"2025-10-22 15:37:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 06 - Convert Product Batches - Convert Product Batches completed\n=================================================================","timestamp":"2025-10-22 15:37:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:42]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:37:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 7 completed: 06_convertProdBtch.sh","timestamp":"2025-10-22 15:37:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: ","timestamp":"2025-10-22 15:37:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:42]\u001b[0m 📍 Step 8/14: 07_convertRcpeBtch.sh","timestamp":"2025-10-22 15:37:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:42]\u001b[0m DEBUG: Executing ./migration/steps_v2/07_convertRcpeBtch.sh...","timestamp":"2025-10-22 15:37:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:37:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:42]\u001b[0m 🚀 Starting: 07 - Convert Recipe Batches","timestamp":"2025-10-22 15:37:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:37:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:42]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:37:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:37:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:42]\u001b[0m Executing procedure: convertRcpeBtch","timestamp":"2025-10-22 15:37:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:42]\u001b[0m Description: Convert Recipe Batches from production to test format","timestamp":"2025-10-22 15:37:42"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Procedure convertRcpeBtch completed in 1s","timestamp":"2025-10-22 15:37:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 07 - Convert Recipe Batches - Convert Recipe Batches completed\n=================================================================","timestamp":"2025-10-22 15:37:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:43]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:37:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 8 completed: 07_convertRcpeBtch.sh","timestamp":"2025-10-22 15:37:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:43]\u001b[0m 📍 Step 9/14: 08_convertTaskBtch.sh","timestamp":"2025-10-22 15:37:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:43]\u001b[0m DEBUG: Executing ./migration/steps_v2/08_convertTaskBtch.sh...","timestamp":"2025-10-22 15:37:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:37:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:43]\u001b[0m 🚀 Starting: 08 - Convert Task Batches","timestamp":"2025-10-22 15:37:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:37:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:43]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:37:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:37:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:43]\u001b[0m Executing procedure: convertTaskBtch","timestamp":"2025-10-22 15:37:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:43]\u001b[0m Description: Convert Task Batches from production to test format","timestamp":"2025-10-22 15:37:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Procedure convertTaskBtch completed in 2s","timestamp":"2025-10-22 15:37:45"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 08 - Convert Task Batches - Convert Task Batches completed\n=================================================================","timestamp":"2025-10-22 15:37:45"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:45]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:37:45"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 9 completed: 08_convertTaskBtch.sh","timestamp":"2025-10-22 15:37:45"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:45]\u001b[0m 📍 Step 10/14: 09_convertProdIngr_Map.sh","timestamp":"2025-10-22 15:37:45"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:45]\u001b[0m DEBUG: Executing ./migration/steps_v2/09_convertProdIngr_Map.sh...","timestamp":"2025-10-22 15:37:45"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:37:45"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:45]\u001b[0m 🚀 Starting: 09 - Convert Product Ingredient Mapping","timestamp":"2025-10-22 15:37:45"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:37:45"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:45]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:37:45"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:37:45"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:45]\u001b[0m Executing procedure: convertProdIngr_Map","timestamp":"2025-10-22 15:37:45"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:37:46]\u001b[0m Description: Convert Product Ingredient Mapping from production to test format","timestamp":"2025-10-22 15:37:46"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Procedure convertProdIngr_Map completed in 17s","timestamp":"2025-10-22 15:38:03"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 09 - Convert Product Ingredient Mapping - Convert Product Ingredient Mapping completed\n=================================================================","timestamp":"2025-10-22 15:38:03"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:03]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:38:03"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 10 completed: 09_convertProdIngr_Map.sh","timestamp":"2025-10-22 15:38:03"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:03]\u001b[0m 📍 Step 11/14: 10_createShopEvent.sh","timestamp":"2025-10-22 15:38:03"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:03]\u001b[0m DEBUG: Executing ./migration/steps_v2/10_createShopEvent.sh...","timestamp":"2025-10-22 15:38:03"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:38:03"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:03]\u001b[0m 🚀 Starting: 10 - Create Shop Events","timestamp":"2025-10-22 15:38:03"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:38:03"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:03]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:38:03"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:38:04"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:04]\u001b[0m Executing procedure: createShopEvent","timestamp":"2025-10-22 15:38:04"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:04]\u001b[0m Description: Create Shop Events from production to test format","timestamp":"2025-10-22 15:38:04"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Procedure createShopEvent completed in 1s","timestamp":"2025-10-22 15:38:05"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 10 - Create Shop Events - Create Shop Events completed\n=================================================================","timestamp":"2025-10-22 15:38:05"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:05]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:38:05"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 11 completed: 10_createShopEvent.sh","timestamp":"2025-10-22 15:38:05"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:05]\u001b[0m 📍 Step 12/14: 11_ConvertMeasureUnits.sh","timestamp":"2025-10-22 15:38:05"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:05]\u001b[0m DEBUG: Executing ./migration/steps_v2/11_ConvertMeasureUnits.sh...","timestamp":"2025-10-22 15:38:05"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:38:05"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:05]\u001b[0m 🚀 Starting: 11 - Create Measure Units","timestamp":"2025-10-22 15:38:05"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:38:05"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:05]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:38:05"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:38:05"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:05]\u001b[0m Executing procedure: ConvertMeasureUnits","timestamp":"2025-10-22 15:38:05"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:05]\u001b[0m Description: Create Measure Units from production to test format","timestamp":"2025-10-22 15:38:05"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Procedure ConvertMeasureUnits completed in 6s","timestamp":"2025-10-22 15:38:11"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 11 - Create Measure Units - Convert Measure Units completed\n=================================================================","timestamp":"2025-10-22 15:38:11"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:11]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:38:11"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 12 completed: 11_ConvertMeasureUnits.sh","timestamp":"2025-10-22 15:38:11"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:11]\u001b[0m 📍 Step 13/14: 12_convertIndices.sh","timestamp":"2025-10-22 15:38:11"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:11]\u001b[0m DEBUG: Executing ./migration/steps_v2/12_convertIndices.sh...","timestamp":"2025-10-22 15:38:11"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:38:11"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:11]\u001b[0m 🚀 Starting: 12 - Add Indices and active columns","timestamp":"2025-10-22 15:38:11"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:38:11"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:11]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:38:11"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:38:11"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:11]\u001b[0m Executing procedure: convertIndices","timestamp":"2025-10-22 15:38:11"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:11]\u001b[0m Description: Convert Indices from production to test format","timestamp":"2025-10-22 15:38:11"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Procedure convertIndices completed in 14s","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 12 - Add Indices and active columns - Convert Indices completed\n=================================================================","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:25]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 13 completed: 12_convertIndices.sh","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:25]\u001b[0m 📍 Step 14/14: 13_stop_tunnels.sh","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:25]\u001b[0m DEBUG: Executing ./migration/steps_v2/13_stop_tunnels.sh...","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:25]\u001b[0m 🚀 Starting: 13 - Stop SSH Tunnels","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:25]\u001b[0m Stopping SSH tunnels...","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:25]\u001b[0m 🔴 Stopping production tunnel...","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Production tunnel stopped (PID: 287332)","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:25]\u001b[0m 🔴 Stopping test tunnel...","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Test tunnel stopped (PID: 287352)","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m All tunnels stopped","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m SSH tunnels stopped successfully\n=================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 13 - Stop SSH Tunnels - SSH tunnels closed cleanly\n=================================================================","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:25]\u001b[0m Migration cleanup complete","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:25]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 14 completed: 13_stop_tunnels.sh","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m 🎉 MIGRATION COMPLETED SUCCESSFULLY!","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:25]\u001b[0m 📊 Final Summary:","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:25]\u001b[0m   Total steps: 14","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:25]\u001b[0m   All steps completed successfully","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:25]\u001b[0m   Total duration: 106s","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:25]\u001b[0m   Log file: migration-logs/25-10-22 15:36 migration.log","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: ","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:25]\u001b[0m Next steps:","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:25]\u001b[0m   1. Validate migrated data","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:25]\u001b[0m   2. Test your application with migrated data","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:38:25]\u001b[0m   3. SSH tunnels have been closed automatically","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Migration process complete! 🎊","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[runMigration.js] Migration completed successfully","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"[app.js]  Response: POST /api/util/run-migration 200 (106716ms)","timestamp":"2025-10-22 15:38:25"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":106715.554707,"method":"POST","operation":"http_request","path":"/api/util/run-migration","status":200},"timestamp":"2025-10-22 15:38:25"}
{"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/util/run-migration","timestamp":"2025-10-22 15:43:40"}
{"level":"http","message":"[runMigration.js] POST /api/util/run-migration","timestamp":"2025-10-22 15:43:40"}
{"level":"info","message":"[runMigration.js] Starting migration script (SSH tunnels should already be running)","timestamp":"2025-10-22 15:43:40"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:43:40]\u001b[0m 🚀 Starting Complete Migration Process","timestamp":"2025-10-22 15:43:40"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:43:40]\u001b[0m ======================================","timestamp":"2025-10-22 15:43:40"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:43:40]\u001b[0m Running pre-flight checks...","timestamp":"2025-10-22 15:43:40"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:43:40]\u001b[0m Tunnel management will be handled by step 00","timestamp":"2025-10-22 15:43:40"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Pre-flight checks passed","timestamp":"2025-10-22 15:43:41"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:43:41]\u001b[0m Starting migration with 14 steps...","timestamp":"2025-10-22 15:43:41"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: ","timestamp":"2025-10-22 15:43:41"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:43:41]\u001b[0m About to start executing steps...","timestamp":"2025-10-22 15:43:41"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:43:41]\u001b[0m DEBUG: Testing loop entry...","timestamp":"2025-10-22 15:43:41"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:43:41]\u001b[0m DEBUG: Number of steps in array: 14","timestamp":"2025-10-22 15:43:41"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:43:41]\u001b[0m DEBUG: First step: 00_start_tunnels.sh","timestamp":"2025-10-22 15:43:41"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:43:41]\u001b[0m DEBUG: Starting for loop...","timestamp":"2025-10-22 15:43:41"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:43:41]\u001b[0m 📍 Step 1/14: 00_start_tunnels.sh","timestamp":"2025-10-22 15:43:41"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:43:41]\u001b[0m DEBUG: Executing ./migration/steps_v2/00_start_tunnels.sh...","timestamp":"2025-10-22 15:43:41"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:43:41"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:43:41]\u001b[0m 🚀 Starting: 00 - Start SSH Tunnels","timestamp":"2025-10-22 15:43:41"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:43:41"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:43:41]\u001b[0m Checking SSH tunnel status...","timestamp":"2025-10-22 15:43:41"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:43:41]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:43:41"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;31m[ERROR]\u001b[0m Production tunnel not accessible on port 13306","timestamp":"2025-10-22 15:43:41"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;31m[ERROR]\u001b[0m Run: ./session/start.sh prodServer","timestamp":"2025-10-22 15:43:41"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:43:41]\u001b[0m Starting SSH tunnel manager...","timestamp":"2025-10-22 15:43:41"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:43:41]\u001b[0m 🔵 Starting production tunnel...","timestamp":"2025-10-22 15:43:41"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:43:41]\u001b[0m Creating production tunnel: localhost:13306 -> paul@whatsfresh.app:3306","timestamp":"2025-10-22 15:43:41"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:43:41]\u001b[0m Please enter password for paul@whatsfresh.app when prompted...","timestamp":"2025-10-22 15:43:41"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m ✅ Production tunnel started (PID: 292197)","timestamp":"2025-10-22 15:44:23"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:44:23]\u001b[0m    Connect with: mysql -h localhost -P 13306 -u paul -p","timestamp":"2025-10-22 15:44:23"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:44:23]\u001b[0m 🟢 Starting test tunnel...","timestamp":"2025-10-22 15:44:23"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:44:23]\u001b[0m Creating test tunnel with SSH key: localhost:13307 -> wf_admin@159.223.104.19:3306","timestamp":"2025-10-22 15:44:23"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m ✅ Test tunnel started (PID: 292217)","timestamp":"2025-10-22 15:44:26"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:44:26]\u001b[0m    Connect with: mysql -h localhost -P 13307 -u wf_admin -p","timestamp":"2025-10-22 15:44:26"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:44:26]\u001b[0m 📊 Tunnel Status:","timestamp":"2025-10-22 15:44:26"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m 🔵 Production tunnel: ACTIVE (PID: 292197)","timestamp":"2025-10-22 15:44:26"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:44:26]\u001b[0m    Port: localhost:13306 -> paul@whatsfresh.app:3306","timestamp":"2025-10-22 15:44:26"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m    ✓ Port 13306 is accessible","timestamp":"2025-10-22 15:44:26"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m 🟢 Test tunnel: ACTIVE (PID: 292217)","timestamp":"2025-10-22 15:44:26"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:44:26]\u001b[0m    Port: localhost:13307 -> wf_admin@159.223.104.19:3306","timestamp":"2025-10-22 15:44:26"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m    ✓ Port 13307 is accessible","timestamp":"2025-10-22 15:44:26"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:44:26]\u001b[0m Waiting 5 seconds for tunnels to establish...","timestamp":"2025-10-22 15:44:26"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:44:31]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:44:31"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:44:31"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both SSH tunnels started and accessible\n=================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 00 - Start SSH Tunnels - SSH tunnels started successfully\n=================================================================","timestamp":"2025-10-22 15:44:31"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:44:31]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:44:32"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 1 completed: 00_start_tunnels.sh","timestamp":"2025-10-22 15:44:32"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:44:32]\u001b[0m 📍 Step 2/14: 01_clear_wf_stage.sh","timestamp":"2025-10-22 15:44:32"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:44:32]\u001b[0m DEBUG: Executing ./migration/steps_v2/01_clear_wf_stage.sh...","timestamp":"2025-10-22 15:44:32"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:44:32"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:44:32]\u001b[0m 🚀 Starting: 01 - Clear Staging Database","timestamp":"2025-10-22 15:44:32"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:44:32"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:44:32]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:44:32"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:44:32"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:44:33]\u001b[0m Clearing wf_stage database...","timestamp":"2025-10-22 15:44:33"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m wf_stage database cleared successfully","timestamp":"2025-10-22 15:44:36"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 01 - Clear Staging Database - Staging database ready for fresh data\n=================================================================","timestamp":"2025-10-22 15:44:36"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:44:36]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:44:36"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 2 completed: 01_clear_wf_stage.sh","timestamp":"2025-10-22 15:44:36"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:44:36]\u001b[0m 📍 Step 3/14: 02_bulk_copy_to_staging.sh","timestamp":"2025-10-22 15:44:36"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:44:36]\u001b[0m DEBUG: Executing ./migration/steps_v2/02_bulk_copy_to_staging.sh...","timestamp":"2025-10-22 15:44:36"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:44:36"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:44:36]\u001b[0m 🚀 Starting: 02 - Bulk Copy to Staging","timestamp":"2025-10-22 15:44:36"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:44:36"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:44:36]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:44:36"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:44:36"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:44:36]\u001b[0m Bulk copying 17 tables to wf_stage database...","timestamp":"2025-10-22 15:44:36"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:44:36]\u001b[0m Ensuring wf_stage database exists...","timestamp":"2025-10-22 15:44:36"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:44:37]\u001b[0m Exporting 17 tables from production...","timestamp":"2025-10-22 15:44:37"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:44:48]\u001b[0m Bulk export completed successfully","timestamp":"2025-10-22 15:44:48"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:44:48]\u001b[0m Importing tables to wf_stage database...","timestamp":"2025-10-22 15:44:48"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:16]\u001b[0m Bulk import completed successfully","timestamp":"2025-10-22 15:45:16"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:16]\u001b[0m Removing generated columns from staging tables...","timestamp":"2025-10-22 15:45:16"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Bulk copy completed: 17 tables in 40s","timestamp":"2025-10-22 15:45:17"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 02 - Bulk Copy to Staging - All tables copied to wf_stage and generated columns removed\n=================================================================","timestamp":"2025-10-22 15:45:17"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:17]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:45:17"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 3 completed: 02_bulk_copy_to_staging.sh","timestamp":"2025-10-22 15:45:17"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:17]\u001b[0m 📍 Step 4/14: 03_setup_whatsfresh.sh","timestamp":"2025-10-22 15:45:17"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:17]\u001b[0m DEBUG: Executing ./migration/steps_v2/03_setup_whatsfresh.sh...","timestamp":"2025-10-22 15:45:17"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:45:18"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:18]\u001b[0m 🚀 Starting: 03 - Setup Whatsfresh Database","timestamp":"2025-10-22 15:45:18"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:45:18"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:18]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:45:18"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:45:18"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:18]\u001b[0m Executing procedure: copyToWhatsfresh","timestamp":"2025-10-22 15:45:18"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:18]\u001b[0m Description: Clear whatsfresh and copy base tables from wf_stage","timestamp":"2025-10-22 15:45:18"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Procedure copyToWhatsfresh completed in 3s","timestamp":"2025-10-22 15:45:21"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 03 - Setup Whatsfresh Database - Base tables copied to whatsfresh successfully\n=================================================================","timestamp":"2025-10-22 15:45:21"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:21]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:45:21"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 4 completed: 03_setup_whatsfresh.sh","timestamp":"2025-10-22 15:45:21"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:21]\u001b[0m 📍 Step 5/14: 04_convertIngrBtch.sh","timestamp":"2025-10-22 15:45:21"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:21]\u001b[0m DEBUG: Executing ./migration/steps_v2/04_convertIngrBtch.sh...","timestamp":"2025-10-22 15:45:21"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:45:21"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:21]\u001b[0m 🚀 Starting: 04 - Convert Ingredient Batches","timestamp":"2025-10-22 15:45:21"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:45:21"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:21]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:45:21"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:45:21"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:21]\u001b[0m Executing procedure: convertIngrBtch","timestamp":"2025-10-22 15:45:21"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:21]\u001b[0m Description: Converting ingredient batches from production to test format","timestamp":"2025-10-22 15:45:21"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Procedure convertIngrBtch completed in 1s","timestamp":"2025-10-22 15:45:22"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 04 - Convert Ingredient Batches - Ingredient batches converted\n=================================================================","timestamp":"2025-10-22 15:45:22"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:22]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:45:22"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 5 completed: 04_convertIngrBtch.sh","timestamp":"2025-10-22 15:45:22"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:22]\u001b[0m 📍 Step 6/14: 05_convertProd.sh","timestamp":"2025-10-22 15:45:22"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:22]\u001b[0m DEBUG: Executing ./migration/steps_v2/05_convertProd.sh...","timestamp":"2025-10-22 15:45:22"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:45:22"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:22]\u001b[0m 🚀 Starting: 05 - Convert Products","timestamp":"2025-10-22 15:45:22"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:45:22"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:22]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:45:22"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:45:22"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:22]\u001b[0m Executing procedure: convertProd","timestamp":"2025-10-22 15:45:22"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:22]\u001b[0m Description: Converting products from production to test format","timestamp":"2025-10-22 15:45:22"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Procedure convertProd completed in 0s","timestamp":"2025-10-22 15:45:22"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 05 - Convert Products - Products converted\n=================================================================","timestamp":"2025-10-22 15:45:22"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:22]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:45:22"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 6 completed: 05_convertProd.sh","timestamp":"2025-10-22 15:45:22"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:22]\u001b[0m 📍 Step 7/14: 06_convertProdBtch.sh","timestamp":"2025-10-22 15:45:22"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:22]\u001b[0m DEBUG: Executing ./migration/steps_v2/06_convertProdBtch.sh...","timestamp":"2025-10-22 15:45:22"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:45:22"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:22]\u001b[0m 🚀 Starting: 06 - Convert Product Batches","timestamp":"2025-10-22 15:45:22"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:45:22"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:22]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:45:22"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:45:22"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:22]\u001b[0m Executing procedure: convertProdBtch","timestamp":"2025-10-22 15:45:22"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:22]\u001b[0m Description: Convert Product Batches from production to test format","timestamp":"2025-10-22 15:45:22"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Procedure convertProdBtch completed in 1s","timestamp":"2025-10-22 15:45:23"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 06 - Convert Product Batches - Convert Product Batches completed\n=================================================================","timestamp":"2025-10-22 15:45:23"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:23]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:45:23"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 7 completed: 06_convertProdBtch.sh","timestamp":"2025-10-22 15:45:23"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:23]\u001b[0m 📍 Step 8/14: 07_convertRcpeBtch.sh","timestamp":"2025-10-22 15:45:23"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:23]\u001b[0m DEBUG: Executing ./migration/steps_v2/07_convertRcpeBtch.sh...","timestamp":"2025-10-22 15:45:23"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:45:23"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:23]\u001b[0m 🚀 Starting: 07 - Convert Recipe Batches","timestamp":"2025-10-22 15:45:23"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:45:23"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:23]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:45:23"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:45:23"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:23]\u001b[0m Executing procedure: convertRcpeBtch","timestamp":"2025-10-22 15:45:23"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:23]\u001b[0m Description: Convert Recipe Batches from production to test format","timestamp":"2025-10-22 15:45:23"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Procedure convertRcpeBtch completed in 1s","timestamp":"2025-10-22 15:45:24"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 07 - Convert Recipe Batches - Convert Recipe Batches completed\n=================================================================","timestamp":"2025-10-22 15:45:24"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:24]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:45:24"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 8 completed: 07_convertRcpeBtch.sh","timestamp":"2025-10-22 15:45:24"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:24]\u001b[0m 📍 Step 9/14: 08_convertTaskBtch.sh","timestamp":"2025-10-22 15:45:24"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:24]\u001b[0m DEBUG: Executing ./migration/steps_v2/08_convertTaskBtch.sh...","timestamp":"2025-10-22 15:45:24"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:45:24"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:24]\u001b[0m 🚀 Starting: 08 - Convert Task Batches","timestamp":"2025-10-22 15:45:24"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:45:24"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:24]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:45:24"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:45:24"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:24]\u001b[0m Executing procedure: convertTaskBtch","timestamp":"2025-10-22 15:45:24"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:24]\u001b[0m Description: Convert Task Batches from production to test format","timestamp":"2025-10-22 15:45:24"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Procedure convertTaskBtch completed in 1s","timestamp":"2025-10-22 15:45:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 08 - Convert Task Batches - Convert Task Batches completed\n=================================================================","timestamp":"2025-10-22 15:45:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:25]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:45:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 9 completed: 08_convertTaskBtch.sh","timestamp":"2025-10-22 15:45:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:25]\u001b[0m 📍 Step 10/14: 09_convertProdIngr_Map.sh","timestamp":"2025-10-22 15:45:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:25]\u001b[0m DEBUG: Executing ./migration/steps_v2/09_convertProdIngr_Map.sh...","timestamp":"2025-10-22 15:45:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:45:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:25]\u001b[0m 🚀 Starting: 09 - Convert Product Ingredient Mapping","timestamp":"2025-10-22 15:45:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:45:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:25]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:45:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:45:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:25]\u001b[0m Executing procedure: convertProdIngr_Map","timestamp":"2025-10-22 15:45:25"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:25]\u001b[0m Description: Convert Product Ingredient Mapping from production to test format","timestamp":"2025-10-22 15:45:25"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-22 15:45:26"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Procedure convertProdIngr_Map completed in 18s","timestamp":"2025-10-22 15:45:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 09 - Convert Product Ingredient Mapping - Convert Product Ingredient Mapping completed\n=================================================================","timestamp":"2025-10-22 15:45:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:43]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:45:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 10 completed: 09_convertProdIngr_Map.sh","timestamp":"2025-10-22 15:45:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:43]\u001b[0m 📍 Step 11/14: 10_createShopEvent.sh","timestamp":"2025-10-22 15:45:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:43]\u001b[0m DEBUG: Executing ./migration/steps_v2/10_createShopEvent.sh...","timestamp":"2025-10-22 15:45:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:45:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:43]\u001b[0m 🚀 Starting: 10 - Create Shop Events","timestamp":"2025-10-22 15:45:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:45:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:43]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:45:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:45:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:43]\u001b[0m Executing procedure: createShopEvent","timestamp":"2025-10-22 15:45:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:43]\u001b[0m Description: Create Shop Events from production to test format","timestamp":"2025-10-22 15:45:43"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Procedure createShopEvent completed in 1s","timestamp":"2025-10-22 15:45:44"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 10 - Create Shop Events - Create Shop Events completed\n=================================================================","timestamp":"2025-10-22 15:45:44"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:44]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:45:44"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 11 completed: 10_createShopEvent.sh","timestamp":"2025-10-22 15:45:44"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:44]\u001b[0m 📍 Step 12/14: 11_ConvertMeasureUnits.sh","timestamp":"2025-10-22 15:45:44"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:44]\u001b[0m DEBUG: Executing ./migration/steps_v2/11_ConvertMeasureUnits.sh...","timestamp":"2025-10-22 15:45:44"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:45:45"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:45]\u001b[0m 🚀 Starting: 11 - Create Measure Units","timestamp":"2025-10-22 15:45:45"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:45:45"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:45]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:45:45"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:45:45"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:45]\u001b[0m Executing procedure: ConvertMeasureUnits","timestamp":"2025-10-22 15:45:45"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:45]\u001b[0m Description: Create Measure Units from production to test format","timestamp":"2025-10-22 15:45:45"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Procedure ConvertMeasureUnits completed in 4s","timestamp":"2025-10-22 15:45:49"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 11 - Create Measure Units - Convert Measure Units completed\n=================================================================","timestamp":"2025-10-22 15:45:49"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:49]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:45:49"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 12 completed: 11_ConvertMeasureUnits.sh","timestamp":"2025-10-22 15:45:49"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:49]\u001b[0m 📍 Step 13/14: 12_convertIndices.sh","timestamp":"2025-10-22 15:45:49"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:49]\u001b[0m DEBUG: Executing ./migration/steps_v2/12_convertIndices.sh...","timestamp":"2025-10-22 15:45:49"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:45:49"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:49]\u001b[0m 🚀 Starting: 12 - Add Indices and active columns","timestamp":"2025-10-22 15:45:49"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:45:49"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:49]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:45:49"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Both tunnels are accessible","timestamp":"2025-10-22 15:45:49"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:49]\u001b[0m Executing procedure: convertIndices","timestamp":"2025-10-22 15:45:49"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:45:49]\u001b[0m Description: Convert Indices from production to test format","timestamp":"2025-10-22 15:45:49"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Procedure convertIndices completed in 11s\n=================================================================","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 12 - Add Indices and active columns - Convert Indices completed\n=================================================================","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:46:00]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 13 completed: 12_convertIndices.sh","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:46:00]\u001b[0m 📍 Step 14/14: 13_stop_tunnels.sh","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:46:00]\u001b[0m DEBUG: Executing ./migration/steps_v2/13_stop_tunnels.sh...","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:46:00]\u001b[0m 🚀 Starting: 13 - Stop SSH Tunnels","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:46:00]\u001b[0m Stopping SSH tunnels...","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:46:00]\u001b[0m 🔴 Stopping production tunnel...","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Production tunnel stopped (PID: 292197)","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:46:00]\u001b[0m 🔴 Stopping test tunnel...","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Test tunnel stopped (PID: 292217)","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m All tunnels stopped","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m SSH tunnels stopped successfully\n=================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m ✅ Completed: 13 - Stop SSH Tunnels - SSH tunnels closed cleanly\n=================================================================","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:46:00]\u001b[0m Migration cleanup complete","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:46:00]\u001b[0m DEBUG: Step returned exit code: 0","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Step 14 completed: 13_stop_tunnels.sh","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================\n\u001b[0;32m[SUCCESS]\u001b[0m 🎉 MIGRATION COMPLETED SUCCESSFULLY!","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:46:00]\u001b[0m 📊 Final Summary:","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:46:00]\u001b[0m   Total steps: 14","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:46:00]\u001b[0m   All steps completed successfully","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:46:00]\u001b[0m   Total duration: 140s","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:46:00]\u001b[0m   Log file: migration-logs/25-10-22 15:43 migration.log","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: ","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:46:00]\u001b[0m Next steps:","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:46:00]\u001b[0m   1. Validate migrated data","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:46:00]\u001b[0m   2. Test your application with migrated data","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:46:00]\u001b[0m   3. SSH tunnels have been closed automatically","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: ","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Migration process complete! 🎊","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[runMigration.js] Migration completed successfully","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"[app.js]  Response: POST /api/util/run-migration 200 (139575ms)","timestamp":"2025-10-22 15:46:00"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":139575.019706,"method":"POST","operation":"http_request","path":"/api/util/run-migration","status":200},"timestamp":"2025-10-22 15:46:00"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:46:03"}
{"level":"warn","message":"[server.js] Route not found: GET /api/util/migration-status","timestamp":"2025-10-22 15:46:03"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 404 (2ms)","timestamp":"2025-10-22 15:46:03"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.00582,"method":"GET","operation":"http_request","path":"/api/util/migration-status","status":404},"timestamp":"2025-10-22 15:46:03"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:46:05"}
{"level":"warn","message":"[server.js] Route not found: GET /api/util/migration-status","timestamp":"2025-10-22 15:46:05"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 404 (2ms)","timestamp":"2025-10-22 15:46:05"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.952746,"method":"GET","operation":"http_request","path":"/api/util/migration-status","status":404},"timestamp":"2025-10-22 15:46:05"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:46:07"}
{"level":"warn","message":"[server.js] Route not found: GET /api/util/migration-status","timestamp":"2025-10-22 15:46:07"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 404 (1ms)","timestamp":"2025-10-22 15:46:07"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.835541,"method":"GET","operation":"http_request","path":"/api/util/migration-status","status":404},"timestamp":"2025-10-22 15:46:07"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:46:09"}
{"level":"warn","message":"[server.js] Route not found: GET /api/util/migration-status","timestamp":"2025-10-22 15:46:09"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 404 (2ms)","timestamp":"2025-10-22 15:46:09"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.88235,"method":"GET","operation":"http_request","path":"/api/util/migration-status","status":404},"timestamp":"2025-10-22 15:46:09"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:46:11"}
{"level":"warn","message":"[server.js] Route not found: GET /api/util/migration-status","timestamp":"2025-10-22 15:46:11"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 404 (1ms)","timestamp":"2025-10-22 15:46:11"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.150827,"method":"GET","operation":"http_request","path":"/api/util/migration-status","status":404},"timestamp":"2025-10-22 15:46:11"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:46:13"}
{"level":"warn","message":"[server.js] Route not found: GET /api/util/migration-status","timestamp":"2025-10-22 15:46:13"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 404 (1ms)","timestamp":"2025-10-22 15:46:13"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.988102,"method":"GET","operation":"http_request","path":"/api/util/migration-status","status":404},"timestamp":"2025-10-22 15:46:13"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:46:30"}
{"level":"warn","message":"[server.js] Route not found: GET /api/util/migration-status","timestamp":"2025-10-22 15:46:30"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 404 (2ms)","timestamp":"2025-10-22 15:46:30"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.278119,"method":"GET","operation":"http_request","path":"/api/util/migration-status","status":404},"timestamp":"2025-10-22 15:46:30"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:47:30"}
{"level":"warn","message":"[server.js] Route not found: GET /api/util/migration-status","timestamp":"2025-10-22 15:47:30"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 404 (2ms)","timestamp":"2025-10-22 15:47:30"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.767103,"method":"GET","operation":"http_request","path":"/api/util/migration-status","status":404},"timestamp":"2025-10-22 15:47:30"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:48:30"}
{"level":"warn","message":"[server.js] Route not found: GET /api/util/migration-status","timestamp":"2025-10-22 15:48:30"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 404 (1ms)","timestamp":"2025-10-22 15:48:30"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.492786,"method":"GET","operation":"http_request","path":"/api/util/migration-status","status":404},"timestamp":"2025-10-22 15:48:30"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:49:25"}
{"level":"warn","message":"[server.js] Route not found: GET /api/util/migration-status","timestamp":"2025-10-22 15:49:25"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 404 (1ms)","timestamp":"2025-10-22 15:49:25"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.176963,"method":"GET","operation":"http_request","path":"/api/util/migration-status","status":404},"timestamp":"2025-10-22 15:49:25"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:49:26"}
{"level":"warn","message":"[server.js] Route not found: GET /api/util/migration-status","timestamp":"2025-10-22 15:49:26"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 404 (1ms)","timestamp":"2025-10-22 15:49:26"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.15491,"method":"GET","operation":"http_request","path":"/api/util/migration-status","status":404},"timestamp":"2025-10-22 15:49:26"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:49:28"}
{"level":"warn","message":"[server.js] Route not found: GET /api/util/migration-status","timestamp":"2025-10-22 15:49:28"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 404 (1ms)","timestamp":"2025-10-22 15:49:28"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.717852,"method":"GET","operation":"http_request","path":"/api/util/migration-status","status":404},"timestamp":"2025-10-22 15:49:28"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:49:30"}
{"level":"warn","message":"[server.js] Route not found: GET /api/util/migration-status","timestamp":"2025-10-22 15:49:30"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 404 (1ms)","timestamp":"2025-10-22 15:49:30"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.77586,"method":"GET","operation":"http_request","path":"/api/util/migration-status","status":404},"timestamp":"2025-10-22 15:49:30"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:49:32"}
{"level":"warn","message":"[server.js] Route not found: GET /api/util/migration-status","timestamp":"2025-10-22 15:49:32"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 404 (1ms)","timestamp":"2025-10-22 15:49:32"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.950238,"method":"GET","operation":"http_request","path":"/api/util/migration-status","status":404},"timestamp":"2025-10-22 15:49:32"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:49:35"}
{"level":"warn","message":"[server.js] Route not found: GET /api/util/migration-status","timestamp":"2025-10-22 15:49:35"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 404 (1ms)","timestamp":"2025-10-22 15:49:35"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.767086,"method":"GET","operation":"http_request","path":"/api/util/migration-status","status":404},"timestamp":"2025-10-22 15:49:35"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:49:37"}
{"level":"warn","message":"[server.js] Route not found: GET /api/util/migration-status","timestamp":"2025-10-22 15:49:37"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 404 (1ms)","timestamp":"2025-10-22 15:49:37"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.155533,"method":"GET","operation":"http_request","path":"/api/util/migration-status","status":404},"timestamp":"2025-10-22 15:49:37"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:49:39"}
{"level":"warn","message":"[server.js] Route not found: GET /api/util/migration-status","timestamp":"2025-10-22 15:49:39"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 404 (1ms)","timestamp":"2025-10-22 15:49:39"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.8671,"method":"GET","operation":"http_request","path":"/api/util/migration-status","status":404},"timestamp":"2025-10-22 15:49:39"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:49:41"}
{"level":"warn","message":"[server.js] Route not found: GET /api/util/migration-status","timestamp":"2025-10-22 15:49:41"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 404 (1ms)","timestamp":"2025-10-22 15:49:41"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.64522,"method":"GET","operation":"http_request","path":"/api/util/migration-status","status":404},"timestamp":"2025-10-22 15:49:41"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:49:43"}
{"level":"warn","message":"[server.js] Route not found: GET /api/util/migration-status","timestamp":"2025-10-22 15:49:43"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 404 (1ms)","timestamp":"2025-10-22 15:49:43"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.701575,"method":"GET","operation":"http_request","path":"/api/util/migration-status","status":404},"timestamp":"2025-10-22 15:49:43"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:49:45"}
{"level":"warn","message":"[server.js] Route not found: GET /api/util/migration-status","timestamp":"2025-10-22 15:49:45"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 404 (1ms)","timestamp":"2025-10-22 15:49:45"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.067281,"method":"GET","operation":"http_request","path":"/api/util/migration-status","status":404},"timestamp":"2025-10-22 15:49:45"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:49:47"}
{"level":"warn","message":"[server.js] Route not found: GET /api/util/migration-status","timestamp":"2025-10-22 15:49:47"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 404 (1ms)","timestamp":"2025-10-22 15:49:47"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.225891,"method":"GET","operation":"http_request","path":"/api/util/migration-status","status":404},"timestamp":"2025-10-22 15:49:47"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:49:49"}
{"level":"warn","message":"[server.js] Route not found: GET /api/util/migration-status","timestamp":"2025-10-22 15:49:49"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 404 (2ms)","timestamp":"2025-10-22 15:49:49"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.838949,"method":"GET","operation":"http_request","path":"/api/util/migration-status","status":404},"timestamp":"2025-10-22 15:49:49"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:49:51"}
{"level":"warn","message":"[server.js] Route not found: GET /api/util/migration-status","timestamp":"2025-10-22 15:49:51"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 404 (1ms)","timestamp":"2025-10-22 15:49:51"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.049806,"method":"GET","operation":"http_request","path":"/api/util/migration-status","status":404},"timestamp":"2025-10-22 15:49:51"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-10-22 15:49:56"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-10-22 15:49:56"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-10-22 15:49:56"}
{"level":"debug","message":"[index.js]  Initializing routes","timestamp":"2025-10-22 15:49:56"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-10-22 15:49:56"}
{"0":"POST /api/execEventType","1":"GET /api/eventType/:xrefId","10":"POST /api/clearVals","11":"POST /api/logImpact","12":"GET /api/impacts/recent","13":"GET /api/impacts/batch/:batchId","14":"GET /api/studio/genPageConfig","15":"POST /api/genPageConfig","16":"POST /api/initialize","17":"GET /api/util/list-routes","18":"POST /api/util/restart-server","19":"POST /api/util/run-migration","2":"GET /api/eventTypes","20":"GET /api/util/migration-status","21":"POST /api/util/open-terminal","22":"POST /api/auth/login","23":"GET /api/github/labels","24":"GET /api/github/issues","25":"POST /api/github/issues","26":"GET /api/github/issues/:issue_number/comments","27":"POST /api/github/upload-image","3":"GET /api/triggers","4":"POST /api/execDML","5":"POST /api/execCreateDoc","6":"GET /api/getDoc","7":"POST /api/studio/genFields","8":"GET /api/getVal","9":"POST /api/setVals","level":"info","message":"[registerRoutes.js] Routes registered:","timestamp":"2025-10-22 15:49:56"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-10-22 15:49:56"}
{"level":"debug","message":"[index.js]  Routes initialized","timestamp":"2025-10-22 15:49:56"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-10-22 15:49:56"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-10-22 15:49:56"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-10-22 15:49:56"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-10-22 15:49:56"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:49:57"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:49:57"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 200 (3ms)","timestamp":"2025-10-22 15:49:57"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:49:59"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:49:59"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (3ms)","timestamp":"2025-10-22 15:49:59"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:50:01"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:50:01"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (2ms)","timestamp":"2025-10-22 15:50:01"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:50:03"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:50:03"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (3ms)","timestamp":"2025-10-22 15:50:03"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:50:05"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:50:05"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:50:05"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:50:07"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:50:07"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:50:07"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:50:09"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:50:09"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:50:09"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:50:11"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:50:11"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:50:11"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:50:13"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:50:13"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (2ms)","timestamp":"2025-10-22 15:50:13"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:50:15"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:50:15"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (3ms)","timestamp":"2025-10-22 15:50:15"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:50:17"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:50:17"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:50:17"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:50:19"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:50:19"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:50:19"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:50:21"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:50:21"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:50:21"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:50:23"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:50:23"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:50:23"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:50:25"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:50:25"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:50:25"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:50:27"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:50:27"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:50:27"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:50:29"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:50:29"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:50:29"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:50:31"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:50:31"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:50:31"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:50:33"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:50:33"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:50:33"}
{"body":{"eventSQLId":"eventTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 15:50:48"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 15:50:48"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: eventTypeList","timestamp":"2025-10-22 15:50:48"}
{"body":{"eventSQLId":"qrySqlList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 15:50:48"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 15:50:48"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: qrySqlList","timestamp":"2025-10-22 15:50:48"}
{"body":{"eventSQLId":"triggerList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 15:50:48"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 15:50:48"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: triggerList","timestamp":"2025-10-22 15:50:48"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:50:48"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:50:48"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:50:48"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:50:48"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:50:48"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:50:48"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 15:50:48"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":559.133314,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 15:50:48"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:50:48"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: eventTypeList (ID: 9)","timestamp":"2025-10-22 15:50:48"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name, category, title, style\r\nFROM api_wf.eventType\r\nORDER BY Hier, name","timestamp":"2025-10-22 15:50:48"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:50:48"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:50:48"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 15:50:48"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":539.806437,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 15:50:48"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:50:48"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: triggerList (ID: 16)","timestamp":"2025-10-22 15:50:48"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select a.id, a.trigType, content_type, a.is_dom_event, a.name, \r\na.description, a.example \r\nfrom    api_wf.triggers a \r\norder by a.trigType, name","timestamp":"2025-10-22 15:50:48"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:50:48"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:50:48"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 15:50:48"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":548.571387,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 15:50:48"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:50:48"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: qrySqlList (ID: 17)","timestamp":"2025-10-22 15:50:48"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, qryName, qrySQL, description\r\nFROM api_wf.eventSQL\r\nWHERE active = 1\r\nORDER BY qryName","timestamp":"2025-10-22 15:50:48"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 15:50:48"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 15:50:48"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-22 15:50:48"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":179.770189,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-22 15:50:48"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:50:48"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: eventTypeList (ID: 9)","timestamp":"2025-10-22 15:50:48"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (755ms)","timestamp":"2025-10-22 15:50:48"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":754.656562,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-22 15:50:48"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 23","timestamp":"2025-10-22 15:50:49"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":605.442508,"method":"GET","operation":"database_query","rowCount":23,"success":true},"timestamp":"2025-10-22 15:50:49"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:50:49"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: triggerList (ID: 16)","timestamp":"2025-10-22 15:50:49"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (1149ms)","timestamp":"2025-10-22 15:50:49"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1149.18183,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-22 15:50:49"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 29","timestamp":"2025-10-22 15:50:49"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":801.858837,"method":"GET","operation":"database_query","rowCount":29,"success":true},"timestamp":"2025-10-22 15:50:49"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 15:50:49"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: qrySqlList (ID: 17)","timestamp":"2025-10-22 15:50:49"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (1362ms)","timestamp":"2025-10-22 15:50:49"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1362.317891,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-22 15:50:49"}
{"body":{"command":"./migration/run.sh","directory":"/home/paul/a-wf-migration"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/util/open-terminal","timestamp":"2025-10-22 15:51:47"}
{"level":"http","message":"[openTerminal.js] POST /api/util/open-terminal","timestamp":"2025-10-22 15:51:47"}
{"level":"info","message":"[openTerminal.js] Opening terminal in /home/paul/a-wf-migration","timestamp":"2025-10-22 15:51:47"}
{"level":"info","message":"[openTerminal.js] Executing: x-terminal-emulator -e \"cd '/home/paul/a-wf-migration' && ./migration/run.sh; exec bash\"","timestamp":"2025-10-22 15:51:47"}
{"level":"info","message":"[app.js]  Response: POST /api/util/open-terminal 200 (22ms)","timestamp":"2025-10-22 15:51:47"}
{"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/util/run-migration","timestamp":"2025-10-22 15:52:34"}
{"level":"http","message":"[runMigration.js] POST /api/util/run-migration","timestamp":"2025-10-22 15:52:34"}
{"level":"info","message":"[runMigration.js] Starting migration script (SSH tunnels should already be running)","timestamp":"2025-10-22 15:52:34"}
{"level":"info","message":"[app.js]  Response: POST /api/util/run-migration 200 (9ms)","timestamp":"2025-10-22 15:52:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:52:34]\u001b[0m 🚀 Starting Complete Migration Process","timestamp":"2025-10-22 15:52:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:52:34]\u001b[0m ======================================","timestamp":"2025-10-22 15:52:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:52:34]\u001b[0m Running pre-flight checks...","timestamp":"2025-10-22 15:52:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:52:34]\u001b[0m Tunnel management will be handled by step 00","timestamp":"2025-10-22 15:52:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;32m[SUCCESS]\u001b[0m Pre-flight checks passed","timestamp":"2025-10-22 15:52:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:52:34]\u001b[0m Starting migration with 14 steps...","timestamp":"2025-10-22 15:52:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: ","timestamp":"2025-10-22 15:52:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:52:34]\u001b[0m About to start executing steps...","timestamp":"2025-10-22 15:52:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:52:34]\u001b[0m DEBUG: Testing loop entry...","timestamp":"2025-10-22 15:52:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:52:34]\u001b[0m DEBUG: Number of steps in array: 14","timestamp":"2025-10-22 15:52:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:52:34]\u001b[0m DEBUG: First step: 00_start_tunnels.sh","timestamp":"2025-10-22 15:52:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:52:34]\u001b[0m DEBUG: Starting for loop...","timestamp":"2025-10-22 15:52:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:52:34]\u001b[0m 📍 Step 1/14: 00_start_tunnels.sh","timestamp":"2025-10-22 15:52:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:52:34]\u001b[0m DEBUG: Executing ./migration/steps_v2/00_start_tunnels.sh...","timestamp":"2025-10-22 15:52:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:52:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:52:34]\u001b[0m 🚀 Starting: 00 - Start SSH Tunnels","timestamp":"2025-10-22 15:52:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: =================================================================","timestamp":"2025-10-22 15:52:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:52:34]\u001b[0m Checking SSH tunnel status...","timestamp":"2025-10-22 15:52:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:52:34]\u001b[0m Checking tunnel status...","timestamp":"2025-10-22 15:52:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;31m[ERROR]\u001b[0m Production tunnel not accessible on port 13306\n\u001b[0;31m[ERROR]\u001b[0m Run: ./session/start.sh prodServer","timestamp":"2025-10-22 15:52:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:52:34]\u001b[0m Starting SSH tunnel manager...","timestamp":"2025-10-22 15:52:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:52:34]\u001b[0m 🔵 Starting production tunnel...","timestamp":"2025-10-22 15:52:34"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:52:35]\u001b[0m Creating production tunnel: localhost:13306 -> paul@whatsfresh.app:3306","timestamp":"2025-10-22 15:52:35"}
{"level":"info","message":"[runMigration.js] [MIGRATION]: \u001b[0;34m[15:52:35]\u001b[0m Please enter password for paul@whatsfresh.app when prompted...","timestamp":"2025-10-22 15:52:35"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:52:37"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:52:37"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 200 (1ms)","timestamp":"2025-10-22 15:52:37"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:52:39"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:52:39"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:52:39"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:52:41"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:52:41"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:52:41"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:52:43"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:52:43"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:52:43"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:52:45"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:52:45"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:52:45"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:52:47"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:52:47"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:52:47"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:52:49"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:52:49"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:52:49"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:52:51"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:52:51"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:52:51"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:52:53"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:52:53"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:52:53"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:52:55"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:52:55"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:52:55"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:52:57"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:52:57"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (3ms)","timestamp":"2025-10-22 15:52:57"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:52:59"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:52:59"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (2ms)","timestamp":"2025-10-22 15:52:59"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:53:01"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:53:01"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:53:01"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:53:02"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:53:02"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (3ms)","timestamp":"2025-10-22 15:53:02"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:53:04"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:53:04"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:53:04"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:53:06"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:53:06"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:53:06"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:53:08"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:53:08"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:53:08"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:53:10"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:53:10"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:53:10"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:53:12"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:53:12"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:53:12"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:53:14"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:53:14"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:53:14"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:53:16"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:53:16"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (2ms)","timestamp":"2025-10-22 15:53:16"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:53:18"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:53:18"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:53:18"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:53:20"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:53:20"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (2ms)","timestamp":"2025-10-22 15:53:20"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:53:22"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:53:22"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (2ms)","timestamp":"2025-10-22 15:53:22"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:53:25"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:53:25"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (2ms)","timestamp":"2025-10-22 15:53:25"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:53:27"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:53:27"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:53:27"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:53:29"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:53:29"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:53:29"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:53:31"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:53:31"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:53:31"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:53:33"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:53:33"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:53:33"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:53:35"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:53:35"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:53:35"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:53:37"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:53:37"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:53:37"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:53:39"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:53:39"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (2ms)","timestamp":"2025-10-22 15:53:39"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:53:41"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:53:41"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:53:41"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:53:43"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:53:43"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (2ms)","timestamp":"2025-10-22 15:53:43"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:53:45"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:53:45"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (2ms)","timestamp":"2025-10-22 15:53:45"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:53:47"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:53:47"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:53:47"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:53:49"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:53:49"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (2ms)","timestamp":"2025-10-22 15:53:49"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:53:51"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:53:51"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:53:51"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:53:53"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:53:53"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:53:53"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:53:55"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:53:55"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (2ms)","timestamp":"2025-10-22 15:53:55"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:53:57"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:53:57"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:53:57"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:53:59"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:53:59"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (2ms)","timestamp":"2025-10-22 15:53:59"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:54:01"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:54:01"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:54:01"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:54:03"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:54:03"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:54:03"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:54:05"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:54:05"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:54:05"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:54:07"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:54:07"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:54:07"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:54:09"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:54:09"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:54:09"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:54:11"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:54:11"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (2ms)","timestamp":"2025-10-22 15:54:11"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:54:13"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:54:13"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (2ms)","timestamp":"2025-10-22 15:54:13"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:54:15"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:54:15"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:54:15"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:54:17"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:54:17"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (2ms)","timestamp":"2025-10-22 15:54:17"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:54:19"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:54:19"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (2ms)","timestamp":"2025-10-22 15:54:19"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:54:21"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:54:21"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:54:21"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:54:23"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:54:23"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:54:23"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:54:30"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:54:30"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (2ms)","timestamp":"2025-10-22 15:54:30"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:55:30"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:55:30"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (2ms)","timestamp":"2025-10-22 15:55:30"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:56:30"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:56:30"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (2ms)","timestamp":"2025-10-22 15:56:30"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:57:30"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:57:30"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (2ms)","timestamp":"2025-10-22 15:57:30"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:58:30"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:58:30"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:58:30"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 15:59:30"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 15:59:30"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 15:59:30"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 16:00:30"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 16:00:30"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (2ms)","timestamp":"2025-10-22 16:00:30"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 16:01:30"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 16:01:30"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 16:01:30"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 16:02:30"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 16:02:30"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (2ms)","timestamp":"2025-10-22 16:02:30"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 16:03:30"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 16:03:30"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 16:03:30"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 16:04:30"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 16:04:30"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (1ms)","timestamp":"2025-10-22 16:04:30"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-22 16:04:56"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 16:05:30"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 16:05:30"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (4ms)","timestamp":"2025-10-22 16:05:30"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/util/migration-status","timestamp":"2025-10-22 16:06:30"}
{"level":"http","message":"[getMigrationStatus.js] GET /api/util/migration-status","timestamp":"2025-10-22 16:06:30"}
{"level":"info","message":"[app.js]  Response: GET /api/util/migration-status 304 (2ms)","timestamp":"2025-10-22 16:06:30"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-10-22 17:35:50"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-10-22 17:35:51"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-10-22 17:35:51"}
{"level":"debug","message":"[index.js]  Initializing routes","timestamp":"2025-10-22 17:35:51"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-10-22 17:35:51"}
{"0":"POST /api/execEventType","1":"GET /api/eventType/:xrefId","10":"POST /api/clearVals","11":"POST /api/logImpact","12":"GET /api/impacts/recent","13":"GET /api/impacts/batch/:batchId","14":"GET /api/studio/genPageConfig","15":"POST /api/genPageConfig","16":"POST /api/initialize","17":"GET /api/util/list-routes","18":"POST /api/util/restart-server","19":"POST /api/util/run-migration","2":"GET /api/eventTypes","20":"GET /api/util/migration-status","21":"POST /api/util/open-terminal","22":"POST /api/auth/login","23":"GET /api/github/labels","24":"GET /api/github/issues","25":"POST /api/github/issues","26":"GET /api/github/issues/:issue_number/comments","27":"POST /api/github/upload-image","3":"GET /api/triggers","4":"POST /api/execDML","5":"POST /api/execCreateDoc","6":"GET /api/getDoc","7":"POST /api/studio/genFields","8":"GET /api/getVal","9":"POST /api/setVals","level":"info","message":"[registerRoutes.js] Routes registered:","timestamp":"2025-10-22 17:35:51"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-10-22 17:35:51"}
{"level":"debug","message":"[index.js]  Routes initialized","timestamp":"2025-10-22 17:35:51"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-10-22 17:35:51"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-10-22 17:35:51"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-10-22 17:35:51"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-10-22 17:35:51"}
{"body":{"eventSQLId":"triggerList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 17:36:39"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 17:36:39"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: triggerList","timestamp":"2025-10-22 17:36:39"}
{"body":{"eventSQLId":"eventTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 17:36:39"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 17:36:39"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: eventTypeList","timestamp":"2025-10-22 17:36:39"}
{"body":{"eventSQLId":"qrySqlList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-22 17:36:39"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-22 17:36:39"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: qrySqlList","timestamp":"2025-10-22 17:36:39"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 17:36:39"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 17:36:39"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 17:36:39"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 17:36:39"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 17:36:39"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 17:36:39"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 17:36:39"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":431.24409,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 17:36:39"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 17:36:39"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: eventTypeList (ID: 9)","timestamp":"2025-10-22 17:36:39"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name, category, title, style\r\nFROM api_wf.eventType\r\nORDER BY Hier, name","timestamp":"2025-10-22 17:36:39"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 17:36:39"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 17:36:39"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 17:36:39"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":433.364422,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 17:36:39"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 17:36:39"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: qrySqlList (ID: 17)","timestamp":"2025-10-22 17:36:39"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, qryName, qrySQL, description\r\nFROM api_wf.eventSQL\r\nWHERE active = 1\r\nORDER BY qryName","timestamp":"2025-10-22 17:36:39"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 17:36:39"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 17:36:39"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 17:36:39"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":450.116219,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 17:36:39"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 17:36:39"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: triggerList (ID: 16)","timestamp":"2025-10-22 17:36:39"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select a.id, a.trigType, content_type, a.is_dom_event, a.name, \r\na.description, a.example \r\nfrom    api_wf.triggers a \r\norder by a.trigType, name","timestamp":"2025-10-22 17:36:39"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 17:36:39"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 17:36:39"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-22 17:36:39"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":195.133534,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-22 17:36:39"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 17:36:39"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: eventTypeList (ID: 9)","timestamp":"2025-10-22 17:36:39"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (636ms)","timestamp":"2025-10-22 17:36:39"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":636.163371,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-22 17:36:39"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 23","timestamp":"2025-10-22 17:36:39"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":193.288492,"method":"GET","operation":"database_query","rowCount":23,"success":true},"timestamp":"2025-10-22 17:36:39"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 17:36:39"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: triggerList (ID: 16)","timestamp":"2025-10-22 17:36:39"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (660ms)","timestamp":"2025-10-22 17:36:39"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":660.267782,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-22 17:36:39"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 29","timestamp":"2025-10-22 17:36:39"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":205.083025,"method":"GET","operation":"database_query","rowCount":29,"success":true},"timestamp":"2025-10-22 17:36:39"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 17:36:39"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: qrySqlList (ID: 17)","timestamp":"2025-10-22 17:36:39"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (647ms)","timestamp":"2025-10-22 17:36:39"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":647.34789,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-22 17:36:39"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-22 17:50:50"}
{"body":{"data":{"assigned_to":"","comments":"","created_by":"claude","description":"# Next Steps: EventType-Driven AppBar/Sidebar Implementation\n\n## Immediate (Priority: high)\n\n### 1. Add \"app\" Category Handler to PageRenderer\n- Create `AppRenderer.jsx` or extend `ContainerRenderer.jsx` to handle category=\"app\"\n- Implement rendering logic for AppBar (eventType id=3) and Sidebar (eventType id=4)\n- Map eventComp_xref data to component props\n- File: `/packages/shared-imports/src/components/PageRenderer/AppRenderer.jsx`\n\n### 2. Create AppLayout Component\n- Build new layout component that queries eventComp_xref for app configuration\n- Replace hardcoded SimpleLayout with eventType-driven layout\n- Query for AppBar and Sidebar configs based on app context\n- Dynamically render AppBar/Sidebar using eventType definitions\n- File: `/packages/shared-imports/src/components/layouts/AppLayout.jsx`\n\n## Short Term (Priority: medium)\n\n### 3. Test with Studio App\n- Create eventComp_xref entries for Studio AppBar (use existing #71 as template)\n- Create eventComp_xref entry for Studio Sidebar\n- Update Studio App.jsx to use new AppLayout component\n- Verify navigation, styling, and dynamic configuration\n- Test wfAppbar entry #71 renders correctly\n\n### 4. Convert AppBar/Sidebar to Vanilla React\n- Remove MUI dependencies from AppBar.jsx and Sidebar.jsx\n- Follow SimpleLayout pattern (vanilla React + CSS)\n- Eliminate theme context dependencies\n- Ensure consistent styling across apps\n\n## Future (Priority: low)\n\n### 5. Migrate Other Apps\n- Create eventComp_xref entries for Admin app AppBar/Sidebar\n- Create eventComp_xref entries for Client app AppBar/Sidebar\n- Create eventComp_xref entries for Planner app AppBar/Sidebar\n- Update each app to use AppLayout\n- Deprecate and remove SimpleLayout.jsx\n\n### 6. Documentation\n- Document eventComp_xref configuration pattern for layouts\n- Create examples of different AppBar/Sidebar configurations\n- Update architecture docs with layout system design","name":"EventType AppBar/Sidebar Rendering","priority":"medium","status":"pending"},"method":"INSERT","table":"api_wf.plans"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-22 18:05:34"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-22 18:05:34"}
{"data":{"assigned_to":"","comments":"","created_by":"claude","description":"# Next Steps: EventType-Driven AppBar/Sidebar Implementation\n\n## Immediate (Priority: high)\n\n### 1. Add \"app\" Category Handler to PageRenderer\n- Create `AppRenderer.jsx` or extend `ContainerRenderer.jsx` to handle category=\"app\"\n- Implement rendering logic for AppBar (eventType id=3) and Sidebar (eventType id=4)\n- Map eventComp_xref data to component props\n- File: `/packages/shared-imports/src/components/PageRenderer/AppRenderer.jsx`\n\n### 2. Create AppLayout Component\n- Build new layout component that queries eventComp_xref for app configuration\n- Replace hardcoded SimpleLayout with eventType-driven layout\n- Query for AppBar and Sidebar configs based on app context\n- Dynamically render AppBar/Sidebar using eventType definitions\n- File: `/packages/shared-imports/src/components/layouts/AppLayout.jsx`\n\n## Short Term (Priority: medium)\n\n### 3. Test with Studio App\n- Create eventComp_xref entries for Studio AppBar (use existing #71 as template)\n- Create eventComp_xref entry for Studio Sidebar\n- Update Studio App.jsx to use new AppLayout component\n- Verify navigation, styling, and dynamic configuration\n- Test wfAppbar entry #71 renders correctly\n\n### 4. Convert AppBar/Sidebar to Vanilla React\n- Remove MUI dependencies from AppBar.jsx and Sidebar.jsx\n- Follow SimpleLayout pattern (vanilla React + CSS)\n- Eliminate theme context dependencies\n- Ensure consistent styling across apps\n\n## Future (Priority: low)\n\n### 5. Migrate Other Apps\n- Create eventComp_xref entries for Admin app AppBar/Sidebar\n- Create eventComp_xref entries for Client app AppBar/Sidebar\n- Create eventComp_xref entries for Planner app AppBar/Sidebar\n- Update each app to use AppLayout\n- Deprecate and remove SimpleLayout.jsx\n\n### 6. Documentation\n- Document eventComp_xref configuration pattern for layouts\n- Create examples of different AppBar/Sidebar configurations\n- Update architecture docs with layout system design","name":"EventType AppBar/Sidebar Rendering","priority":"medium","status":"pending"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.plans","timestamp":"2025-10-22 18:05:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 18:05:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 18:05:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 18:05:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":209.794948,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 18:05:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 18:05:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 18:05:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 18:05:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 18:05:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":161.834823,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 18:05:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 18:05:35"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.plans (name, status, priority, description, comments, assigned_to, created_by, created_at, created_by) VALUES ('EventType AppBar/Sidebar Rendering', 'pending', 'medium', '# Next Steps: EventType-Driven AppBar/Sidebar Implementation\n\n## Immediate (Priority: high)\n\n### 1. Add \"app\" Category Handler to PageRenderer\n- Create `AppRenderer.jsx` or extend `ContainerRenderer.jsx` to handle category=\"app\"\n- Implement rendering logic for AppBar (eventType id=3) and Sidebar (eventType id=4)\n- Map eventComp_xref data to component props\n- File: `/packages/shared-imports/src/components/PageRenderer/AppRenderer.jsx`\n\n### 2. Create AppLayout Component\n- Build new layout component that queries eventComp_xref for app configuration\n- Replace hardcoded SimpleLayout with eventType-driven layout\n- Query for AppBar and Sidebar configs based on app context\n- Dynamically render AppBar/Sidebar using eventType definitions\n- File: `/packages/shared-imports/src/components/layouts/AppLayout.jsx`\n\n## Short Term (Priority: medium)\n\n### 3. Test with Studio App\n- Create eventComp_xref entries for Studio AppBar (use existing #71 as template)\n- Create eventComp_xref entry for Studio Sidebar\n- Update Studio App.jsx to use new AppLayout component\n- Verify navigation, styling, and dynamic configuration\n- Test wfAppbar entry #71 renders correctly\n\n### 4. Convert AppBar/Sidebar to Vanilla React\n- Remove MUI dependencies from AppBar.jsx and Sidebar.jsx\n- Follow SimpleLayout pattern (vanilla React + CSS)\n- Eliminate theme context dependencies\n- Ensure consistent styling across apps\n\n## Future (Priority: low)\n\n### 5. Migrate Other Apps\n- Create eventComp_xref entries for Admin app AppBar/Sidebar\n- Create eventComp_xref entries for Client app AppBar/Sidebar\n- Create eventComp_xref entries for Planner app AppBar/Sidebar\n- Update each app to use AppLayout\n- Deprecate and remove SimpleLayout.jsx\n\n### 6. Documentation\n- Document eventComp_xref configuration pattern for layouts\n- Create examples of different AppBar/Sidebar configurations\n- Update architecture docs with layout system design', '', '', 'claude', NOW(), 'Paul')","timestamp":"2025-10-22 18:05:35"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 18:05:35"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 18:05:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":128.895646,"errorCode":"ER_FIELD_SPECIFIED_TWICE","errorType":"Error","method":"POST","operation":"database_query","success":false},"timestamp":"2025-10-22 18:05:35"}
{"code":"ER_FIELD_SPECIFIED_TWICE","errno":1110,"level":"error","message":"Column 'created_by' specified twice","sql":"INSERT INTO api_wf.plans (name, status, priority, description, comments, assigned_to, created_by, created_at, created_by) VALUES ('EventType AppBar/Sidebar Rendering', 'pending', 'medium', '# Next Steps: EventType-Driven AppBar/Sidebar Implementation\n\n## Immediate (Priority: high)\n\n### 1. Add \"app\" Category Handler to PageRenderer\n- Create `AppRenderer.jsx` or extend `ContainerRenderer.jsx` to handle category=\"app\"\n- Implement rendering logic for AppBar (eventType id=3) and Sidebar (eventType id=4)\n- Map eventComp_xref data to component props\n- File: `/packages/shared-imports/src/components/PageRenderer/AppRenderer.jsx`\n\n### 2. Create AppLayout Component\n- Build new layout component that queries eventComp_xref for app configuration\n- Replace hardcoded SimpleLayout with eventType-driven layout\n- Query for AppBar and Sidebar configs based on app context\n- Dynamically render AppBar/Sidebar using eventType definitions\n- File: `/packages/shared-imports/src/components/layouts/AppLayout.jsx`\n\n## Short Term (Priority: medium)\n\n### 3. Test with Studio App\n- Create eventComp_xref entries for Studio AppBar (use existing #71 as template)\n- Create eventComp_xref entry for Studio Sidebar\n- Update Studio App.jsx to use new AppLayout component\n- Verify navigation, styling, and dynamic configuration\n- Test wfAppbar entry #71 renders correctly\n\n### 4. Convert AppBar/Sidebar to Vanilla React\n- Remove MUI dependencies from AppBar.jsx and Sidebar.jsx\n- Follow SimpleLayout pattern (vanilla React + CSS)\n- Eliminate theme context dependencies\n- Ensure consistent styling across apps\n\n## Future (Priority: low)\n\n### 5. Migrate Other Apps\n- Create eventComp_xref entries for Admin app AppBar/Sidebar\n- Create eventComp_xref entries for Client app AppBar/Sidebar\n- Create eventComp_xref entries for Planner app AppBar/Sidebar\n- Update each app to use AppLayout\n- Deprecate and remove SimpleLayout.jsx\n\n### 6. Documentation\n- Document eventComp_xref configuration pattern for layouts\n- Create examples of different AppBar/Sidebar configurations\n- Update architecture docs with layout system design', '', '', 'claude', NOW(), 'Paul')","sqlMessage":"Column 'created_by' specified twice","sqlState":"42000","stack":"Error: Column 'created_by' specified twice\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:57:40)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-22 18:05:35"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-10-22 18:05:35"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-22 18:05:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 18:05:35"}
{"category":"database_error","constraint":null,"level":"error","message":"[enhanceErrorResponse] INSERT failed: Database operation failed","timestamp":"2025-10-22 18:05:35"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-22 18:05:35"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (648ms)","timestamp":"2025-10-22 18:05:35"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":647.561458,"method":"POST","operation":"http_request","path":"/api/execDML","status":200},"timestamp":"2025-10-22 18:05:35"}
{"body":{"query":"DESCRIBE api_wf.plans"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/queryResolver","timestamp":"2025-10-22 18:05:39"}
{"level":"warn","message":"[server.js] Route not found: POST /api/queryResolver","timestamp":"2025-10-22 18:05:39"}
{"level":"info","message":"[app.js]  Response: POST /api/queryResolver 404 (2ms)","timestamp":"2025-10-22 18:05:39"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.656598,"method":"POST","operation":"http_request","path":"/api/queryResolver","status":404},"timestamp":"2025-10-22 18:05:39"}
{"body":{"data":{"assigned_to":"","cluster":"development","comments":"","created_by":"claude","description":"# Next Steps: EventType-Driven AppBar/Sidebar Implementation\n\n## Immediate (Priority: high)\n\n### 1. Add \"app\" Category Handler to PageRenderer\n- Create `AppRenderer.jsx` or extend `ContainerRenderer.jsx` to handle category=\"app\"\n- Implement rendering logic for AppBar (eventType id=3) and Sidebar (eventType id=4)\n- Map eventComp_xref data to component props\n- File: `/packages/shared-imports/src/components/PageRenderer/AppRenderer.jsx`\n\n### 2. Create AppLayout Component\n- Build new layout component that queries eventComp_xref for app configuration\n- Replace hardcoded SimpleLayout with eventType-driven layout\n- Query for AppBar and Sidebar configs based on app context\n- Dynamically render AppBar/Sidebar using eventType definitions\n- File: `/packages/shared-imports/src/components/layouts/AppLayout.jsx`\n\n## Short Term (Priority: medium)\n\n### 3. Test with Studio App\n- Create eventComp_xref entries for Studio AppBar (use existing #71 as template)\n- Create eventComp_xref entry for Studio Sidebar\n- Update Studio App.jsx to use new AppLayout component\n- Verify navigation, styling, and dynamic configuration\n- Test wfAppbar entry #71 renders correctly\n\n### 4. Convert AppBar/Sidebar to Vanilla React\n- Remove MUI dependencies from AppBar.jsx and Sidebar.jsx\n- Follow SimpleLayout pattern (vanilla React + CSS)\n- Eliminate theme context dependencies\n- Ensure consistent styling across apps\n\n## Future (Priority: low)\n\n### 5. Migrate Other Apps\n- Create eventComp_xref entries for Admin app AppBar/Sidebar\n- Create eventComp_xref entries for Client app AppBar/Sidebar\n- Create eventComp_xref entries for Planner app AppBar/Sidebar\n- Update each app to use AppLayout\n- Deprecate and remove SimpleLayout.jsx\n\n### 6. Documentation\n- Document eventComp_xref configuration pattern for layouts\n- Create examples of different AppBar/Sidebar configurations\n- Update architecture docs with layout system design","name":"EventType AppBar/Sidebar Rendering","priority":"medium","status":"pending"},"method":"INSERT","table":"api_wf.plans"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-22 18:06:04"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-22 18:06:04"}
{"data":{"assigned_to":"","cluster":"development","comments":"","created_by":"claude","description":"# Next Steps: EventType-Driven AppBar/Sidebar Implementation\n\n## Immediate (Priority: high)\n\n### 1. Add \"app\" Category Handler to PageRenderer\n- Create `AppRenderer.jsx` or extend `ContainerRenderer.jsx` to handle category=\"app\"\n- Implement rendering logic for AppBar (eventType id=3) and Sidebar (eventType id=4)\n- Map eventComp_xref data to component props\n- File: `/packages/shared-imports/src/components/PageRenderer/AppRenderer.jsx`\n\n### 2. Create AppLayout Component\n- Build new layout component that queries eventComp_xref for app configuration\n- Replace hardcoded SimpleLayout with eventType-driven layout\n- Query for AppBar and Sidebar configs based on app context\n- Dynamically render AppBar/Sidebar using eventType definitions\n- File: `/packages/shared-imports/src/components/layouts/AppLayout.jsx`\n\n## Short Term (Priority: medium)\n\n### 3. Test with Studio App\n- Create eventComp_xref entries for Studio AppBar (use existing #71 as template)\n- Create eventComp_xref entry for Studio Sidebar\n- Update Studio App.jsx to use new AppLayout component\n- Verify navigation, styling, and dynamic configuration\n- Test wfAppbar entry #71 renders correctly\n\n### 4. Convert AppBar/Sidebar to Vanilla React\n- Remove MUI dependencies from AppBar.jsx and Sidebar.jsx\n- Follow SimpleLayout pattern (vanilla React + CSS)\n- Eliminate theme context dependencies\n- Ensure consistent styling across apps\n\n## Future (Priority: low)\n\n### 5. Migrate Other Apps\n- Create eventComp_xref entries for Admin app AppBar/Sidebar\n- Create eventComp_xref entries for Client app AppBar/Sidebar\n- Create eventComp_xref entries for Planner app AppBar/Sidebar\n- Update each app to use AppLayout\n- Deprecate and remove SimpleLayout.jsx\n\n### 6. Documentation\n- Document eventComp_xref configuration pattern for layouts\n- Create examples of different AppBar/Sidebar configurations\n- Update architecture docs with layout system design","name":"EventType AppBar/Sidebar Rendering","priority":"medium","status":"pending"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.plans","timestamp":"2025-10-22 18:06:04"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 18:06:04"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 18:06:04"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 18:06:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":81.230265,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 18:06:04"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 18:06:04"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 18:06:04"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 18:06:04"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 18:06:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.336206,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 18:06:04"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 18:06:04"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.plans (cluster, name, status, priority, description, comments, assigned_to, created_by, created_at, created_by) VALUES ('development', 'EventType AppBar/Sidebar Rendering', 'pending', 'medium', '# Next Steps: EventType-Driven AppBar/Sidebar Implementation\n\n## Immediate (Priority: high)\n\n### 1. Add \"app\" Category Handler to PageRenderer\n- Create `AppRenderer.jsx` or extend `ContainerRenderer.jsx` to handle category=\"app\"\n- Implement rendering logic for AppBar (eventType id=3) and Sidebar (eventType id=4)\n- Map eventComp_xref data to component props\n- File: `/packages/shared-imports/src/components/PageRenderer/AppRenderer.jsx`\n\n### 2. Create AppLayout Component\n- Build new layout component that queries eventComp_xref for app configuration\n- Replace hardcoded SimpleLayout with eventType-driven layout\n- Query for AppBar and Sidebar configs based on app context\n- Dynamically render AppBar/Sidebar using eventType definitions\n- File: `/packages/shared-imports/src/components/layouts/AppLayout.jsx`\n\n## Short Term (Priority: medium)\n\n### 3. Test with Studio App\n- Create eventComp_xref entries for Studio AppBar (use existing #71 as template)\n- Create eventComp_xref entry for Studio Sidebar\n- Update Studio App.jsx to use new AppLayout component\n- Verify navigation, styling, and dynamic configuration\n- Test wfAppbar entry #71 renders correctly\n\n### 4. Convert AppBar/Sidebar to Vanilla React\n- Remove MUI dependencies from AppBar.jsx and Sidebar.jsx\n- Follow SimpleLayout pattern (vanilla React + CSS)\n- Eliminate theme context dependencies\n- Ensure consistent styling across apps\n\n## Future (Priority: low)\n\n### 5. Migrate Other Apps\n- Create eventComp_xref entries for Admin app AppBar/Sidebar\n- Create eventComp_xref entries for Client app AppBar/Sidebar\n- Create eventComp_xref entries for Planner app AppBar/Sidebar\n- Update each app to use AppLayout\n- Deprecate and remove SimpleLayout.jsx\n\n### 6. Documentation\n- Document eventComp_xref configuration pattern for layouts\n- Create examples of different AppBar/Sidebar configurations\n- Update architecture docs with layout system design', '', '', 'claude', NOW(), 'Paul')","timestamp":"2025-10-22 18:06:04"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 18:06:04"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 18:06:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":325.607841,"errorCode":"ER_BAD_FIELD_ERROR","errorType":"Error","method":"POST","operation":"database_query","success":false},"timestamp":"2025-10-22 18:06:05"}
{"code":"ER_BAD_FIELD_ERROR","errno":1054,"level":"error","message":"Unknown column 'cluster' in 'field list'","sql":"INSERT INTO api_wf.plans (cluster, name, status, priority, description, comments, assigned_to, created_by, created_at, created_by) VALUES ('development', 'EventType AppBar/Sidebar Rendering', 'pending', 'medium', '# Next Steps: EventType-Driven AppBar/Sidebar Implementation\n\n## Immediate (Priority: high)\n\n### 1. Add \"app\" Category Handler to PageRenderer\n- Create `AppRenderer.jsx` or extend `ContainerRenderer.jsx` to handle category=\"app\"\n- Implement rendering logic for AppBar (eventType id=3) and Sidebar (eventType id=4)\n- Map eventComp_xref data to component props\n- File: `/packages/shared-imports/src/components/PageRenderer/AppRenderer.jsx`\n\n### 2. Create AppLayout Component\n- Build new layout component that queries eventComp_xref for app configuration\n- Replace hardcoded SimpleLayout with eventType-driven layout\n- Query for AppBar and Sidebar configs based on app context\n- Dynamically render AppBar/Sidebar using eventType definitions\n- File: `/packages/shared-imports/src/components/layouts/AppLayout.jsx`\n\n## Short Term (Priority: medium)\n\n### 3. Test with Studio App\n- Create eventComp_xref entries for Studio AppBar (use existing #71 as template)\n- Create eventComp_xref entry for Studio Sidebar\n- Update Studio App.jsx to use new AppLayout component\n- Verify navigation, styling, and dynamic configuration\n- Test wfAppbar entry #71 renders correctly\n\n### 4. Convert AppBar/Sidebar to Vanilla React\n- Remove MUI dependencies from AppBar.jsx and Sidebar.jsx\n- Follow SimpleLayout pattern (vanilla React + CSS)\n- Eliminate theme context dependencies\n- Ensure consistent styling across apps\n\n## Future (Priority: low)\n\n### 5. Migrate Other Apps\n- Create eventComp_xref entries for Admin app AppBar/Sidebar\n- Create eventComp_xref entries for Client app AppBar/Sidebar\n- Create eventComp_xref entries for Planner app AppBar/Sidebar\n- Update each app to use AppLayout\n- Deprecate and remove SimpleLayout.jsx\n\n### 6. Documentation\n- Document eventComp_xref configuration pattern for layouts\n- Create examples of different AppBar/Sidebar configurations\n- Update architecture docs with layout system design', '', '', 'claude', NOW(), 'Paul')","sqlMessage":"Unknown column 'cluster' in 'field list'","sqlState":"42S22","stack":"Error: Unknown column 'cluster' in 'field list'\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:57:40)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-22 18:06:05"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-10-22 18:06:05"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-22 18:06:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 18:06:05"}
{"category":"database_error","constraint":null,"level":"error","message":"[enhanceErrorResponse] INSERT failed: Database operation failed","timestamp":"2025-10-22 18:06:05"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-22 18:06:05"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (552ms)","timestamp":"2025-10-22 18:06:05"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":552.075949,"method":"POST","operation":"http_request","path":"/api/execDML","status":200},"timestamp":"2025-10-22 18:06:05"}
{"body":{"data":{"assigned_to":"","comments":"","created_by":"claude","description":"# Next Steps: EventType-Driven AppBar/Sidebar Implementation\n\n## Immediate (Priority: high)\n\n### 1. Add \"app\" Category Handler to PageRenderer\n- Create `AppRenderer.jsx` or extend `ContainerRenderer.jsx` to handle category=\"app\"\n- Implement rendering logic for AppBar (eventType id=3) and Sidebar (eventType id=4)\n- Map eventComp_xref data to component props\n- File: `/packages/shared-imports/src/components/PageRenderer/AppRenderer.jsx`\n\n### 2. Create AppLayout Component\n- Build new layout component that queries eventComp_xref for app configuration\n- Replace hardcoded SimpleLayout with eventType-driven layout\n- Query for AppBar and Sidebar configs based on app context\n- Dynamically render AppBar/Sidebar using eventType definitions\n- File: `/packages/shared-imports/src/components/layouts/AppLayout.jsx`\n\n## Short Term (Priority: medium)\n\n### 3. Test with Studio App\n- Create eventComp_xref entries for Studio AppBar (use existing #71 as template)\n- Create eventComp_xref entry for Studio Sidebar\n- Update Studio App.jsx to use new AppLayout component\n- Verify navigation, styling, and dynamic configuration\n- Test wfAppbar entry #71 renders correctly\n\n### 4. Convert AppBar/Sidebar to Vanilla React\n- Remove MUI dependencies from AppBar.jsx and Sidebar.jsx\n- Follow SimpleLayout pattern (vanilla React + CSS)\n- Eliminate theme context dependencies\n- Ensure consistent styling across apps\n\n## Future (Priority: low)\n\n### 5. Migrate Other Apps\n- Create eventComp_xref entries for Admin app AppBar/Sidebar\n- Create eventComp_xref entries for Client app AppBar/Sidebar\n- Create eventComp_xref entries for Planner app AppBar/Sidebar\n- Update each app to use AppLayout\n- Deprecate and remove SimpleLayout.jsx\n\n### 6. Documentation\n- Document eventComp_xref configuration pattern for layouts\n- Create examples of different AppBar/Sidebar configurations\n- Update architecture docs with layout system design","name":"EventType AppBar/Sidebar Rendering","priority":"medium","status":"pending"},"method":"INSERT","table":"api_wf.plans"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-22 18:06:35"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-22 18:06:35"}
{"data":{"assigned_to":"","comments":"","created_by":"claude","description":"# Next Steps: EventType-Driven AppBar/Sidebar Implementation\n\n## Immediate (Priority: high)\n\n### 1. Add \"app\" Category Handler to PageRenderer\n- Create `AppRenderer.jsx` or extend `ContainerRenderer.jsx` to handle category=\"app\"\n- Implement rendering logic for AppBar (eventType id=3) and Sidebar (eventType id=4)\n- Map eventComp_xref data to component props\n- File: `/packages/shared-imports/src/components/PageRenderer/AppRenderer.jsx`\n\n### 2. Create AppLayout Component\n- Build new layout component that queries eventComp_xref for app configuration\n- Replace hardcoded SimpleLayout with eventType-driven layout\n- Query for AppBar and Sidebar configs based on app context\n- Dynamically render AppBar/Sidebar using eventType definitions\n- File: `/packages/shared-imports/src/components/layouts/AppLayout.jsx`\n\n## Short Term (Priority: medium)\n\n### 3. Test with Studio App\n- Create eventComp_xref entries for Studio AppBar (use existing #71 as template)\n- Create eventComp_xref entry for Studio Sidebar\n- Update Studio App.jsx to use new AppLayout component\n- Verify navigation, styling, and dynamic configuration\n- Test wfAppbar entry #71 renders correctly\n\n### 4. Convert AppBar/Sidebar to Vanilla React\n- Remove MUI dependencies from AppBar.jsx and Sidebar.jsx\n- Follow SimpleLayout pattern (vanilla React + CSS)\n- Eliminate theme context dependencies\n- Ensure consistent styling across apps\n\n## Future (Priority: low)\n\n### 5. Migrate Other Apps\n- Create eventComp_xref entries for Admin app AppBar/Sidebar\n- Create eventComp_xref entries for Client app AppBar/Sidebar\n- Create eventComp_xref entries for Planner app AppBar/Sidebar\n- Update each app to use AppLayout\n- Deprecate and remove SimpleLayout.jsx\n\n### 6. Documentation\n- Document eventComp_xref configuration pattern for layouts\n- Create examples of different AppBar/Sidebar configurations\n- Update architecture docs with layout system design","name":"EventType AppBar/Sidebar Rendering","priority":"medium","status":"pending"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.plans","timestamp":"2025-10-22 18:06:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 18:06:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 18:06:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 18:06:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":47.737098,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 18:06:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 18:06:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 18:06:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 18:06:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 18:06:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.560282,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 18:06:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 18:06:35"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.plans (name, status, priority, description, comments, assigned_to, created_by, created_at, created_by) VALUES ('EventType AppBar/Sidebar Rendering', 'pending', 'medium', '# Next Steps: EventType-Driven AppBar/Sidebar Implementation\n\n## Immediate (Priority: high)\n\n### 1. Add \"app\" Category Handler to PageRenderer\n- Create `AppRenderer.jsx` or extend `ContainerRenderer.jsx` to handle category=\"app\"\n- Implement rendering logic for AppBar (eventType id=3) and Sidebar (eventType id=4)\n- Map eventComp_xref data to component props\n- File: `/packages/shared-imports/src/components/PageRenderer/AppRenderer.jsx`\n\n### 2. Create AppLayout Component\n- Build new layout component that queries eventComp_xref for app configuration\n- Replace hardcoded SimpleLayout with eventType-driven layout\n- Query for AppBar and Sidebar configs based on app context\n- Dynamically render AppBar/Sidebar using eventType definitions\n- File: `/packages/shared-imports/src/components/layouts/AppLayout.jsx`\n\n## Short Term (Priority: medium)\n\n### 3. Test with Studio App\n- Create eventComp_xref entries for Studio AppBar (use existing #71 as template)\n- Create eventComp_xref entry for Studio Sidebar\n- Update Studio App.jsx to use new AppLayout component\n- Verify navigation, styling, and dynamic configuration\n- Test wfAppbar entry #71 renders correctly\n\n### 4. Convert AppBar/Sidebar to Vanilla React\n- Remove MUI dependencies from AppBar.jsx and Sidebar.jsx\n- Follow SimpleLayout pattern (vanilla React + CSS)\n- Eliminate theme context dependencies\n- Ensure consistent styling across apps\n\n## Future (Priority: low)\n\n### 5. Migrate Other Apps\n- Create eventComp_xref entries for Admin app AppBar/Sidebar\n- Create eventComp_xref entries for Client app AppBar/Sidebar\n- Create eventComp_xref entries for Planner app AppBar/Sidebar\n- Update each app to use AppLayout\n- Deprecate and remove SimpleLayout.jsx\n\n### 6. Documentation\n- Document eventComp_xref configuration pattern for layouts\n- Create examples of different AppBar/Sidebar configurations\n- Update architecture docs with layout system design', '', '', 'claude', NOW(), 'Paul')","timestamp":"2025-10-22 18:06:35"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 18:06:35"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 18:06:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":65.451934,"errorCode":"ER_FIELD_SPECIFIED_TWICE","errorType":"Error","method":"POST","operation":"database_query","success":false},"timestamp":"2025-10-22 18:06:35"}
{"code":"ER_FIELD_SPECIFIED_TWICE","errno":1110,"level":"error","message":"Column 'created_by' specified twice","sql":"INSERT INTO api_wf.plans (name, status, priority, description, comments, assigned_to, created_by, created_at, created_by) VALUES ('EventType AppBar/Sidebar Rendering', 'pending', 'medium', '# Next Steps: EventType-Driven AppBar/Sidebar Implementation\n\n## Immediate (Priority: high)\n\n### 1. Add \"app\" Category Handler to PageRenderer\n- Create `AppRenderer.jsx` or extend `ContainerRenderer.jsx` to handle category=\"app\"\n- Implement rendering logic for AppBar (eventType id=3) and Sidebar (eventType id=4)\n- Map eventComp_xref data to component props\n- File: `/packages/shared-imports/src/components/PageRenderer/AppRenderer.jsx`\n\n### 2. Create AppLayout Component\n- Build new layout component that queries eventComp_xref for app configuration\n- Replace hardcoded SimpleLayout with eventType-driven layout\n- Query for AppBar and Sidebar configs based on app context\n- Dynamically render AppBar/Sidebar using eventType definitions\n- File: `/packages/shared-imports/src/components/layouts/AppLayout.jsx`\n\n## Short Term (Priority: medium)\n\n### 3. Test with Studio App\n- Create eventComp_xref entries for Studio AppBar (use existing #71 as template)\n- Create eventComp_xref entry for Studio Sidebar\n- Update Studio App.jsx to use new AppLayout component\n- Verify navigation, styling, and dynamic configuration\n- Test wfAppbar entry #71 renders correctly\n\n### 4. Convert AppBar/Sidebar to Vanilla React\n- Remove MUI dependencies from AppBar.jsx and Sidebar.jsx\n- Follow SimpleLayout pattern (vanilla React + CSS)\n- Eliminate theme context dependencies\n- Ensure consistent styling across apps\n\n## Future (Priority: low)\n\n### 5. Migrate Other Apps\n- Create eventComp_xref entries for Admin app AppBar/Sidebar\n- Create eventComp_xref entries for Client app AppBar/Sidebar\n- Create eventComp_xref entries for Planner app AppBar/Sidebar\n- Update each app to use AppLayout\n- Deprecate and remove SimpleLayout.jsx\n\n### 6. Documentation\n- Document eventComp_xref configuration pattern for layouts\n- Create examples of different AppBar/Sidebar configurations\n- Update architecture docs with layout system design', '', '', 'claude', NOW(), 'Paul')","sqlMessage":"Column 'created_by' specified twice","sqlState":"42000","stack":"Error: Column 'created_by' specified twice\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:57:40)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-22 18:06:35"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-10-22 18:06:35"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-22 18:06:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 18:06:35"}
{"category":"database_error","constraint":null,"level":"error","message":"[enhanceErrorResponse] INSERT failed: Database operation failed","timestamp":"2025-10-22 18:06:35"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-22 18:06:35"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (186ms)","timestamp":"2025-10-22 18:06:35"}
{"body":{"data":{"assigned_to":"","comments":"","description":"# Next Steps: EventType-Driven AppBar/Sidebar Implementation\n\n## Immediate (Priority: high)\n\n### 1. Add app Category Handler to PageRenderer\n- Create AppRenderer.jsx or extend ContainerRenderer.jsx to handle category=app\n- Implement rendering logic for AppBar (eventType id=3) and Sidebar (eventType id=4)\n- Map eventComp_xref data to component props\n- File: /packages/shared-imports/src/components/PageRenderer/AppRenderer.jsx\n\n### 2. Create AppLayout Component\n- Build new layout component that queries eventComp_xref for app configuration\n- Replace hardcoded SimpleLayout with eventType-driven layout\n- Query for AppBar and Sidebar configs based on app context\n- Dynamically render AppBar/Sidebar using eventType definitions\n- File: /packages/shared-imports/src/components/layouts/AppLayout.jsx\n\n## Short Term (Priority: medium)\n\n### 3. Test with Studio App\n- Create eventComp_xref entries for Studio AppBar (use existing #71 as template)\n- Create eventComp_xref entry for Studio Sidebar\n- Update Studio App.jsx to use new AppLayout component\n- Verify navigation, styling, and dynamic configuration\n- Test wfAppbar entry #71 renders correctly\n\n### 4. Convert AppBar/Sidebar to Vanilla React\n- Remove MUI dependencies from AppBar.jsx and Sidebar.jsx\n- Follow SimpleLayout pattern (vanilla React + CSS)\n- Eliminate theme context dependencies\n- Ensure consistent styling across apps\n\n## Future (Priority: low)\n\n### 5. Migrate Other Apps\n- Create eventComp_xref entries for Admin app AppBar/Sidebar\n- Create eventComp_xref entries for Client app AppBar/Sidebar\n- Create eventComp_xref entries for Planner app AppBar/Sidebar\n- Update each app to use AppLayout\n- Deprecate and remove SimpleLayout.jsx\n\n### 6. Documentation\n- Document eventComp_xref configuration pattern for layouts\n- Create examples of different AppBar/Sidebar configurations\n- Update architecture docs with layout system design","name":"EventType AppBar/Sidebar Rendering","priority":"medium","status":"pending"},"method":"INSERT","table":"api_wf.plans"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-22 18:06:55"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-22 18:06:55"}
{"data":{"assigned_to":"","comments":"","description":"# Next Steps: EventType-Driven AppBar/Sidebar Implementation\n\n## Immediate (Priority: high)\n\n### 1. Add app Category Handler to PageRenderer\n- Create AppRenderer.jsx or extend ContainerRenderer.jsx to handle category=app\n- Implement rendering logic for AppBar (eventType id=3) and Sidebar (eventType id=4)\n- Map eventComp_xref data to component props\n- File: /packages/shared-imports/src/components/PageRenderer/AppRenderer.jsx\n\n### 2. Create AppLayout Component\n- Build new layout component that queries eventComp_xref for app configuration\n- Replace hardcoded SimpleLayout with eventType-driven layout\n- Query for AppBar and Sidebar configs based on app context\n- Dynamically render AppBar/Sidebar using eventType definitions\n- File: /packages/shared-imports/src/components/layouts/AppLayout.jsx\n\n## Short Term (Priority: medium)\n\n### 3. Test with Studio App\n- Create eventComp_xref entries for Studio AppBar (use existing #71 as template)\n- Create eventComp_xref entry for Studio Sidebar\n- Update Studio App.jsx to use new AppLayout component\n- Verify navigation, styling, and dynamic configuration\n- Test wfAppbar entry #71 renders correctly\n\n### 4. Convert AppBar/Sidebar to Vanilla React\n- Remove MUI dependencies from AppBar.jsx and Sidebar.jsx\n- Follow SimpleLayout pattern (vanilla React + CSS)\n- Eliminate theme context dependencies\n- Ensure consistent styling across apps\n\n## Future (Priority: low)\n\n### 5. Migrate Other Apps\n- Create eventComp_xref entries for Admin app AppBar/Sidebar\n- Create eventComp_xref entries for Client app AppBar/Sidebar\n- Create eventComp_xref entries for Planner app AppBar/Sidebar\n- Update each app to use AppLayout\n- Deprecate and remove SimpleLayout.jsx\n\n### 6. Documentation\n- Document eventComp_xref configuration pattern for layouts\n- Create examples of different AppBar/Sidebar configurations\n- Update architecture docs with layout system design","name":"EventType AppBar/Sidebar Rendering","priority":"medium","status":"pending"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.plans","timestamp":"2025-10-22 18:06:55"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 18:06:55"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 18:06:55"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 18:06:55"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":84.907261,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 18:06:55"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 18:06:55"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 18:06:55"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 18:06:55"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 18:06:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":102.640452,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 18:06:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 18:06:56"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.plans (name, status, priority, description, comments, assigned_to, created_at, created_by) VALUES ('EventType AppBar/Sidebar Rendering', 'pending', 'medium', '# Next Steps: EventType-Driven AppBar/Sidebar Implementation\n\n## Immediate (Priority: high)\n\n### 1. Add app Category Handler to PageRenderer\n- Create AppRenderer.jsx or extend ContainerRenderer.jsx to handle category=app\n- Implement rendering logic for AppBar (eventType id=3) and Sidebar (eventType id=4)\n- Map eventComp_xref data to component props\n- File: /packages/shared-imports/src/components/PageRenderer/AppRenderer.jsx\n\n### 2. Create AppLayout Component\n- Build new layout component that queries eventComp_xref for app configuration\n- Replace hardcoded SimpleLayout with eventType-driven layout\n- Query for AppBar and Sidebar configs based on app context\n- Dynamically render AppBar/Sidebar using eventType definitions\n- File: /packages/shared-imports/src/components/layouts/AppLayout.jsx\n\n## Short Term (Priority: medium)\n\n### 3. Test with Studio App\n- Create eventComp_xref entries for Studio AppBar (use existing #71 as template)\n- Create eventComp_xref entry for Studio Sidebar\n- Update Studio App.jsx to use new AppLayout component\n- Verify navigation, styling, and dynamic configuration\n- Test wfAppbar entry #71 renders correctly\n\n### 4. Convert AppBar/Sidebar to Vanilla React\n- Remove MUI dependencies from AppBar.jsx and Sidebar.jsx\n- Follow SimpleLayout pattern (vanilla React + CSS)\n- Eliminate theme context dependencies\n- Ensure consistent styling across apps\n\n## Future (Priority: low)\n\n### 5. Migrate Other Apps\n- Create eventComp_xref entries for Admin app AppBar/Sidebar\n- Create eventComp_xref entries for Client app AppBar/Sidebar\n- Create eventComp_xref entries for Planner app AppBar/Sidebar\n- Update each app to use AppLayout\n- Deprecate and remove SimpleLayout.jsx\n\n### 6. Documentation\n- Document eventComp_xref configuration pattern for layouts\n- Create examples of different AppBar/Sidebar configurations\n- Update architecture docs with layout system design', '', '', NOW(), 'Paul')","timestamp":"2025-10-22 18:06:56"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 18:06:56"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 18:06:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":408.671486,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 18:06:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 18:06:56"}
{"level":"info","message":"[dmlProcessor.js] INSERT executed successfully on api_wf.plans","timestamp":"2025-10-22 18:06:56"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-22 18:06:56"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (599ms)","timestamp":"2025-10-22 18:06:56"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":599.467691,"method":"POST","operation":"http_request","path":"/api/execDML","status":200},"timestamp":"2025-10-22 18:06:56"}
{"body":{"data":{"from_agent":"claude","message":"# Claude Session Summary - 2025-10-22\n\n**Focus:** Fixed Studio navigation and discovered EventType AppBar/Sidebar architecture\n**Primary AI:** Claude\n\n---\n\n## AI Coordination Check\n\n**Recent Summaries Query:**\n```sql\nSELECT id, from_agent, subject, created_at\nFROM api_wf.plan_communications\nWHERE type = summary AND plan_id = 0\nORDER BY created_at DESC LIMIT 2\n```\n\n**Session Handoff:**\n- For Claude: Architecture analysis and rendering pipeline design\n- For Kiro: Implementation of AppRenderer.jsx and AppLayout.jsx components\n\n---\n\n## Major Accomplishments\n\n### 1. Fixed Studio Navigation Issue\n- Identified SimpleLayout.jsx using window.location.href for internal routing\n- Updated to use React Router useNavigate() hook\n- File: /packages/shared-imports/src/components/layouts/SimpleLayout.jsx:2-17\n- Studio sidebar navigation now works without page reloads\n\n### 2. EventType AppBar/Sidebar Architecture Investigation\n- Discovered existing eventType definitions (id=3: AppBar, id=4: Sidebar, category=app)\n- Found MUI-based component implementations in /packages/shared-imports/src/components/navigation/\n- Identified eventComp_xref entry #71 (wfAppbar) that has never been rendered\n- Documented that Sidebar.jsx already integrates with getEventType() for navigation\n\n### 3. Architecture Gap Analysis\n- PageRenderer components (ContainerRenderer, LeafRenderer) do not handle category=app\n- No rendering pipeline from eventComp_xref to AppBar/Sidebar components\n- Apps still use hardcoded SimpleLayout instead of eventType-driven layouts\n- Identified clear migration path forward\n\n---\n\n## Statistics\n\n- Files Modified: 1 (SimpleLayout.jsx)\n- Files Investigated: 8 (AppBar, Sidebar, renderers, layouts)\n- EventTypes Analyzed: 2 (AppBar, Sidebar)\n- eventComp_xref Entries Found: 1 (wfAppbar #71, never rendered)\n- Plans Created: 1 (Plan #44: EventType AppBar/Sidebar Rendering)\n\n---\n\n## Next Steps\n\nSee Plan: 44 - EventType AppBar/Sidebar Rendering\n\nImmediate priorities:\n1. Add app category handler to PageRenderer\n2. Create AppLayout component\n3. Test with Studio app using existing eventComp_xref entry #71\n4. Convert AppBar/Sidebar from MUI to vanilla React\n\n---\n\n## Key Learnings\n\n### Navigation Architecture\n- SimpleLayout was breaking React Router by using browser navigation instead of router navigation\n- React Router hooks (useNavigate) must be used for internal SPA navigation\n- window.location.href causes full page reloads and breaks routing state\n\n### EventType System Partially Built\n- Core eventType definitions and components exist but are not wired to rendering pipeline\n- Sidebar.jsx already has sophisticated getEventType() integration for navigation\n- AppBar.jsx has configurable item rendering system ready to use\n\n### Migration Path Clear\n- eventComp_xref already has sample data (wfAppbar #71) just needs renderer implementation\n- Category=app needs to be added to PageRenderer switch statements\n- Per-app layouts via eventComp_xref will replace hardcoded shared layouts\n\n### Vanilla React Pattern Established\n- SimpleLayout demonstrates vanilla React + CSS approach\n- MUI dependencies cause theme context conflicts and bundle bloat\n- Vanilla approach is faster, more maintainable, and avoids framework issues\n\n---\n\n**Status:** Ready for implementation phase. Foundation is solid, just needs rendering pipeline connected.","plan_id":44,"subject":"SimpleLayout Navigation Fix & EventType AppBar/Sidebar Discovery","to_agent":"any","type":"summary"},"method":"INSERT","table":"api_wf.plan_communications"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-22 18:07:26"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-22 18:07:26"}
{"data":{"from_agent":"claude","message":"# Claude Session Summary - 2025-10-22\n\n**Focus:** Fixed Studio navigation and discovered EventType AppBar/Sidebar architecture\n**Primary AI:** Claude\n\n---\n\n## AI Coordination Check\n\n**Recent Summaries Query:**\n```sql\nSELECT id, from_agent, subject, created_at\nFROM api_wf.plan_communications\nWHERE type = summary AND plan_id = 0\nORDER BY created_at DESC LIMIT 2\n```\n\n**Session Handoff:**\n- For Claude: Architecture analysis and rendering pipeline design\n- For Kiro: Implementation of AppRenderer.jsx and AppLayout.jsx components\n\n---\n\n## Major Accomplishments\n\n### 1. Fixed Studio Navigation Issue\n- Identified SimpleLayout.jsx using window.location.href for internal routing\n- Updated to use React Router useNavigate() hook\n- File: /packages/shared-imports/src/components/layouts/SimpleLayout.jsx:2-17\n- Studio sidebar navigation now works without page reloads\n\n### 2. EventType AppBar/Sidebar Architecture Investigation\n- Discovered existing eventType definitions (id=3: AppBar, id=4: Sidebar, category=app)\n- Found MUI-based component implementations in /packages/shared-imports/src/components/navigation/\n- Identified eventComp_xref entry #71 (wfAppbar) that has never been rendered\n- Documented that Sidebar.jsx already integrates with getEventType() for navigation\n\n### 3. Architecture Gap Analysis\n- PageRenderer components (ContainerRenderer, LeafRenderer) do not handle category=app\n- No rendering pipeline from eventComp_xref to AppBar/Sidebar components\n- Apps still use hardcoded SimpleLayout instead of eventType-driven layouts\n- Identified clear migration path forward\n\n---\n\n## Statistics\n\n- Files Modified: 1 (SimpleLayout.jsx)\n- Files Investigated: 8 (AppBar, Sidebar, renderers, layouts)\n- EventTypes Analyzed: 2 (AppBar, Sidebar)\n- eventComp_xref Entries Found: 1 (wfAppbar #71, never rendered)\n- Plans Created: 1 (Plan #44: EventType AppBar/Sidebar Rendering)\n\n---\n\n## Next Steps\n\nSee Plan: 44 - EventType AppBar/Sidebar Rendering\n\nImmediate priorities:\n1. Add app category handler to PageRenderer\n2. Create AppLayout component\n3. Test with Studio app using existing eventComp_xref entry #71\n4. Convert AppBar/Sidebar from MUI to vanilla React\n\n---\n\n## Key Learnings\n\n### Navigation Architecture\n- SimpleLayout was breaking React Router by using browser navigation instead of router navigation\n- React Router hooks (useNavigate) must be used for internal SPA navigation\n- window.location.href causes full page reloads and breaks routing state\n\n### EventType System Partially Built\n- Core eventType definitions and components exist but are not wired to rendering pipeline\n- Sidebar.jsx already has sophisticated getEventType() integration for navigation\n- AppBar.jsx has configurable item rendering system ready to use\n\n### Migration Path Clear\n- eventComp_xref already has sample data (wfAppbar #71) just needs renderer implementation\n- Category=app needs to be added to PageRenderer switch statements\n- Per-app layouts via eventComp_xref will replace hardcoded shared layouts\n\n### Vanilla React Pattern Established\n- SimpleLayout demonstrates vanilla React + CSS approach\n- MUI dependencies cause theme context conflicts and bundle bloat\n- Vanilla approach is faster, more maintainable, and avoids framework issues\n\n---\n\n**Status:** Ready for implementation phase. Foundation is solid, just needs rendering pipeline connected.","plan_id":44,"subject":"SimpleLayout Navigation Fix & EventType AppBar/Sidebar Discovery","to_agent":"any","type":"summary"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.plan_communications","timestamp":"2025-10-22 18:07:26"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 18:07:26"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 18:07:26"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 18:07:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":213.500912,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 18:07:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 18:07:26"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 18:07:26"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 18:07:26"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 18:07:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":155.870116,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 18:07:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 18:07:26"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.plan_communications (plan_id, from_agent, to_agent, type, subject, message, created_at, created_by) VALUES (44, 'claude', 'any', 'summary', 'SimpleLayout Navigation Fix & EventType AppBar/Sidebar Discovery', '# Claude Session Summary - 2025-10-22\n\n**Focus:** Fixed Studio navigation and discovered EventType AppBar/Sidebar architecture\n**Primary AI:** Claude\n\n---\n\n## AI Coordination Check\n\n**Recent Summaries Query:**\n```sql\nSELECT id, from_agent, subject, created_at\nFROM api_wf.plan_communications\nWHERE type = summary AND plan_id = 0\nORDER BY created_at DESC LIMIT 2\n```\n\n**Session Handoff:**\n- For Claude: Architecture analysis and rendering pipeline design\n- For Kiro: Implementation of AppRenderer.jsx and AppLayout.jsx components\n\n---\n\n## Major Accomplishments\n\n### 1. Fixed Studio Navigation Issue\n- Identified SimpleLayout.jsx using window.location.href for internal routing\n- Updated to use React Router useNavigate() hook\n- File: /packages/shared-imports/src/components/layouts/SimpleLayout.jsx:2-17\n- Studio sidebar navigation now works without page reloads\n\n### 2. EventType AppBar/Sidebar Architecture Investigation\n- Discovered existing eventType definitions (id=3: AppBar, id=4: Sidebar, category=app)\n- Found MUI-based component implementations in /packages/shared-imports/src/components/navigation/\n- Identified eventComp_xref entry #71 (wfAppbar) that has never been rendered\n- Documented that Sidebar.jsx already integrates with getEventType() for navigation\n\n### 3. Architecture Gap Analysis\n- PageRenderer components (ContainerRenderer, LeafRenderer) do not handle category=app\n- No rendering pipeline from eventComp_xref to AppBar/Sidebar components\n- Apps still use hardcoded SimpleLayout instead of eventType-driven layouts\n- Identified clear migration path forward\n\n---\n\n## Statistics\n\n- Files Modified: 1 (SimpleLayout.jsx)\n- Files Investigated: 8 (AppBar, Sidebar, renderers, layouts)\n- EventTypes Analyzed: 2 (AppBar, Sidebar)\n- eventComp_xref Entries Found: 1 (wfAppbar #71, never rendered)\n- Plans Created: 1 (Plan #44: EventType AppBar/Sidebar Rendering)\n\n---\n\n## Next Steps\n\nSee Plan: 44 - EventType AppBar/Sidebar Rendering\n\nImmediate priorities:\n1. Add app category handler to PageRenderer\n2. Create AppLayout component\n3. Test with Studio app using existing eventComp_xref entry #71\n4. Convert AppBar/Sidebar from MUI to vanilla React\n\n---\n\n## Key Learnings\n\n### Navigation Architecture\n- SimpleLayout was breaking React Router by using browser navigation instead of router navigation\n- React Router hooks (useNavigate) must be used for internal SPA navigation\n- window.location.href causes full page reloads and breaks routing state\n\n### EventType System Partially Built\n- Core eventType definitions and components exist but are not wired to rendering pipeline\n- Sidebar.jsx already has sophisticated getEventType() integration for navigation\n- AppBar.jsx has configurable item rendering system ready to use\n\n### Migration Path Clear\n- eventComp_xref already has sample data (wfAppbar #71) just needs renderer implementation\n- Category=app needs to be added to PageRenderer switch statements\n- Per-app layouts via eventComp_xref will replace hardcoded shared layouts\n\n### Vanilla React Pattern Established\n- SimpleLayout demonstrates vanilla React + CSS approach\n- MUI dependencies cause theme context conflicts and bundle bloat\n- Vanilla approach is faster, more maintainable, and avoids framework issues\n\n---\n\n**Status:** Ready for implementation phase. Foundation is solid, just needs rendering pipeline connected.', NOW(), 'Paul')","timestamp":"2025-10-22 18:07:26"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 18:07:26"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 18:07:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":1452.2731079999999,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 18:07:27"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 18:07:27"}
{"level":"info","message":"[dmlProcessor.js] INSERT executed successfully on api_wf.plan_communications","timestamp":"2025-10-22 18:07:27"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-22 18:07:27"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (1825ms)","timestamp":"2025-10-22 18:07:27"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1824.874347,"method":"POST","operation":"http_request","path":"/api/execDML","status":200},"timestamp":"2025-10-22 18:07:27"}
{"body":{"impacts":{"0":{"affectedApps":{"0":"studio","1":"admin","2":"client","3":"planner"},"changeType":"MODIFY","createdBy":"claude","description":"Fixed navigation to use React Router useNavigate instead of window.location.href for internal routing","filePath":"/packages/shared-imports/src/components/layouts/SimpleLayout.jsx"}},"planId":44},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/logImpact","timestamp":"2025-10-22 18:07:33"}
{"level":"http","message":"[logImpact.js] POST /api/logImpact","timestamp":"2025-10-22 18:07:33"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-22 18:07:33"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-22 18:07:33"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":421.435107,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 18:07:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 18:07:34"}
{"level":"info","message":"[impactLogger.js] Logged 1 impacts","timestamp":"2025-10-22 18:07:34"}
{"level":"info","message":"[logImpact.js] Impact logging completed successfully","timestamp":"2025-10-22 18:07:34"}
{"level":"info","message":"[app.js]  Response: POST /api/logImpact 200 (424ms)","timestamp":"2025-10-22 18:07:34"}
{"body":{"data":{"plan_id":0},"method":"UPDATE","table":"api_wf.plan_communications","where":{"id":45}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-22 18:10:13"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-22 18:10:13"}
{"data":{"plan_id":0},"level":"debug","message":"[dmlProcessor.js] Processing UPDATE on api_wf.plan_communications","timestamp":"2025-10-22 18:10:13"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 18:10:13"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 18:10:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 18:10:14"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":181.71285,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 18:10:14"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 18:10:14"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 18:10:14"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 18:10:14"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 18:10:14"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":101.912622,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 18:10:14"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 18:10:14"}
{"code":"MISSING_PRIMARY_KEY","level":"error","message":"[execDML.js] DML operation failed: primaryKey is required for UPDATE operations","stack":"Error: primaryKey is required for UPDATE operations\n    at processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:68:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","status":400,"timestamp":"2025-10-22 18:10:14"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 400 (286ms)","timestamp":"2025-10-22 18:10:14"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":285.987571,"method":"POST","operation":"http_request","path":"/api/execDML","status":400},"timestamp":"2025-10-22 18:10:14"}
{"body":{"data":{"plan_id":0},"method":"UPDATE","table":"api_wf.plan_impacts","where":{"id":238}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-22 18:10:14"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-22 18:10:14"}
{"data":{"plan_id":0},"level":"debug","message":"[dmlProcessor.js] Processing UPDATE on api_wf.plan_impacts","timestamp":"2025-10-22 18:10:14"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 18:10:14"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 18:10:14"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 18:10:14"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":142.867838,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 18:10:14"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 18:10:14"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 18:10:14"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 18:10:14"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 18:10:14"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":100.175887,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 18:10:14"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 18:10:14"}
{"code":"MISSING_PRIMARY_KEY","level":"error","message":"[execDML.js] DML operation failed: primaryKey is required for UPDATE operations","stack":"Error: primaryKey is required for UPDATE operations\n    at processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:68:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","status":400,"timestamp":"2025-10-22 18:10:14"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 400 (245ms)","timestamp":"2025-10-22 18:10:14"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":245.285235,"method":"POST","operation":"http_request","path":"/api/execDML","status":400},"timestamp":"2025-10-22 18:10:14"}
{"body":{"data":{"plan_id":0},"method":"UPDATE","primaryKey":"id","table":"api_wf.plan_communications","where":{"id":45}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-22 18:10:19"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-22 18:10:19"}
{"data":{"plan_id":0},"level":"debug","message":"[dmlProcessor.js] Processing UPDATE on api_wf.plan_communications","primaryKey":"id","timestamp":"2025-10-22 18:10:19"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 18:10:19"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 18:10:19"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 18:10:19"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":206.386573,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 18:10:19"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 18:10:19"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 18:10:19"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 18:10:19"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 18:10:19"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":154.644776,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 18:10:19"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 18:10:19"}
{"level":"info","message":"[dmlProcessor.js] Executing UPDATE SQL:","sql":"UPDATE api_wf.plan_communications SET plan_id = 0, updated_at = NOW(), updated_by = 'Paul' WHERE id = NULL","timestamp":"2025-10-22 18:10:19"}
{"level":"debug","message":"[dbUtils.js] Executing PATCH query: ********","timestamp":"2025-10-22 18:10:19"}
{"level":"debug","message":"[dbUtils.js] Handling PATCH-specific logic","timestamp":"2025-10-22 18:10:19"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":404.703595,"method":"PATCH","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 18:10:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 18:10:20"}
{"level":"info","message":"[dmlProcessor.js] UPDATE executed successfully on api_wf.plan_communications","timestamp":"2025-10-22 18:10:20"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-22 18:10:20"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (770ms)","timestamp":"2025-10-22 18:10:20"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":769.508622,"method":"POST","operation":"http_request","path":"/api/execDML","status":200},"timestamp":"2025-10-22 18:10:20"}
{"body":{"data":{"plan_id":0},"method":"UPDATE","primaryKey":"id","table":"api_wf.plan_impacts","where":{"id":238}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-22 18:10:20"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-22 18:10:20"}
{"data":{"plan_id":0},"level":"debug","message":"[dmlProcessor.js] Processing UPDATE on api_wf.plan_impacts","primaryKey":"id","timestamp":"2025-10-22 18:10:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 18:10:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 18:10:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 18:10:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":148.722046,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 18:10:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 18:10:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-22 18:10:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-22 18:10:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-22 18:10:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":101.354991,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-22 18:10:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 18:10:20"}
{"level":"info","message":"[dmlProcessor.js] Executing UPDATE SQL:","sql":"UPDATE api_wf.plan_impacts SET plan_id = 0, updated_at = NOW(), updated_by = 'Paul' WHERE id = NULL","timestamp":"2025-10-22 18:10:20"}
{"level":"debug","message":"[dbUtils.js] Executing PATCH query: ********","timestamp":"2025-10-22 18:10:20"}
{"level":"debug","message":"[dbUtils.js] Handling PATCH-specific logic","timestamp":"2025-10-22 18:10:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":310.191508,"method":"PATCH","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-22 18:10:21"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-22 18:10:21"}
{"level":"info","message":"[dmlProcessor.js] UPDATE executed successfully on api_wf.plan_impacts","timestamp":"2025-10-22 18:10:21"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-22 18:10:21"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (563ms)","timestamp":"2025-10-22 18:10:21"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":563.091645,"method":"POST","operation":"http_request","path":"/api/execDML","status":200},"timestamp":"2025-10-22 18:10:21"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-22 19:05:50"}
