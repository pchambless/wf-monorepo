{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-24 06:44:03"}
{"level":"info","message":"Log file rotated","newFilename":"/home/paul/wf-monorepo-new/apps/server/server/logs/application-2025-10-24.log","oldFilename":"/home/paul/wf-monorepo-new/apps/server/server/logs/application-2025-10-23.log","timestamp":"2025-10-24 06:44:03"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-24 07:45:09"}
{"body":{"data":{"description":"Persistent architectural decisions, design patterns, and standards for WhatsFresh app. This plan serves as a living knowledge base that accumulates design decisions, mockup strategies, data model updates, and reusable patterns.","phase":"architecture","status":"reference","title":"WhatsFresh Architecture Reference","userID":"claude"},"method":"INSERT","table":"api_wf.plans"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 08:18:01"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 08:18:01"}
{"data":{"description":"Persistent architectural decisions, design patterns, and standards for WhatsFresh app. This plan serves as a living knowledge base that accumulates design decisions, mockup strategies, data model updates, and reusable patterns.","phase":"architecture","status":"reference","title":"WhatsFresh Architecture Reference","userID":"claude"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.plans","timestamp":"2025-10-24 08:18:01"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 08:18:01"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 08:18:01"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 08:18:01"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":232.785823,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 08:18:01"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:18:01"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 08:18:01"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 08:18:01"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 08:18:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":76.654237,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 08:18:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:18:02"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.plans (title, description, status, phase, created_at, created_by) VALUES ('WhatsFresh Architecture Reference', 'Persistent architectural decisions, design patterns, and standards for WhatsFresh app. This plan serves as a living knowledge base that accumulates design decisions, mockup strategies, data model updates, and reusable patterns.', 'reference', 'architecture', NOW(), 'Paul')","timestamp":"2025-10-24 08:18:02"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 08:18:02"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 08:18:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":65.203639,"errorCode":"ER_BAD_FIELD_ERROR","errorType":"Error","method":"POST","operation":"database_query","success":false},"timestamp":"2025-10-24 08:18:02"}
{"code":"ER_BAD_FIELD_ERROR","errno":1054,"level":"error","message":"Unknown column 'title' in 'field list'","sql":"INSERT INTO api_wf.plans (title, description, status, phase, created_at, created_by) VALUES ('WhatsFresh Architecture Reference', 'Persistent architectural decisions, design patterns, and standards for WhatsFresh app. This plan serves as a living knowledge base that accumulates design decisions, mockup strategies, data model updates, and reusable patterns.', 'reference', 'architecture', NOW(), 'Paul')","sqlMessage":"Unknown column 'title' in 'field list'","sqlState":"42S22","stack":"Error: Unknown column 'title' in 'field list'\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:57:40)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-24 08:18:02"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-10-24 08:18:02"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-24 08:18:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:18:02"}
{"category":"database_error","constraint":null,"level":"error","message":"[enhanceErrorResponse] INSERT failed: Database operation failed","timestamp":"2025-10-24 08:18:02"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-24 08:18:02"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (418ms)","timestamp":"2025-10-24 08:18:02"}
{"body":{"eventSQLId":"plansList"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 08:18:07"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 08:18:07"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: plansList","timestamp":"2025-10-24 08:18:07"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 08:18:07"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 08:18:07"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 08:18:07"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":228.183855,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 08:18:07"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:18:07"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 404 (229ms)","timestamp":"2025-10-24 08:18:07"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":229.320085,"method":"POST","operation":"http_request","path":"/api/execEventType","status":404},"timestamp":"2025-10-24 08:18:07"}
{"body":{"data":{"assigned_to":"claude","cluster":"architecture","description":"Persistent architectural decisions, design patterns, and standards for WhatsFresh app. This plan serves as a living knowledge base that accumulates design decisions, mockup strategies, data model updates, and reusable patterns.","name":"WhatsFresh Architecture Reference","priority":"high","status":"reference","userID":"claude"},"method":"INSERT","table":"api_wf.plans"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 08:18:23"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 08:18:23"}
{"data":{"assigned_to":"claude","cluster":"architecture","description":"Persistent architectural decisions, design patterns, and standards for WhatsFresh app. This plan serves as a living knowledge base that accumulates design decisions, mockup strategies, data model updates, and reusable patterns.","name":"WhatsFresh Architecture Reference","priority":"high","status":"reference","userID":"claude"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.plans","timestamp":"2025-10-24 08:18:23"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 08:18:23"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 08:18:23"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 08:18:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":169.745092,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 08:18:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:18:23"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 08:18:23"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 08:18:23"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 08:18:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":200.897077,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 08:18:24"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:18:24"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.plans (cluster, name, description, status, priority, assigned_to, created_at, created_by) VALUES ('architecture', 'WhatsFresh Architecture Reference', 'Persistent architectural decisions, design patterns, and standards for WhatsFresh app. This plan serves as a living knowledge base that accumulates design decisions, mockup strategies, data model updates, and reusable patterns.', 'reference', 'high', 'claude', NOW(), 'Paul')","timestamp":"2025-10-24 08:18:24"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 08:18:24"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 08:18:24"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":200.586775,"errorCode":"ER_BAD_FIELD_ERROR","errorType":"Error","method":"POST","operation":"database_query","success":false},"timestamp":"2025-10-24 08:18:24"}
{"code":"ER_BAD_FIELD_ERROR","errno":1054,"level":"error","message":"Unknown column 'cluster' in 'field list'","sql":"INSERT INTO api_wf.plans (cluster, name, description, status, priority, assigned_to, created_at, created_by) VALUES ('architecture', 'WhatsFresh Architecture Reference', 'Persistent architectural decisions, design patterns, and standards for WhatsFresh app. This plan serves as a living knowledge base that accumulates design decisions, mockup strategies, data model updates, and reusable patterns.', 'reference', 'high', 'claude', NOW(), 'Paul')","sqlMessage":"Unknown column 'cluster' in 'field list'","sqlState":"42S22","stack":"Error: Unknown column 'cluster' in 'field list'\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:57:40)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-24 08:18:24"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-10-24 08:18:24"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-24 08:18:24"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:18:24"}
{"category":"database_error","constraint":null,"level":"error","message":"[enhanceErrorResponse] INSERT failed: Database operation failed","timestamp":"2025-10-24 08:18:24"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-24 08:18:24"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (629ms)","timestamp":"2025-10-24 08:18:24"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":628.749035,"method":"POST","operation":"http_request","path":"/api/execDML","status":200},"timestamp":"2025-10-24 08:18:24"}
{"body":{"eventSQLId":"sessionRecentList"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 08:18:39"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 08:18:39"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: sessionRecentList","timestamp":"2025-10-24 08:18:39"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 08:18:39"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 08:18:39"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 08:18:39"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":94.22242,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 08:18:39"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:18:39"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: sessionRecentList (ID: 30)","timestamp":"2025-10-24 08:18:39"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT a.id, a.subject, a.message, a.from_agent, a.to_agent, a.created_at \r\nFROM   api_wf.plan_communications a\r\nWHERE a.type = 'summary'\r\nORDER BY a.created_at DESC \r\nlimit 2","timestamp":"2025-10-24 08:18:39"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 08:18:39"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 08:18:39"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-24 08:18:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":248.18528,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 08:18:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:18:40"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: sessionRecentList (ID: 30)","timestamp":"2025-10-24 08:18:40"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (345ms)","timestamp":"2025-10-24 08:18:40"}
{"body":{"data":{"cluster":"development","description":"Persistent architectural decisions, design patterns, and standards for WhatsFresh app","name":"WhatsFresh Architecture Reference","priority":"high","status":"active","userID":"claude"},"method":"INSERT","table":"api_wf.plans"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 08:18:46"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 08:18:46"}
{"data":{"cluster":"development","description":"Persistent architectural decisions, design patterns, and standards for WhatsFresh app","name":"WhatsFresh Architecture Reference","priority":"high","status":"active","userID":"claude"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.plans","timestamp":"2025-10-24 08:18:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 08:18:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 08:18:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 08:18:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":72.916614,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 08:18:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:18:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 08:18:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 08:18:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 08:18:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":99.130012,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 08:18:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:18:46"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.plans (cluster, name, description, status, priority, created_at, created_by) VALUES ('development', 'WhatsFresh Architecture Reference', 'Persistent architectural decisions, design patterns, and standards for WhatsFresh app', 'active', 'high', NOW(), 'Paul')","timestamp":"2025-10-24 08:18:46"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 08:18:46"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 08:18:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":200.578786,"errorCode":"ER_BAD_FIELD_ERROR","errorType":"Error","method":"POST","operation":"database_query","success":false},"timestamp":"2025-10-24 08:18:46"}
{"code":"ER_BAD_FIELD_ERROR","errno":1054,"level":"error","message":"Unknown column 'cluster' in 'field list'","sql":"INSERT INTO api_wf.plans (cluster, name, description, status, priority, created_at, created_by) VALUES ('development', 'WhatsFresh Architecture Reference', 'Persistent architectural decisions, design patterns, and standards for WhatsFresh app', 'active', 'high', NOW(), 'Paul')","sqlMessage":"Unknown column 'cluster' in 'field list'","sqlState":"42S22","stack":"Error: Unknown column 'cluster' in 'field list'\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:57:40)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-24 08:18:46"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-10-24 08:18:46"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-24 08:18:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:18:46"}
{"category":"database_error","constraint":null,"level":"error","message":"[enhanceErrorResponse] INSERT failed: Database operation failed","timestamp":"2025-10-24 08:18:46"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-24 08:18:46"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (477ms)","timestamp":"2025-10-24 08:18:46"}
{"body":{"conditions":{"id":45},"method":"SELECT","table":"api_wf.plans"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 08:21:16"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 08:21:16"}
{"level":"debug","message":"[dmlProcessor.js] Processing SELECT on api_wf.plans","timestamp":"2025-10-24 08:21:16"}
{"code":"MISSING_REQUIRED_FIELDS","level":"error","message":"[execDML.js] DML operation failed: method, table, and data are required","stack":"Error: method, table, and data are required\n    at processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:42:19)\n    at execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:30)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:157:13)\n    at Route.dispatch (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:117:3)\n    at handle (/home/paul/wf-monorepo-new/node_modules/router/index.js:435:11)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at /home/paul/wf-monorepo-new/node_modules/router/index.js:295:15\n    at processParams (/home/paul/wf-monorepo-new/node_modules/router/index.js:582:12)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/index.js:291:5)","status":400,"timestamp":"2025-10-24 08:21:16"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 400 (1ms)","timestamp":"2025-10-24 08:21:16"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.411259,"method":"POST","operation":"http_request","path":"/api/execDML","status":400},"timestamp":"2025-10-24 08:21:16"}
{"body":{"conditions":{"plan_id":45},"method":"SELECT","table":"api_wf.plan_impacts"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 08:21:16"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 08:21:16"}
{"level":"debug","message":"[dmlProcessor.js] Processing SELECT on api_wf.plan_impacts","timestamp":"2025-10-24 08:21:16"}
{"code":"MISSING_REQUIRED_FIELDS","level":"error","message":"[execDML.js] DML operation failed: method, table, and data are required","stack":"Error: method, table, and data are required\n    at processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:42:19)\n    at execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:30)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:157:13)\n    at Route.dispatch (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:117:3)\n    at handle (/home/paul/wf-monorepo-new/node_modules/router/index.js:435:11)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at /home/paul/wf-monorepo-new/node_modules/router/index.js:295:15\n    at processParams (/home/paul/wf-monorepo-new/node_modules/router/index.js:582:12)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/index.js:291:5)","status":400,"timestamp":"2025-10-24 08:21:16"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 400 (1ms)","timestamp":"2025-10-24 08:21:16"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.169498,"method":"POST","operation":"http_request","path":"/api/execDML","status":400},"timestamp":"2025-10-24 08:21:16"}
{"body":{"conditions":{"plan_id":45},"limit":5,"method":"SELECT","order":"created_at DESC","table":"api_wf.plan_communications"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 08:21:16"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 08:21:16"}
{"level":"debug","message":"[dmlProcessor.js] Processing SELECT on api_wf.plan_communications","timestamp":"2025-10-24 08:21:16"}
{"code":"MISSING_REQUIRED_FIELDS","level":"error","message":"[execDML.js] DML operation failed: method, table, and data are required","stack":"Error: method, table, and data are required\n    at processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:42:19)\n    at execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:30)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:157:13)\n    at Route.dispatch (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:117:3)\n    at handle (/home/paul/wf-monorepo-new/node_modules/router/index.js:435:11)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at /home/paul/wf-monorepo-new/node_modules/router/index.js:295:15\n    at processParams (/home/paul/wf-monorepo-new/node_modules/router/index.js:582:12)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/index.js:291:5)","status":400,"timestamp":"2025-10-24 08:21:16"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 400 (1ms)","timestamp":"2025-10-24 08:21:16"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.286006,"method":"POST","operation":"http_request","path":"/api/execDML","status":400},"timestamp":"2025-10-24 08:21:16"}
{"body":{"query":"SELECT * FROM api_wf.plans WHERE id = 45"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/query","timestamp":"2025-10-24 08:21:22"}
{"level":"warn","message":"[server.js] Route not found: POST /api/query","timestamp":"2025-10-24 08:21:22"}
{"level":"info","message":"[app.js]  Response: POST /api/query 404 (2ms)","timestamp":"2025-10-24 08:21:22"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.838547,"method":"POST","operation":"http_request","path":"/api/query","status":404},"timestamp":"2025-10-24 08:21:22"}
{"body":{"query":"SELECT * FROM api_wf.plan_impacts WHERE plan_id = 45 ORDER BY created_at DESC"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/query","timestamp":"2025-10-24 08:21:23"}
{"level":"warn","message":"[server.js] Route not found: POST /api/query","timestamp":"2025-10-24 08:21:23"}
{"level":"info","message":"[app.js]  Response: POST /api/query 404 (1ms)","timestamp":"2025-10-24 08:21:23"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.053101,"method":"POST","operation":"http_request","path":"/api/query","status":404},"timestamp":"2025-10-24 08:21:23"}
{"body":{"query":"SELECT * FROM api_wf.plan_communications WHERE plan_id = 45 ORDER BY created_at DESC LIMIT 5"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/query","timestamp":"2025-10-24 08:21:23"}
{"level":"warn","message":"[server.js] Route not found: POST /api/query","timestamp":"2025-10-24 08:21:23"}
{"level":"info","message":"[app.js]  Response: POST /api/query 404 (1ms)","timestamp":"2025-10-24 08:21:23"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.571719,"method":"POST","operation":"http_request","path":"/api/query","status":404},"timestamp":"2025-10-24 08:21:23"}
{"body":{"data":{"complexity":"high","description":"Persistent architectural decisions, design patterns, and standards for WhatsFresh app. This plan never closes - it serves as a living architecture document with traceable decisions via plan_communications and architectural artifacts via plan_impacts.","id":45,"phase":"architecture","priority":"high","status":"reference","title":"WhatsFresh Architecture Reference","userID":"claude"},"method":"INSERT","table":"api_wf.plans"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 08:25:31"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 08:25:31"}
{"data":{"complexity":"high","description":"Persistent architectural decisions, design patterns, and standards for WhatsFresh app. This plan never closes - it serves as a living architecture document with traceable decisions via plan_communications and architectural artifacts via plan_impacts.","id":45,"phase":"architecture","priority":"high","status":"reference","title":"WhatsFresh Architecture Reference","userID":"claude"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.plans","timestamp":"2025-10-24 08:25:31"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 08:25:31"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 08:25:31"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 08:25:32"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.581241,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 08:25:32"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:25:32"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 08:25:32"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 08:25:32"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 08:25:32"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.792705,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 08:25:32"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:25:32"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.plans (title, description, status, phase, priority, complexity, created_at, created_by) VALUES ('WhatsFresh Architecture Reference', 'Persistent architectural decisions, design patterns, and standards for WhatsFresh app. This plan never closes - it serves as a living architecture document with traceable decisions via plan_communications and architectural artifacts via plan_impacts.', 'reference', 'architecture', 'high', 'high', NOW(), 'Paul')","timestamp":"2025-10-24 08:25:32"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 08:25:32"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 08:25:32"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":68.567378,"errorCode":"ER_BAD_FIELD_ERROR","errorType":"Error","method":"POST","operation":"database_query","success":false},"timestamp":"2025-10-24 08:25:32"}
{"code":"ER_BAD_FIELD_ERROR","errno":1054,"level":"error","message":"Unknown column 'title' in 'field list'","sql":"INSERT INTO api_wf.plans (title, description, status, phase, priority, complexity, created_at, created_by) VALUES ('WhatsFresh Architecture Reference', 'Persistent architectural decisions, design patterns, and standards for WhatsFresh app. This plan never closes - it serves as a living architecture document with traceable decisions via plan_communications and architectural artifacts via plan_impacts.', 'reference', 'architecture', 'high', 'high', NOW(), 'Paul')","sqlMessage":"Unknown column 'title' in 'field list'","sqlState":"42S22","stack":"Error: Unknown column 'title' in 'field list'\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:57:40)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-24 08:25:32"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-10-24 08:25:32"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-24 08:25:32"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:25:32"}
{"category":"database_error","constraint":null,"level":"error","message":"[enhanceErrorResponse] INSERT failed: Database operation failed","timestamp":"2025-10-24 08:25:32"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-24 08:25:32"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (190ms)","timestamp":"2025-10-24 08:25:32"}
{"contentType":"application/json","eventType":"plans","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 08:25:35"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 08:25:35"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 400 (1ms)","timestamp":"2025-10-24 08:25:35"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.662475,"method":"POST","operation":"http_request","path":"/api/execEventType","status":400},"timestamp":"2025-10-24 08:25:35"}
{"body":{"data":{"assigned_to":"claude","created_by":"claude","description":"Persistent architectural decisions, design patterns, and standards for WhatsFresh app. This plan never closes - it serves as a living architecture document with traceable decisions via plan_communications and architectural artifacts via plan_impacts.","id":45,"name":"WhatsFresh Architecture Reference","priority":"high","status":"reference"},"method":"INSERT","table":"api_wf.plans"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 08:26:43"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 08:26:43"}
{"data":{"assigned_to":"claude","created_by":"claude","description":"Persistent architectural decisions, design patterns, and standards for WhatsFresh app. This plan never closes - it serves as a living architecture document with traceable decisions via plan_communications and architectural artifacts via plan_impacts.","id":45,"name":"WhatsFresh Architecture Reference","priority":"high","status":"reference"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.plans","timestamp":"2025-10-24 08:26:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 08:26:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 08:26:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 08:26:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":95.022211,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 08:26:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:26:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 08:26:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 08:26:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 08:26:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":59.492209,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 08:26:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:26:43"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.plans (name, description, status, priority, assigned_to, created_by, created_at, created_by) VALUES ('WhatsFresh Architecture Reference', 'Persistent architectural decisions, design patterns, and standards for WhatsFresh app. This plan never closes - it serves as a living architecture document with traceable decisions via plan_communications and architectural artifacts via plan_impacts.', 'reference', 'high', 'claude', 'claude', NOW(), 'Paul')","timestamp":"2025-10-24 08:26:43"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 08:26:43"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 08:26:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":141.657902,"errorCode":"ER_FIELD_SPECIFIED_TWICE","errorType":"Error","method":"POST","operation":"database_query","success":false},"timestamp":"2025-10-24 08:26:43"}
{"code":"ER_FIELD_SPECIFIED_TWICE","errno":1110,"level":"error","message":"Column 'created_by' specified twice","sql":"INSERT INTO api_wf.plans (name, description, status, priority, assigned_to, created_by, created_at, created_by) VALUES ('WhatsFresh Architecture Reference', 'Persistent architectural decisions, design patterns, and standards for WhatsFresh app. This plan never closes - it serves as a living architecture document with traceable decisions via plan_communications and architectural artifacts via plan_impacts.', 'reference', 'high', 'claude', 'claude', NOW(), 'Paul')","sqlMessage":"Column 'created_by' specified twice","sqlState":"42000","stack":"Error: Column 'created_by' specified twice\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:57:40)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-24 08:26:43"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-10-24 08:26:43"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-24 08:26:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:26:43"}
{"category":"database_error","constraint":null,"level":"error","message":"[enhanceErrorResponse] INSERT failed: Database operation failed","timestamp":"2025-10-24 08:26:43"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-24 08:26:43"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (400ms)","timestamp":"2025-10-24 08:26:43"}
{"body":{"data":{"assigned_to":"claude","created_by":"claude","description":"Persistent architectural decisions, design patterns, and standards for WhatsFresh app. This plan never closes - it serves as a living architecture document with traceable decisions via plan_communications and architectural artifacts via plan_impacts.","name":"WhatsFresh Architecture Reference","priority":"high","status":"reference"},"method":"INSERT","table":"api_wf.plans"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 08:26:47"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 08:26:47"}
{"data":{"assigned_to":"claude","created_by":"claude","description":"Persistent architectural decisions, design patterns, and standards for WhatsFresh app. This plan never closes - it serves as a living architecture document with traceable decisions via plan_communications and architectural artifacts via plan_impacts.","name":"WhatsFresh Architecture Reference","priority":"high","status":"reference"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.plans","timestamp":"2025-10-24 08:26:47"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 08:26:47"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 08:26:47"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 08:26:47"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.342105,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 08:26:47"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:26:47"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 08:26:47"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 08:26:47"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 08:26:47"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.18988,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 08:26:47"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:26:47"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.plans (name, description, status, priority, assigned_to, created_by, created_at, created_by) VALUES ('WhatsFresh Architecture Reference', 'Persistent architectural decisions, design patterns, and standards for WhatsFresh app. This plan never closes - it serves as a living architecture document with traceable decisions via plan_communications and architectural artifacts via plan_impacts.', 'reference', 'high', 'claude', 'claude', NOW(), 'Paul')","timestamp":"2025-10-24 08:26:47"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 08:26:47"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 08:26:47"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":90.33997,"errorCode":"ER_FIELD_SPECIFIED_TWICE","errorType":"Error","method":"POST","operation":"database_query","success":false},"timestamp":"2025-10-24 08:26:48"}
{"code":"ER_FIELD_SPECIFIED_TWICE","errno":1110,"level":"error","message":"Column 'created_by' specified twice","sql":"INSERT INTO api_wf.plans (name, description, status, priority, assigned_to, created_by, created_at, created_by) VALUES ('WhatsFresh Architecture Reference', 'Persistent architectural decisions, design patterns, and standards for WhatsFresh app. This plan never closes - it serves as a living architecture document with traceable decisions via plan_communications and architectural artifacts via plan_impacts.', 'reference', 'high', 'claude', 'claude', NOW(), 'Paul')","sqlMessage":"Column 'created_by' specified twice","sqlState":"42000","stack":"Error: Column 'created_by' specified twice\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:57:40)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-24 08:26:48"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-10-24 08:26:48"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-24 08:26:48"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:26:48"}
{"category":"database_error","constraint":null,"level":"error","message":"[enhanceErrorResponse] INSERT failed: Database operation failed","timestamp":"2025-10-24 08:26:48"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-24 08:26:48"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (233ms)","timestamp":"2025-10-24 08:26:48"}
{"body":{"data":{"assigned_to":"claude","description":"Persistent architectural decisions, design patterns, and standards for WhatsFresh app. This plan never closes - it serves as a living architecture document with traceable decisions via plan_communications and architectural artifacts via plan_impacts.","name":"WhatsFresh Architecture Reference","priority":"high","status":"reference"},"method":"INSERT","table":"api_wf.plans"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 08:27:31"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 08:27:31"}
{"data":{"assigned_to":"claude","description":"Persistent architectural decisions, design patterns, and standards for WhatsFresh app. This plan never closes - it serves as a living architecture document with traceable decisions via plan_communications and architectural artifacts via plan_impacts.","name":"WhatsFresh Architecture Reference","priority":"high","status":"reference"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.plans","timestamp":"2025-10-24 08:27:31"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 08:27:31"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 08:27:31"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 08:27:31"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":98.576309,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 08:27:31"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:27:31"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 08:27:31"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 08:27:31"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 08:27:31"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":32.736508,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 08:27:31"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:27:31"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.plans (name, description, status, priority, assigned_to, created_at, created_by) VALUES ('WhatsFresh Architecture Reference', 'Persistent architectural decisions, design patterns, and standards for WhatsFresh app. This plan never closes - it serves as a living architecture document with traceable decisions via plan_communications and architectural artifacts via plan_impacts.', 'reference', 'high', 'claude', NOW(), 'Paul')","timestamp":"2025-10-24 08:27:31"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 08:27:31"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 08:27:31"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":366.189442,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 08:27:32"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:27:32"}
{"level":"info","message":"[dmlProcessor.js] INSERT executed successfully on api_wf.plans","timestamp":"2025-10-24 08:27:32"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-24 08:27:32"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (500ms)","timestamp":"2025-10-24 08:27:32"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":500.087322,"method":"POST","operation":"http_request","path":"/api/execDML","status":200},"timestamp":"2025-10-24 08:27:32"}
{"body":{"data":{"from_agent":"claude","message":"Plan 45 serves as a persistent reference plan that never closes. It accumulates:\n\n- Architecture decisions (form layouts, navigation patterns)\n- Design patterns ({pageName} substitution, component templates)\n- Data model updates (schema changes, table relationships)\n- Reference materials (mockups, diagrams, prototypes)\n- WhatsFresh-wide standards (AppBar structure, Sidebar navigation)\n\nAll architecture-related communications and impacts are tracked here for traceability. This plan is always included in sessionRecentList via eventSQL id=30.","plan_id":45,"priority":"high","subject":"Plan 45 Purpose: Living Architecture Document","to_agent":"all","type":"architecture"},"method":"INSERT","table":"api_wf.plan_communications"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 08:27:42"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 08:27:42"}
{"data":{"from_agent":"claude","message":"Plan 45 serves as a persistent reference plan that never closes. It accumulates:\n\n- Architecture decisions (form layouts, navigation patterns)\n- Design patterns ({pageName} substitution, component templates)\n- Data model updates (schema changes, table relationships)\n- Reference materials (mockups, diagrams, prototypes)\n- WhatsFresh-wide standards (AppBar structure, Sidebar navigation)\n\nAll architecture-related communications and impacts are tracked here for traceability. This plan is always included in sessionRecentList via eventSQL id=30.","plan_id":45,"priority":"high","subject":"Plan 45 Purpose: Living Architecture Document","to_agent":"all","type":"architecture"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.plan_communications","timestamp":"2025-10-24 08:27:42"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 08:27:42"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 08:27:42"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 08:27:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":106.597055,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 08:27:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:27:42"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 08:27:42"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 08:27:42"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 08:27:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":100.400593,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 08:27:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:27:42"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.plan_communications (plan_id, from_agent, to_agent, type, subject, message, priority, created_at, created_by) VALUES (45, 'claude', 'all', 'architecture', 'Plan 45 Purpose: Living Architecture Document', 'Plan 45 serves as a persistent reference plan that never closes. It accumulates:\n\n- Architecture decisions (form layouts, navigation patterns)\n- Design patterns ({pageName} substitution, component templates)\n- Data model updates (schema changes, table relationships)\n- Reference materials (mockups, diagrams, prototypes)\n- WhatsFresh-wide standards (AppBar structure, Sidebar navigation)\n\nAll architecture-related communications and impacts are tracked here for traceability. This plan is always included in sessionRecentList via eventSQL id=30.', 'high', NOW(), 'Paul')","timestamp":"2025-10-24 08:27:42"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 08:27:42"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 08:27:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":100.884032,"errorCode":"ER_BAD_FIELD_ERROR","errorType":"Error","method":"POST","operation":"database_query","success":false},"timestamp":"2025-10-24 08:27:42"}
{"code":"ER_BAD_FIELD_ERROR","errno":1054,"level":"error","message":"Unknown column 'priority' in 'field list'","sql":"INSERT INTO api_wf.plan_communications (plan_id, from_agent, to_agent, type, subject, message, priority, created_at, created_by) VALUES (45, 'claude', 'all', 'architecture', 'Plan 45 Purpose: Living Architecture Document', 'Plan 45 serves as a persistent reference plan that never closes. It accumulates:\n\n- Architecture decisions (form layouts, navigation patterns)\n- Design patterns ({pageName} substitution, component templates)\n- Data model updates (schema changes, table relationships)\n- Reference materials (mockups, diagrams, prototypes)\n- WhatsFresh-wide standards (AppBar structure, Sidebar navigation)\n\nAll architecture-related communications and impacts are tracked here for traceability. This plan is always included in sessionRecentList via eventSQL id=30.', 'high', NOW(), 'Paul')","sqlMessage":"Unknown column 'priority' in 'field list'","sqlState":"42S22","stack":"Error: Unknown column 'priority' in 'field list'\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:57:40)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-24 08:27:42"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-10-24 08:27:42"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-24 08:27:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:27:42"}
{"category":"database_error","constraint":null,"level":"error","message":"[enhanceErrorResponse] INSERT failed: Database operation failed","timestamp":"2025-10-24 08:27:42"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-24 08:27:42"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (411ms)","timestamp":"2025-10-24 08:27:42"}
{"body":{"data":{"from_agent":"claude","message":"Plan 45 serves as a persistent reference plan that never closes. It accumulates:\n\n- Architecture decisions (form layouts, navigation patterns)\n- Design patterns ({pageName} substitution, component templates)\n- Data model updates (schema changes, table relationships)\n- Reference materials (mockups, diagrams, prototypes)\n- WhatsFresh-wide standards (AppBar structure, Sidebar navigation)\n\nAll architecture-related communications and impacts are tracked here for traceability. This plan is always included in sessionRecentList via eventSQL id=30.","plan_id":45,"subject":"Plan 45 Purpose: Living Architecture Document","to_agent":"all","type":"architecture"},"method":"INSERT","table":"api_wf.plan_communications"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 08:28:50"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 08:28:50"}
{"data":{"from_agent":"claude","message":"Plan 45 serves as a persistent reference plan that never closes. It accumulates:\n\n- Architecture decisions (form layouts, navigation patterns)\n- Design patterns ({pageName} substitution, component templates)\n- Data model updates (schema changes, table relationships)\n- Reference materials (mockups, diagrams, prototypes)\n- WhatsFresh-wide standards (AppBar structure, Sidebar navigation)\n\nAll architecture-related communications and impacts are tracked here for traceability. This plan is always included in sessionRecentList via eventSQL id=30.","plan_id":45,"subject":"Plan 45 Purpose: Living Architecture Document","to_agent":"all","type":"architecture"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.plan_communications","timestamp":"2025-10-24 08:28:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 08:28:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 08:28:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 08:28:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":45.496064,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 08:28:51"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:28:51"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 08:28:51"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 08:28:51"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 08:28:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":98.35635,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 08:28:51"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:28:51"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.plan_communications (plan_id, from_agent, to_agent, type, subject, message, created_at, created_by) VALUES (45, 'claude', 'all', 'architecture', 'Plan 45 Purpose: Living Architecture Document', 'Plan 45 serves as a persistent reference plan that never closes. It accumulates:\n\n- Architecture decisions (form layouts, navigation patterns)\n- Design patterns ({pageName} substitution, component templates)\n- Data model updates (schema changes, table relationships)\n- Reference materials (mockups, diagrams, prototypes)\n- WhatsFresh-wide standards (AppBar structure, Sidebar navigation)\n\nAll architecture-related communications and impacts are tracked here for traceability. This plan is always included in sessionRecentList via eventSQL id=30.', NOW(), 'Paul')","timestamp":"2025-10-24 08:28:51"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 08:28:51"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 08:28:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":301.015821,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 08:28:51"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:28:51"}
{"level":"info","message":"[dmlProcessor.js] INSERT executed successfully on api_wf.plan_communications","timestamp":"2025-10-24 08:28:51"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-24 08:28:51"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (447ms)","timestamp":"2025-10-24 08:28:51"}
{"body":{"data":{"from_agent":"claude","message":"Decision: Use Appsmith for rapid UI mockups and prototyping.\n\nRationale:\n- Fast visual prototyping without heavy design tools\n- Interactive mockups for user feedback\n- Component-based approach aligns with React architecture\n- Easy to share and iterate\n\nProcess:\n1. Create Appsmith prototype for new pages/features\n2. Export screenshots to AI/reference/ui-mockups/whatsfresh/\n3. Track mockup files as plan_impacts for Plan 45\n4. Reference mockups in implementation guidance\n\nMockup artifacts stored in plan_impacts provide visual reference for all WhatsFresh development.","plan_id":45,"subject":"Mockup Strategy: Appsmith Prototypes","to_agent":"all","type":"pattern"},"method":"INSERT","table":"api_wf.plan_communications"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 08:28:51"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 08:28:51"}
{"data":{"from_agent":"claude","message":"Decision: Use Appsmith for rapid UI mockups and prototyping.\n\nRationale:\n- Fast visual prototyping without heavy design tools\n- Interactive mockups for user feedback\n- Component-based approach aligns with React architecture\n- Easy to share and iterate\n\nProcess:\n1. Create Appsmith prototype for new pages/features\n2. Export screenshots to AI/reference/ui-mockups/whatsfresh/\n3. Track mockup files as plan_impacts for Plan 45\n4. Reference mockups in implementation guidance\n\nMockup artifacts stored in plan_impacts provide visual reference for all WhatsFresh development.","plan_id":45,"subject":"Mockup Strategy: Appsmith Prototypes","to_agent":"all","type":"pattern"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.plan_communications","timestamp":"2025-10-24 08:28:51"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 08:28:51"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 08:28:51"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 08:28:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":160.061589,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 08:28:51"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:28:51"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 08:28:51"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 08:28:51"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 08:28:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":200.265667,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 08:28:51"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:28:51"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.plan_communications (plan_id, from_agent, to_agent, type, subject, message, created_at, created_by) VALUES (45, 'claude', 'all', 'pattern', 'Mockup Strategy: Appsmith Prototypes', 'Decision: Use Appsmith for rapid UI mockups and prototyping.\n\nRationale:\n- Fast visual prototyping without heavy design tools\n- Interactive mockups for user feedback\n- Component-based approach aligns with React architecture\n- Easy to share and iterate\n\nProcess:\n1. Create Appsmith prototype for new pages/features\n2. Export screenshots to AI/reference/ui-mockups/whatsfresh/\n3. Track mockup files as plan_impacts for Plan 45\n4. Reference mockups in implementation guidance\n\nMockup artifacts stored in plan_impacts provide visual reference for all WhatsFresh development.', NOW(), 'Paul')","timestamp":"2025-10-24 08:28:51"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 08:28:51"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 08:28:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":402.917979,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 08:28:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:28:52"}
{"level":"info","message":"[dmlProcessor.js] INSERT executed successfully on api_wf.plan_communications","timestamp":"2025-10-24 08:28:52"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-24 08:28:52"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (766ms)","timestamp":"2025-10-24 08:28:52"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":765.577439,"method":"POST","operation":"http_request","path":"/api/execDML","status":200},"timestamp":"2025-10-24 08:28:52"}
{"body":{"eventSQLId":"sessionRecentList"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 08:29:12"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 08:29:12"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: sessionRecentList","timestamp":"2025-10-24 08:29:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 08:29:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 08:29:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 08:29:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":43.903436,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 08:29:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:29:12"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: sessionRecentList (ID: 30)","timestamp":"2025-10-24 08:29:12"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT a.id, a.subject, a.message, a.from_agent, a.to_agent, a.created_at \r\nFROM   api_wf.plan_communications a\r\nWHERE a.type = 'summary'\r\nORDER BY a.created_at DESC \r\nlimit 2","timestamp":"2025-10-24 08:29:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 08:29:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 08:29:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-24 08:29:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":78.480503,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 08:29:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:29:12"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: sessionRecentList (ID: 30)","timestamp":"2025-10-24 08:29:12"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (123ms)","timestamp":"2025-10-24 08:29:12"}
{"contentType":"application/json","eventType":"eventSQL","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 08:29:23"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 08:29:23"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: getEventSQL","timestamp":"2025-10-24 08:29:23"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 08:29:23"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 08:29:23"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 08:29:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":136.899854,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 08:29:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:29:23"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: getEventSQL (ID: 13)","timestamp":"2025-10-24 08:29:23"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 08:29:23"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 08:29:23"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 08:29:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":266.165899,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 08:29:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:29:23"}
{"level":"debug","message":"[execEventType.js] Resolved from context :xrefID → 64","timestamp":"2025-10-24 08:29:23"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name, comp_type, qryName, qrySQL\r\n     FROM api_wf.vw_eventSQL\r\n     WHERE xref_id = 64","timestamp":"2025-10-24 08:29:23"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 08:29:23"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 08:29:23"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 08:29:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":149.544787,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 08:29:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 08:29:23"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: getEventSQL (ID: 13)","timestamp":"2025-10-24 08:29:23"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (554ms)","timestamp":"2025-10-24 08:29:23"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":554.282629,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-24 08:29:23"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-10-24 09:32:28"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-10-24 09:32:29"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-10-24 09:32:29"}
{"level":"debug","message":"[index.js]  Initializing routes","timestamp":"2025-10-24 09:32:29"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-10-24 09:32:29"}
{"0":"POST /api/execEventType","1":"GET /api/eventType/:xrefId","10":"POST /api/clearVals","11":"POST /api/logImpact","12":"GET /api/impacts/recent","13":"GET /api/impacts/batch/:batchId","14":"GET /api/studio/genPageConfig","15":"POST /api/genPageConfig","16":"POST /api/initialize","17":"GET /api/util/list-routes","18":"POST /api/util/restart-server","19":"POST /api/util/run-migration","2":"GET /api/eventTypes","20":"GET /api/util/migration-status","21":"POST /api/util/open-terminal","22":"POST /api/auth/login","23":"GET /api/github/labels","24":"GET /api/github/issues","25":"POST /api/github/issues","26":"GET /api/github/issues/:issue_number/comments","27":"POST /api/github/upload-image","3":"GET /api/triggers","4":"POST /api/execDML","5":"POST /api/execCreateDoc","6":"GET /api/getDoc","7":"POST /api/studio/genFields","8":"GET /api/getVal","9":"POST /api/setVals","level":"info","message":"[registerRoutes.js] Routes registered:","timestamp":"2025-10-24 09:32:29"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-10-24 09:32:29"}
{"level":"debug","message":"[index.js]  Routes initialized","timestamp":"2025-10-24 09:32:29"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-10-24 09:32:29"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-10-24 09:32:29"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-10-24 09:32:29"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-10-24 09:32:29"}
{"body":{"query":"SELECT id, session_date, accomplishments, next_steps, key_learnings, created_at FROM api_wf.session_summaries WHERE agent = \"claude\" ORDER BY created_at DESC LIMIT 2"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/runQuery","timestamp":"2025-10-24 09:33:31"}
{"level":"warn","message":"[server.js] Route not found: POST /api/runQuery","timestamp":"2025-10-24 09:33:31"}
{"level":"info","message":"[app.js]  Response: POST /api/runQuery 404 (2ms)","timestamp":"2025-10-24 09:33:31"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.793415,"method":"POST","operation":"http_request","path":"/api/runQuery","status":404},"timestamp":"2025-10-24 09:33:31"}
{"body":{"query":"SELECT plan_id, file_path, change_type, phase, description, status, created_at FROM api_wf.plan_impacts WHERE created_at >= DATE_SUB(NOW(), INTERVAL 24 HOUR) ORDER BY created_at DESC LIMIT 20"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/runQuery","timestamp":"2025-10-24 09:33:31"}
{"level":"warn","message":"[server.js] Route not found: POST /api/runQuery","timestamp":"2025-10-24 09:33:31"}
{"level":"info","message":"[app.js]  Response: POST /api/runQuery 404 (1ms)","timestamp":"2025-10-24 09:33:31"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.058271,"method":"POST","operation":"http_request","path":"/api/runQuery","status":404},"timestamp":"2025-10-24 09:33:31"}
{"level":"debug","message":"[app.js]  Request","method":"GET","path":"/health","timestamp":"2025-10-24 09:33:37"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/status/database","timestamp":"2025-10-24 09:33:37"}
{"level":"info","message":"[app.js]  Response: GET /api/status/database 200 (1ms)","timestamp":"2025-10-24 09:33:37"}
{"contentType":"application/json","eventType":"sessionRecentList","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 09:34:55"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 09:34:55"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 400 (1ms)","timestamp":"2025-10-24 09:34:55"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.103856,"method":"POST","operation":"http_request","path":"/api/execEventType","status":400},"timestamp":"2025-10-24 09:34:55"}
{"body":{"query":"SELECT id, eventTypeName FROM api_wf.eventTypes WHERE eventTypeName LIKE \"%session%\" LIMIT 10"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/runQuery","timestamp":"2025-10-24 09:35:01"}
{"level":"warn","message":"[server.js] Route not found: POST /api/runQuery","timestamp":"2025-10-24 09:35:01"}
{"level":"info","message":"[app.js]  Response: POST /api/runQuery 404 (1ms)","timestamp":"2025-10-24 09:35:01"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.855579,"method":"POST","operation":"http_request","path":"/api/runQuery","status":404},"timestamp":"2025-10-24 09:35:01"}
{"body":{"eventSQLId":"sessionRecentList"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 09:38:23"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 09:38:23"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: sessionRecentList","timestamp":"2025-10-24 09:38:23"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 09:38:23"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 09:38:23"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 09:38:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":502.400152,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 09:38:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 09:38:23"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: sessionRecentList (ID: 30)","timestamp":"2025-10-24 09:38:23"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT a.id, a.subject, a.message, a.from_agent, a.to_agent, a.created_at \r\nFROM   api_wf.plan_communications a\r\nWHERE a.type = 'summary'\r\nORDER BY a.created_at DESC \r\nlimit 2","timestamp":"2025-10-24 09:38:23"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 09:38:23"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 09:38:23"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-24 09:38:24"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":369.953866,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 09:38:24"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 09:38:24"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: sessionRecentList (ID: 30)","timestamp":"2025-10-24 09:38:24"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (876ms)","timestamp":"2025-10-24 09:38:24"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":875.955497,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-24 09:38:24"}
{"body":{"eventSQLId":"recentImpactList"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 09:38:24"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 09:38:24"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: recentImpactList","timestamp":"2025-10-24 09:38:24"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 09:38:24"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 09:38:24"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 09:38:24"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":338.640398,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 09:38:24"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 09:38:24"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: recentImpactList (ID: 24)","timestamp":"2025-10-24 09:38:24"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select plan_id, fileName, t.fileFolder, t.change_type, description, batch_id, created_at, created_by\nfrom api_wf.plan_impacts t\nWHERE created_at >= DATE_SUB(NOW(), INTERVAL 7 DAY)\nORDER BY created_at DESC\nLIMIT 30","timestamp":"2025-10-24 09:38:24"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 09:38:24"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 09:38:24"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 30","timestamp":"2025-10-24 09:38:24"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":99.713639,"method":"GET","operation":"database_query","rowCount":30,"success":true},"timestamp":"2025-10-24 09:38:24"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 09:38:24"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: recentImpactList (ID: 24)","timestamp":"2025-10-24 09:38:24"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (442ms)","timestamp":"2025-10-24 09:38:24"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-24 09:47:35"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-24 10:48:17"}
{"body":{"eventSQLId":"sessionPlan45"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:02:21"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:02:21"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: sessionPlan45","timestamp":"2025-10-24 11:02:21"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:02:21"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:02:21"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:02:21"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":358.253808,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:02:21"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:02:21"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: sessionPlan45 (ID: 31)","timestamp":"2025-10-24 11:02:21"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select * \r\nfrom vw_plan45","timestamp":"2025-10-24 11:02:21"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:02:21"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:02:21"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":175.754161,"errorCode":"ER_NO_SUCH_TABLE","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-10-24 11:02:22"}
{"code":"ER_NO_SUCH_TABLE","errno":1146,"level":"error","message":"Table 'whatsfresh.vw_plan45' doesn't exist","sql":"select * \r\nfrom vw_plan45","sqlMessage":"Table 'whatsfresh.vw_plan45' doesn't exist","sqlState":"42S02","stack":"Error: Table 'whatsfresh.vw_plan45' doesn't exist\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execEventType.js:118:20)","timestamp":"2025-10-24 11:02:22"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-10-24 11:02:22"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execEventType.js:118:20)","timestamp":"2025-10-24 11:02:22"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:02:22"}
{"code":"ER_NO_SUCH_TABLE","errno":1146,"level":"error","message":"Table 'whatsfresh.vw_plan45' doesn't exist","sql":"select * \r\nfrom vw_plan45","sqlMessage":"Table 'whatsfresh.vw_plan45' doesn't exist","sqlState":"42S02","stack":"Error: Table 'whatsfresh.vw_plan45' doesn't exist\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execEventType.js:118:20)","timestamp":"2025-10-24 11:02:22"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 500 (541ms)","timestamp":"2025-10-24 11:02:22"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":541.164544,"method":"POST","operation":"http_request","path":"/api/execEventType","status":500},"timestamp":"2025-10-24 11:02:22"}
{"body":{"eventSQLId":"sessionPlan45"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:05:27"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:05:27"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: sessionPlan45","timestamp":"2025-10-24 11:05:27"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:05:27"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:05:27"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:05:27"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":262.196849,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:05:27"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:05:27"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: sessionPlan45 (ID: 31)","timestamp":"2025-10-24 11:05:27"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select * \r\nfrom vw_plan45","timestamp":"2025-10-24 11:05:27"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:05:27"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:05:27"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.424861,"errorCode":"ER_NO_SUCH_TABLE","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-10-24 11:05:27"}
{"code":"ER_NO_SUCH_TABLE","errno":1146,"level":"error","message":"Table 'whatsfresh.vw_plan45' doesn't exist","sql":"select * \r\nfrom vw_plan45","sqlMessage":"Table 'whatsfresh.vw_plan45' doesn't exist","sqlState":"42S02","stack":"Error: Table 'whatsfresh.vw_plan45' doesn't exist\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execEventType.js:118:20)","timestamp":"2025-10-24 11:05:27"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-10-24 11:05:27"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execEventType.js:118:20)","timestamp":"2025-10-24 11:05:27"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:05:27"}
{"code":"ER_NO_SUCH_TABLE","errno":1146,"level":"error","message":"Table 'whatsfresh.vw_plan45' doesn't exist","sql":"select * \r\nfrom vw_plan45","sqlMessage":"Table 'whatsfresh.vw_plan45' doesn't exist","sqlState":"42S02","stack":"Error: Table 'whatsfresh.vw_plan45' doesn't exist\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execEventType.js:118:20)","timestamp":"2025-10-24 11:05:27"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 500 (301ms)","timestamp":"2025-10-24 11:05:27"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":300.801358,"method":"POST","operation":"http_request","path":"/api/execEventType","status":500},"timestamp":"2025-10-24 11:05:27"}
{"body":{"eventSQLId":"sessionPlan45"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:06:39"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:06:39"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: sessionPlan45","timestamp":"2025-10-24 11:06:39"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:06:39"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:06:39"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:06:39"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.866724,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:06:39"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:06:39"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: sessionPlan45 (ID: 31)","timestamp":"2025-10-24 11:06:39"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select * \r\nfrom api_wf.vw_plan45","timestamp":"2025-10-24 11:06:39"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:06:39"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:06:39"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-24 11:06:39"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":197.686457,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 11:06:39"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:06:39"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: sessionPlan45 (ID: 31)","timestamp":"2025-10-24 11:06:39"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (235ms)","timestamp":"2025-10-24 11:06:39"}
{"body":{"data":{"assigned_to":"","comments":"","created_by":"claude","description":"# WhatsFresh Page Development Next Steps\n\n## Immediate (Priority: high)\n\n### 1. {pageName} Template Cloning in Studio\n- Create Studio UI for cloning {pageName} template to new CRUD pages\n- Implement placeholder substitution (pageName, viewName, etc.)\n- Add to Studio workflows for page generation\n- Test with sample WhatsFresh pages\n\n### 2. Appsmith Prototype Export Workflow\n- Document process for exporting Appsmith mockups\n- Create storage structure in AI/reference/ui-mockups/whatsfresh/\n- Add mockup tracking to plan_impacts for Plan 45\n- Link mockups to implementation guidance\n\n## Short Term (Priority: medium)\n\n### 3. First WhatsFresh CRUD Pages\n- Identify priority pages from Appsmith prototypes\n- Generate using {pageName} template and Studio\n- Implement based on mockup designs\n- Test rendering with DirectRenderer\n\n### 4. Plan 45 Impact Strategy\n- Establish patterns for what goes directly to Plan 45 vs separate plans\n- Create plan_communications cross-references for related work\n- Document decision criteria in Plan 45 communications\n\n## Future (Priority: low)\n\n### 5. Studio Enhancements\n- Add bulk page generation from template\n- Improve placeholder editor UI\n- Create template versioning system\n- Add mockup preview integration","name":"WhatsFresh Page Development - Template & Workflow Setup","priority":"see steps","status":"pending"},"method":"INSERT","table":"api_wf.plans"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 11:14:14"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 11:14:14"}
{"data":{"assigned_to":"","comments":"","created_by":"claude","description":"# WhatsFresh Page Development Next Steps\n\n## Immediate (Priority: high)\n\n### 1. {pageName} Template Cloning in Studio\n- Create Studio UI for cloning {pageName} template to new CRUD pages\n- Implement placeholder substitution (pageName, viewName, etc.)\n- Add to Studio workflows for page generation\n- Test with sample WhatsFresh pages\n\n### 2. Appsmith Prototype Export Workflow\n- Document process for exporting Appsmith mockups\n- Create storage structure in AI/reference/ui-mockups/whatsfresh/\n- Add mockup tracking to plan_impacts for Plan 45\n- Link mockups to implementation guidance\n\n## Short Term (Priority: medium)\n\n### 3. First WhatsFresh CRUD Pages\n- Identify priority pages from Appsmith prototypes\n- Generate using {pageName} template and Studio\n- Implement based on mockup designs\n- Test rendering with DirectRenderer\n\n### 4. Plan 45 Impact Strategy\n- Establish patterns for what goes directly to Plan 45 vs separate plans\n- Create plan_communications cross-references for related work\n- Document decision criteria in Plan 45 communications\n\n## Future (Priority: low)\n\n### 5. Studio Enhancements\n- Add bulk page generation from template\n- Improve placeholder editor UI\n- Create template versioning system\n- Add mockup preview integration","name":"WhatsFresh Page Development - Template & Workflow Setup","priority":"see steps","status":"pending"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.plans","timestamp":"2025-10-24 11:14:14"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:14:14"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:14:14"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:14:15"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":370.311593,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:14:15"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:14:15"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:14:15"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:14:15"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:14:15"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":349.999631,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:14:15"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:14:15"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.plans (name, status, priority, description, comments, assigned_to, created_by, created_at, created_by) VALUES ('WhatsFresh Page Development - Template & Workflow Setup', 'pending', 'see steps', '# WhatsFresh Page Development Next Steps\n\n## Immediate (Priority: high)\n\n### 1. {pageName} Template Cloning in Studio\n- Create Studio UI for cloning {pageName} template to new CRUD pages\n- Implement placeholder substitution (pageName, viewName, etc.)\n- Add to Studio workflows for page generation\n- Test with sample WhatsFresh pages\n\n### 2. Appsmith Prototype Export Workflow\n- Document process for exporting Appsmith mockups\n- Create storage structure in AI/reference/ui-mockups/whatsfresh/\n- Add mockup tracking to plan_impacts for Plan 45\n- Link mockups to implementation guidance\n\n## Short Term (Priority: medium)\n\n### 3. First WhatsFresh CRUD Pages\n- Identify priority pages from Appsmith prototypes\n- Generate using {pageName} template and Studio\n- Implement based on mockup designs\n- Test rendering with DirectRenderer\n\n### 4. Plan 45 Impact Strategy\n- Establish patterns for what goes directly to Plan 45 vs separate plans\n- Create plan_communications cross-references for related work\n- Document decision criteria in Plan 45 communications\n\n## Future (Priority: low)\n\n### 5. Studio Enhancements\n- Add bulk page generation from template\n- Improve placeholder editor UI\n- Create template versioning system\n- Add mockup preview integration', '', '', 'claude', NOW(), 'Paul')","timestamp":"2025-10-24 11:14:15"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 11:14:15"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 11:14:15"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":330.608687,"errorCode":"ER_FIELD_SPECIFIED_TWICE","errorType":"Error","method":"POST","operation":"database_query","success":false},"timestamp":"2025-10-24 11:14:16"}
{"code":"ER_FIELD_SPECIFIED_TWICE","errno":1110,"level":"error","message":"Column 'created_by' specified twice","sql":"INSERT INTO api_wf.plans (name, status, priority, description, comments, assigned_to, created_by, created_at, created_by) VALUES ('WhatsFresh Page Development - Template & Workflow Setup', 'pending', 'see steps', '# WhatsFresh Page Development Next Steps\n\n## Immediate (Priority: high)\n\n### 1. {pageName} Template Cloning in Studio\n- Create Studio UI for cloning {pageName} template to new CRUD pages\n- Implement placeholder substitution (pageName, viewName, etc.)\n- Add to Studio workflows for page generation\n- Test with sample WhatsFresh pages\n\n### 2. Appsmith Prototype Export Workflow\n- Document process for exporting Appsmith mockups\n- Create storage structure in AI/reference/ui-mockups/whatsfresh/\n- Add mockup tracking to plan_impacts for Plan 45\n- Link mockups to implementation guidance\n\n## Short Term (Priority: medium)\n\n### 3. First WhatsFresh CRUD Pages\n- Identify priority pages from Appsmith prototypes\n- Generate using {pageName} template and Studio\n- Implement based on mockup designs\n- Test rendering with DirectRenderer\n\n### 4. Plan 45 Impact Strategy\n- Establish patterns for what goes directly to Plan 45 vs separate plans\n- Create plan_communications cross-references for related work\n- Document decision criteria in Plan 45 communications\n\n## Future (Priority: low)\n\n### 5. Studio Enhancements\n- Add bulk page generation from template\n- Improve placeholder editor UI\n- Create template versioning system\n- Add mockup preview integration', '', '', 'claude', NOW(), 'Paul')","sqlMessage":"Column 'created_by' specified twice","sqlState":"42000","stack":"Error: Column 'created_by' specified twice\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:57:40)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-24 11:14:16"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-10-24 11:14:16"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-24 11:14:16"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:14:16"}
{"category":"database_error","constraint":null,"level":"error","message":"[enhanceErrorResponse] INSERT failed: Database operation failed","timestamp":"2025-10-24 11:14:16"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-24 11:14:16"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (1098ms)","timestamp":"2025-10-24 11:14:16"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1097.565153,"method":"POST","operation":"http_request","path":"/api/execDML","status":200},"timestamp":"2025-10-24 11:14:16"}
{"body":{"data":{"created_by":"claude","description":"Next steps for WhatsFresh page development","name":"WhatsFresh Page Development Setup","priority":"high","status":"pending"},"method":"INSERT","table":"api_wf.plans"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 11:14:22"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 11:14:22"}
{"data":{"created_by":"claude","description":"Next steps for WhatsFresh page development","name":"WhatsFresh Page Development Setup","priority":"high","status":"pending"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.plans","timestamp":"2025-10-24 11:14:22"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:14:22"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:14:22"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:14:22"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":291.234619,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:14:22"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:14:22"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:14:22"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:14:22"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:14:22"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":105.560901,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:14:22"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:14:22"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.plans (name, status, priority, description, created_by, created_at, created_by) VALUES ('WhatsFresh Page Development Setup', 'pending', 'high', 'Next steps for WhatsFresh page development', 'claude', NOW(), 'Paul')","timestamp":"2025-10-24 11:14:22"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 11:14:22"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 11:14:22"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":609.866654,"errorCode":"ER_FIELD_SPECIFIED_TWICE","errorType":"Error","method":"POST","operation":"database_query","success":false},"timestamp":"2025-10-24 11:14:23"}
{"code":"ER_FIELD_SPECIFIED_TWICE","errno":1110,"level":"error","message":"Column 'created_by' specified twice","sql":"INSERT INTO api_wf.plans (name, status, priority, description, created_by, created_at, created_by) VALUES ('WhatsFresh Page Development Setup', 'pending', 'high', 'Next steps for WhatsFresh page development', 'claude', NOW(), 'Paul')","sqlMessage":"Column 'created_by' specified twice","sqlState":"42000","stack":"Error: Column 'created_by' specified twice\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:57:40)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-24 11:14:23"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-10-24 11:14:23"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-24 11:14:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:14:23"}
{"category":"database_error","constraint":null,"level":"error","message":"[enhanceErrorResponse] INSERT failed: Database operation failed","timestamp":"2025-10-24 11:14:23"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-24 11:14:23"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (1055ms)","timestamp":"2025-10-24 11:14:23"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1055.254865,"method":"POST","operation":"http_request","path":"/api/execDML","status":200},"timestamp":"2025-10-24 11:14:23"}
{"body":{"eventSQLId":"sessionPlan45"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:14:28"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:14:28"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: sessionPlan45","timestamp":"2025-10-24 11:14:28"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:14:28"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:14:28"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:14:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":243.392304,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:14:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:14:28"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: sessionPlan45 (ID: 31)","timestamp":"2025-10-24 11:14:28"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select * \r\nfrom api_wf.vw_plan45","timestamp":"2025-10-24 11:14:28"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:14:28"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:14:28"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-24 11:14:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":50.367632,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 11:14:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:14:28"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: sessionPlan45 (ID: 31)","timestamp":"2025-10-24 11:14:28"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (297ms)","timestamp":"2025-10-24 11:14:28"}
{"body":{"data":{"created_by":"claude","from_agent":"claude","message":"# Claude Session Summary - 2025-10-24\n\n**Focus:** Enhanced session startup to include Plan 45 architectural context\n**Primary AI:** Claude\n\n---\n\n## ✅ Major Accomplishments\n\n### 1. Fixed Session Startup Workflow\n- Identified proper eventSQLId parameter usage (not eventType)\n- Successfully fetched sessionRecentList (last 2 summaries)\n- Successfully fetched recentImpactList (last 30 impacts / 7 days)\n- Retrieved Plan 45 context via sessionPlan45 eventSQL\n\n### 2. Integrated Plan 45 into Session Startup\n- Updated .shared/commands/startSession.md to include Plan 45 query\n- Added context notes explaining Plan 45 purpose and usage patterns\n- Documented decision criteria for Plan 45 vs separate plans\n- File: /home/paul/wf-monorepo-new/.shared/commands/startSession.md\n\n### 3. Plan 45 Context Discovery\n- Plan 45: Living architecture document that never closes\n- Tracks architecture decisions, design patterns, data models, WhatsFresh standards\n- Appsmith mockup strategy documented\n- SQL view created: vw_plan45 (communications + impacts unified)\n\n---\n\n## 📊 Statistics\n\n- Files Modified: 1 (.shared/commands/startSession.md)\n- EventSQL Queries Used: 3 (sessionRecentList, recentImpactList, sessionPlan45)\n- Database Views Referenced: 1 (vw_plan45)\n- Plans Contextualized: 1 (Plan 45)\n\n---\n\n## 🚀 Next Steps\n\n### WhatsFresh Page Development Focus\n\n**Immediate:**\n1. Create {pageName} template cloning process in Studio\n2. Establish Appsmith prototype export workflow\n3. Generate first WhatsFresh CRUD pages from templates\n\n**Short Term:**\n4. Define Plan 45 impact tracking strategy (direct vs cross-reference)\n5. Build Studio enhancements for bulk page generation\n\n---\n\n## 💡 Key Learnings\n\n### EventSQL vs EventType\n- Use eventSQLId parameter for API calls, not eventType\n- EventSQL queries stored in database with qryName as identifier\n- Parameter mismatch causes MISSING_EVENTSQL_ID error\n\n### SQL View Organization\n- New pattern: Store SQL views in AI/sql/api_wf/views/\n- Views combine related data (communications + impacts)\n- Fully qualified table names required (api_wf.table_name)\n\n### Plan 45 Strategy\n- Living document for all WhatsFresh architectural decisions\n- Flexible tracking: direct impacts OR cross-referenced communications\n- Always included in session startup for context continuity\n- vw_plan45 provides unified view of all Plan 45 activity\n\n---\n\n**Status:** Session startup workflow complete and validated. Ready for WhatsFresh page development.","plan_id":45,"subject":"Session Startup Workflow Enhancement & Plan 45 Integration","to_agent":"any","type":"summary"},"method":"INSERT","table":"api_wf.plan_communications"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 11:14:52"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 11:14:52"}
{"data":{"created_by":"claude","from_agent":"claude","message":"# Claude Session Summary - 2025-10-24\n\n**Focus:** Enhanced session startup to include Plan 45 architectural context\n**Primary AI:** Claude\n\n---\n\n## ✅ Major Accomplishments\n\n### 1. Fixed Session Startup Workflow\n- Identified proper eventSQLId parameter usage (not eventType)\n- Successfully fetched sessionRecentList (last 2 summaries)\n- Successfully fetched recentImpactList (last 30 impacts / 7 days)\n- Retrieved Plan 45 context via sessionPlan45 eventSQL\n\n### 2. Integrated Plan 45 into Session Startup\n- Updated .shared/commands/startSession.md to include Plan 45 query\n- Added context notes explaining Plan 45 purpose and usage patterns\n- Documented decision criteria for Plan 45 vs separate plans\n- File: /home/paul/wf-monorepo-new/.shared/commands/startSession.md\n\n### 3. Plan 45 Context Discovery\n- Plan 45: Living architecture document that never closes\n- Tracks architecture decisions, design patterns, data models, WhatsFresh standards\n- Appsmith mockup strategy documented\n- SQL view created: vw_plan45 (communications + impacts unified)\n\n---\n\n## 📊 Statistics\n\n- Files Modified: 1 (.shared/commands/startSession.md)\n- EventSQL Queries Used: 3 (sessionRecentList, recentImpactList, sessionPlan45)\n- Database Views Referenced: 1 (vw_plan45)\n- Plans Contextualized: 1 (Plan 45)\n\n---\n\n## 🚀 Next Steps\n\n### WhatsFresh Page Development Focus\n\n**Immediate:**\n1. Create {pageName} template cloning process in Studio\n2. Establish Appsmith prototype export workflow\n3. Generate first WhatsFresh CRUD pages from templates\n\n**Short Term:**\n4. Define Plan 45 impact tracking strategy (direct vs cross-reference)\n5. Build Studio enhancements for bulk page generation\n\n---\n\n## 💡 Key Learnings\n\n### EventSQL vs EventType\n- Use eventSQLId parameter for API calls, not eventType\n- EventSQL queries stored in database with qryName as identifier\n- Parameter mismatch causes MISSING_EVENTSQL_ID error\n\n### SQL View Organization\n- New pattern: Store SQL views in AI/sql/api_wf/views/\n- Views combine related data (communications + impacts)\n- Fully qualified table names required (api_wf.table_name)\n\n### Plan 45 Strategy\n- Living document for all WhatsFresh architectural decisions\n- Flexible tracking: direct impacts OR cross-referenced communications\n- Always included in session startup for context continuity\n- vw_plan45 provides unified view of all Plan 45 activity\n\n---\n\n**Status:** Session startup workflow complete and validated. Ready for WhatsFresh page development.","plan_id":45,"subject":"Session Startup Workflow Enhancement & Plan 45 Integration","to_agent":"any","type":"summary"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.plan_communications","timestamp":"2025-10-24 11:14:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:14:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:14:52"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:14:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.078889,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:14:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:14:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:14:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:14:52"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:14:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":126.77514,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:14:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:14:52"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.plan_communications (plan_id, from_agent, to_agent, type, subject, message, created_by, created_at, created_by) VALUES (45, 'claude', 'any', 'summary', 'Session Startup Workflow Enhancement & Plan 45 Integration', '# Claude Session Summary - 2025-10-24\n\n**Focus:** Enhanced session startup to include Plan 45 architectural context\n**Primary AI:** Claude\n\n---\n\n## ✅ Major Accomplishments\n\n### 1. Fixed Session Startup Workflow\n- Identified proper eventSQLId parameter usage (not eventType)\n- Successfully fetched sessionRecentList (last 2 summaries)\n- Successfully fetched recentImpactList (last 30 impacts / 7 days)\n- Retrieved Plan 45 context via sessionPlan45 eventSQL\n\n### 2. Integrated Plan 45 into Session Startup\n- Updated .shared/commands/startSession.md to include Plan 45 query\n- Added context notes explaining Plan 45 purpose and usage patterns\n- Documented decision criteria for Plan 45 vs separate plans\n- File: /home/paul/wf-monorepo-new/.shared/commands/startSession.md\n\n### 3. Plan 45 Context Discovery\n- Plan 45: Living architecture document that never closes\n- Tracks architecture decisions, design patterns, data models, WhatsFresh standards\n- Appsmith mockup strategy documented\n- SQL view created: vw_plan45 (communications + impacts unified)\n\n---\n\n## 📊 Statistics\n\n- Files Modified: 1 (.shared/commands/startSession.md)\n- EventSQL Queries Used: 3 (sessionRecentList, recentImpactList, sessionPlan45)\n- Database Views Referenced: 1 (vw_plan45)\n- Plans Contextualized: 1 (Plan 45)\n\n---\n\n## 🚀 Next Steps\n\n### WhatsFresh Page Development Focus\n\n**Immediate:**\n1. Create {pageName} template cloning process in Studio\n2. Establish Appsmith prototype export workflow\n3. Generate first WhatsFresh CRUD pages from templates\n\n**Short Term:**\n4. Define Plan 45 impact tracking strategy (direct vs cross-reference)\n5. Build Studio enhancements for bulk page generation\n\n---\n\n## 💡 Key Learnings\n\n### EventSQL vs EventType\n- Use eventSQLId parameter for API calls, not eventType\n- EventSQL queries stored in database with qryName as identifier\n- Parameter mismatch causes MISSING_EVENTSQL_ID error\n\n### SQL View Organization\n- New pattern: Store SQL views in AI/sql/api_wf/views/\n- Views combine related data (communications + impacts)\n- Fully qualified table names required (api_wf.table_name)\n\n### Plan 45 Strategy\n- Living document for all WhatsFresh architectural decisions\n- Flexible tracking: direct impacts OR cross-referenced communications\n- Always included in session startup for context continuity\n- vw_plan45 provides unified view of all Plan 45 activity\n\n---\n\n**Status:** Session startup workflow complete and validated. Ready for WhatsFresh page development.', 'claude', NOW(), 'Paul')","timestamp":"2025-10-24 11:14:52"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 11:14:52"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 11:14:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":158.59495,"errorCode":"ER_FIELD_SPECIFIED_TWICE","errorType":"Error","method":"POST","operation":"database_query","success":false},"timestamp":"2025-10-24 11:14:52"}
{"code":"ER_FIELD_SPECIFIED_TWICE","errno":1110,"level":"error","message":"Column 'created_by' specified twice","sql":"INSERT INTO api_wf.plan_communications (plan_id, from_agent, to_agent, type, subject, message, created_by, created_at, created_by) VALUES (45, 'claude', 'any', 'summary', 'Session Startup Workflow Enhancement & Plan 45 Integration', '# Claude Session Summary - 2025-10-24\n\n**Focus:** Enhanced session startup to include Plan 45 architectural context\n**Primary AI:** Claude\n\n---\n\n## ✅ Major Accomplishments\n\n### 1. Fixed Session Startup Workflow\n- Identified proper eventSQLId parameter usage (not eventType)\n- Successfully fetched sessionRecentList (last 2 summaries)\n- Successfully fetched recentImpactList (last 30 impacts / 7 days)\n- Retrieved Plan 45 context via sessionPlan45 eventSQL\n\n### 2. Integrated Plan 45 into Session Startup\n- Updated .shared/commands/startSession.md to include Plan 45 query\n- Added context notes explaining Plan 45 purpose and usage patterns\n- Documented decision criteria for Plan 45 vs separate plans\n- File: /home/paul/wf-monorepo-new/.shared/commands/startSession.md\n\n### 3. Plan 45 Context Discovery\n- Plan 45: Living architecture document that never closes\n- Tracks architecture decisions, design patterns, data models, WhatsFresh standards\n- Appsmith mockup strategy documented\n- SQL view created: vw_plan45 (communications + impacts unified)\n\n---\n\n## 📊 Statistics\n\n- Files Modified: 1 (.shared/commands/startSession.md)\n- EventSQL Queries Used: 3 (sessionRecentList, recentImpactList, sessionPlan45)\n- Database Views Referenced: 1 (vw_plan45)\n- Plans Contextualized: 1 (Plan 45)\n\n---\n\n## 🚀 Next Steps\n\n### WhatsFresh Page Development Focus\n\n**Immediate:**\n1. Create {pageName} template cloning process in Studio\n2. Establish Appsmith prototype export workflow\n3. Generate first WhatsFresh CRUD pages from templates\n\n**Short Term:**\n4. Define Plan 45 impact tracking strategy (direct vs cross-reference)\n5. Build Studio enhancements for bulk page generation\n\n---\n\n## 💡 Key Learnings\n\n### EventSQL vs EventType\n- Use eventSQLId parameter for API calls, not eventType\n- EventSQL queries stored in database with qryName as identifier\n- Parameter mismatch causes MISSING_EVENTSQL_ID error\n\n### SQL View Organization\n- New pattern: Store SQL views in AI/sql/api_wf/views/\n- Views combine related data (communications + impacts)\n- Fully qualified table names required (api_wf.table_name)\n\n### Plan 45 Strategy\n- Living document for all WhatsFresh architectural decisions\n- Flexible tracking: direct impacts OR cross-referenced communications\n- Always included in session startup for context continuity\n- vw_plan45 provides unified view of all Plan 45 activity\n\n---\n\n**Status:** Session startup workflow complete and validated. Ready for WhatsFresh page development.', 'claude', NOW(), 'Paul')","sqlMessage":"Column 'created_by' specified twice","sqlState":"42000","stack":"Error: Column 'created_by' specified twice\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:57:40)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-24 11:14:52"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-10-24 11:14:52"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:110:20)\n    at async execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:24)","timestamp":"2025-10-24 11:14:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:14:53"}
{"category":"database_error","constraint":null,"level":"error","message":"[enhanceErrorResponse] INSERT failed: Database operation failed","timestamp":"2025-10-24 11:14:53"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-24 11:14:53"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (409ms)","timestamp":"2025-10-24 11:14:53"}
{"body":{"impacts":{"0":{"affectedApps":{"0":"all"},"changeType":"MODIFY","createdBy":"claude","description":"Added Plan 45 (sessionPlan45) query to session startup - includes architectural decisions and WhatsFresh page development context","filePath":".shared/commands/startSession.md"}},"planId":45},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/logImpact","timestamp":"2025-10-24 11:15:00"}
{"level":"http","message":"[logImpact.js] POST /api/logImpact","timestamp":"2025-10-24 11:15:00"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 11:15:00"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 11:15:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":907.494502,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 11:15:01"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:15:01"}
{"level":"info","message":"[impactLogger.js] Logged 1 impacts","timestamp":"2025-10-24 11:15:01"}
{"level":"info","message":"[logImpact.js] Impact logging completed successfully","timestamp":"2025-10-24 11:15:01"}
{"level":"info","message":"[app.js]  Response: POST /api/logImpact 200 (910ms)","timestamp":"2025-10-24 11:15:01"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":910.064536,"method":"POST","operation":"http_request","path":"/api/logImpact","status":200},"timestamp":"2025-10-24 11:15:01"}
{"body":{"eventSQLId":"sessionPlan45"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:15:21"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:15:21"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: sessionPlan45","timestamp":"2025-10-24 11:15:21"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:15:21"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:15:21"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:15:22"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":199.120387,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:15:22"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:15:22"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: sessionPlan45 (ID: 31)","timestamp":"2025-10-24 11:15:22"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select * \r\nfrom api_wf.vw_plan45","timestamp":"2025-10-24 11:15:22"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:15:22"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:15:22"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-24 11:15:22"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.225712,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 11:15:22"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:15:22"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: sessionPlan45 (ID: 31)","timestamp":"2025-10-24 11:15:22"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (236ms)","timestamp":"2025-10-24 11:15:22"}
{"body":"{\n  \"method\": \"INSERT\",\n  \"table\": \"api_wf.plan_communications\",\n  \"data\": {\n    \"plan_id\": 45,\n    \"from_agent\": \"claude\",\n    \"to_agent\": \"any\",\n    \"type\": \"summary\",\n    \"subject\": \"Session Startup Workflow Enhancement & Plan 45 Integration\",\n    \"message\": \"# Claude Session Summary - 2025-10-24\\n\\n**Focus:** Enhanced session startup to include Plan 45 architectural context\\n**Primary AI:** Claude\\n\\n---\\n\\n## ✅ Major Accomplishments\\n\\n### 1. Fixed Session Startup Workflow\\n- Identified proper eventSQLId parameter usage (not eventType)\\n- Successfully fetched sessionRecentList (last 2 summaries)\\n- Successfully fetched recentImpactList (last 30 impacts / 7 days)\\n- Retrieved Plan 45 context via sessionPlan45 eventSQL\\n\\n### 2. Integrated Plan 45 into Session Startup\\n- Updated .shared/commands/startSession.md to include Plan 45 query\\n- Added context notes explaining Plan 45 purpose and usage patterns\\n- Documented decision criteria for Plan 45 vs separate plans\\n- File: /home/paul/wf-monorepo-new/.shared/commands/startSession.md\\n\\n### 3. Plan 45 Context Discovery\\n- Plan 45: Living architecture document that never closes\\n- Tracks architecture decisions, design patterns, data models, WhatsFresh standards\\n- Appsmith mockup strategy documented\\n- SQL view created: vw_plan45 (communications + impacts unified)\\n\\n---\\n\\n## 📊 Statistics\\n\\n- Files Modified: 1 (.shared/commands/startSession.md)\\n- EventSQL Queries Used: 3 (sessionRecentList, recentImpactList, sessionPlan45)\\n- Database Views Referenced: 1 (vw_plan45)\\n- Plans Contextualized: 1 (Plan 45)\\n\\n---\\n\\n## 🚀 Next Steps\\n\\n### WhatsFresh Page Development Focus\\n\\n**Immediate:**\\n1. Create {pageName} template cloning process in Studio\\n2. Establish Appsmith prototype export workflow\\n3. Generate first WhatsFresh CRUD pages from templates\\n\\n**Short Term:**\\n4. Define Plan 45 impact tracking strategy (direct vs cross-reference)\\n5. Build Studio enhancements for bulk page generation\\n\\n---\\n\\n## 💡 Key Learnings\\n\\n### EventSQL vs EventType\\n- Use eventSQLId parameter for API calls, not eventType\\n- EventSQL queries stored in database with qryName as identifier\\n- Parameter mismatch causes MISSING_EVENTSQL_ID error\\n\\n### SQL View Organization\\n- New pattern: Store SQL views in AI/sql/api_wf/views/\\n- Views combine related data (communications + impacts)\\n- Fully qualified table names required (api_wf.table_name)\\n\\n### Plan 45 Strategy\\n- Living document for all WhatsFresh architectural decisions\\n- Flexible tracking: direct impacts OR cross-referenced communications\\n- Always included in session startup for context continuity\\n- vw_plan45 provides unified view of all Plan 45 activity\\n\\n### execDML Auto-injection\\n- created_by is auto-injected from userID - do not include in data payload\\n- Prevents Column","expose":true,"level":"error","message":"[app.js]  JSON parsing error: Unterminated string in JSON at position 2818 (line 10 column 2572)","stack":"SyntaxError: Unterminated string in JSON at position 2818 (line 10 column 2572)\n    at JSON.parse (<anonymous>)\n    at parse (/home/paul/wf-monorepo-new/node_modules/body-parser/lib/types/json.js:77:19)\n    at /home/paul/wf-monorepo-new/node_modules/body-parser/lib/read.js:123:18\n    at AsyncResource.runInAsyncScope (node:async_hooks:214:14)\n    at invokeCallback (/home/paul/wf-monorepo-new/node_modules/raw-body/index.js:238:16)\n    at done (/home/paul/wf-monorepo-new/node_modules/raw-body/index.js:227:7)\n    at IncomingMessage.onEnd (/home/paul/wf-monorepo-new/node_modules/raw-body/index.js:287:7)\n    at IncomingMessage.emit (node:events:518:28)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)","status":400,"statusCode":400,"timestamp":"2025-10-24 11:15:45","type":"entity.parse.failed"}
{"body":{"data":{"from_agent":"claude","message":"# Claude Session - 2025-10-24\n\nEnhanced session startup to include Plan 45 architectural context.\n\n## Accomplishments\n\n1. Fixed Session Startup Workflow - Proper eventSQLId usage\n2. Integrated Plan 45 into startSession.md\n3. Logged file impact successfully\n\n## Statistics\n\n- Files Modified: 1 (startSession.md)\n- EventSQL Queries: 3 (sessionRecentList, recentImpactList, sessionPlan45)\n- Impacts Logged: 1 (Plan 45)\n\n## Next Steps\n\nWhatsFresh page development:\n- {pageName} template cloning in Studio\n- Appsmith mockup workflow\n- First CRUD pages\n\n## Key Learning\n\nexecDML auto-injects created_by from userID - omit from payload to avoid duplicate column error.","plan_id":45,"subject":"Session Startup Enhancement - Plan 45 Integration","to_agent":"any","type":"summary"},"method":"INSERT","table":"api_wf.plan_communications"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 11:16:08"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 11:16:08"}
{"data":{"from_agent":"claude","message":"# Claude Session - 2025-10-24\n\nEnhanced session startup to include Plan 45 architectural context.\n\n## Accomplishments\n\n1. Fixed Session Startup Workflow - Proper eventSQLId usage\n2. Integrated Plan 45 into startSession.md\n3. Logged file impact successfully\n\n## Statistics\n\n- Files Modified: 1 (startSession.md)\n- EventSQL Queries: 3 (sessionRecentList, recentImpactList, sessionPlan45)\n- Impacts Logged: 1 (Plan 45)\n\n## Next Steps\n\nWhatsFresh page development:\n- {pageName} template cloning in Studio\n- Appsmith mockup workflow\n- First CRUD pages\n\n## Key Learning\n\nexecDML auto-injects created_by from userID - omit from payload to avoid duplicate column error.","plan_id":45,"subject":"Session Startup Enhancement - Plan 45 Integration","to_agent":"any","type":"summary"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.plan_communications","timestamp":"2025-10-24 11:16:08"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:16:08"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:16:08"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:16:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":113.737148,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:16:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:16:08"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:16:08"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:16:08"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:16:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":96.239746,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:16:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:16:08"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.plan_communications (plan_id, from_agent, to_agent, type, subject, message, created_at, created_by) VALUES (45, 'claude', 'any', 'summary', 'Session Startup Enhancement - Plan 45 Integration', '# Claude Session - 2025-10-24\n\nEnhanced session startup to include Plan 45 architectural context.\n\n## Accomplishments\n\n1. Fixed Session Startup Workflow - Proper eventSQLId usage\n2. Integrated Plan 45 into startSession.md\n3. Logged file impact successfully\n\n## Statistics\n\n- Files Modified: 1 (startSession.md)\n- EventSQL Queries: 3 (sessionRecentList, recentImpactList, sessionPlan45)\n- Impacts Logged: 1 (Plan 45)\n\n## Next Steps\n\nWhatsFresh page development:\n- {pageName} template cloning in Studio\n- Appsmith mockup workflow\n- First CRUD pages\n\n## Key Learning\n\nexecDML auto-injects created_by from userID - omit from payload to avoid duplicate column error.', NOW(), 'Paul')","timestamp":"2025-10-24 11:16:08"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 11:16:08"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 11:16:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":390.254171,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 11:16:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:16:08"}
{"level":"info","message":"[dmlProcessor.js] INSERT executed successfully on api_wf.plan_communications","timestamp":"2025-10-24 11:16:08"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-24 11:16:08"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (604ms)","timestamp":"2025-10-24 11:16:08"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":603.928605,"method":"POST","operation":"http_request","path":"/api/execDML","status":200},"timestamp":"2025-10-24 11:16:08"}
{"body":{"eventSQLId":"sessionPlan45"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:16:15"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:16:15"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: sessionPlan45","timestamp":"2025-10-24 11:16:15"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:16:15"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:16:15"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:16:15"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":46.907004,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:16:15"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:16:15"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: sessionPlan45 (ID: 31)","timestamp":"2025-10-24 11:16:15"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select * \r\nfrom api_wf.vw_plan45","timestamp":"2025-10-24 11:16:15"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:16:15"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:16:15"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 11:16:15"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":76.028985,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 11:16:15"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:16:15"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: sessionPlan45 (ID: 31)","timestamp":"2025-10-24 11:16:15"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (125ms)","timestamp":"2025-10-24 11:16:15"}
{"body":{"impacts":{"0":{"affectedApps":{"0":"all"},"changeType":"MODIFY","createdBy":"claude","description":"Fixed documentation - removed created_by from examples, added note that execDML auto-injects it from userID","filePath":".shared/commands/summary.md"}},"planId":45},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/logImpact","timestamp":"2025-10-24 11:16:34"}
{"level":"http","message":"[logImpact.js] POST /api/logImpact","timestamp":"2025-10-24 11:16:34"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 11:16:34"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 11:16:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":404.510984,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 11:16:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:16:35"}
{"level":"info","message":"[impactLogger.js] Logged 1 impacts","timestamp":"2025-10-24 11:16:35"}
{"level":"info","message":"[logImpact.js] Impact logging completed successfully","timestamp":"2025-10-24 11:16:35"}
{"level":"info","message":"[app.js]  Response: POST /api/logImpact 200 (407ms)","timestamp":"2025-10-24 11:16:35"}
{"body":{"eventSQLId":"eventTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:25:01"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:25:01"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: eventTypeList","timestamp":"2025-10-24 11:25:01"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:01"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:01"}
{"body":{"eventSQLId":"qrySqlList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:25:01"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:25:01"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: qrySqlList","timestamp":"2025-10-24 11:25:01"}
{"body":{"eventSQLId":"triggerList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:25:01"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:25:01"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: triggerList","timestamp":"2025-10-24 11:25:01"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:25:01"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":438.237014,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:25:01"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:01"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: eventTypeList (ID: 9)","timestamp":"2025-10-24 11:25:01"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name, category, title, style\r\nFROM api_wf.eventType\r\nORDER BY Hier, name","timestamp":"2025-10-24 11:25:01"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:01"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:01"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:01"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:01"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:01"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:01"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-24 11:25:01"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":137.379795,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-24 11:25:01"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:01"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: eventTypeList (ID: 9)","timestamp":"2025-10-24 11:25:01"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (580ms)","timestamp":"2025-10-24 11:25:01"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":580.056021,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-24 11:25:01"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:25:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":863.048244,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:25:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:02"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: qrySqlList (ID: 17)","timestamp":"2025-10-24 11:25:02"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, qryName, qrySQL, description\r\nFROM api_wf.eventSQL\r\nWHERE active = 1\r\nORDER BY qryName","timestamp":"2025-10-24 11:25:02"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:02"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:02"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:25:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":863.495839,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:25:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:02"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: triggerList (ID: 16)","timestamp":"2025-10-24 11:25:02"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select a.id, a.trigType, content_type, a.is_dom_event, a.name, \r\na.description, a.example \r\nfrom    api_wf.triggers a \r\norder by a.trigType, name","timestamp":"2025-10-24 11:25:02"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:02"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:02"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 30","timestamp":"2025-10-24 11:25:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":265.760832,"method":"GET","operation":"database_query","rowCount":30,"success":true},"timestamp":"2025-10-24 11:25:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:02"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: qrySqlList (ID: 17)","timestamp":"2025-10-24 11:25:02"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (1133ms)","timestamp":"2025-10-24 11:25:02"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1132.528773,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-24 11:25:02"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 23","timestamp":"2025-10-24 11:25:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":268.029746,"method":"GET","operation":"database_query","rowCount":23,"success":true},"timestamp":"2025-10-24 11:25:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:02"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: triggerList (ID: 16)","timestamp":"2025-10-24 11:25:02"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (1135ms)","timestamp":"2025-10-24 11:25:02"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1135.175934,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-24 11:25:02"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:25:02"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:25:02"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-24 11:25:02"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:02"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:02"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:25:02"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:25:02"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-24 11:25:02"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:02"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:02"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:25:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":262.382896,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:25:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:02"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-24 11:25:02"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 70\r\nAND   comp_type = 'App'\r\nAND   xref_id <> parent_id  -- exclude root.","timestamp":"2025-10-24 11:25:02"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:02"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:02"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:25:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":264.471096,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:25:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:02"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-24 11:25:02"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 70\r\nAND   comp_type = 'App'\r\nAND   xref_id <> parent_id  -- exclude root.","timestamp":"2025-10-24 11:25:02"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:02"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:02"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 11:25:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":150.260385,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 11:25:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:02"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-24 11:25:02"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (417ms)","timestamp":"2025-10-24 11:25:02"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 11:25:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":152.422336,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 11:25:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:02"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-24 11:25:02"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (416ms)","timestamp":"2025-10-24 11:25:02"}
{"body":{"values":{"0":{"paramName":"appID","paramVal":"51"},"1":{"paramName":"appName","paramVal":"admin"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 11:25:06"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 11:25:06"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:06"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:06"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:25:06"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":156.068034,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:25:06"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:06"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:06"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:06"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:25:06"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":65.942069,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:25:06"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:06"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 11:25:06"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 11:25:06"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":605.54847,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 11:25:07"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:07"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 11:25:07"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 11:25:07"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":370.233883,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 11:25:07"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:07"}
{"level":"debug","message":"[setVals.js] Set 2 values for pc7900@gmail.com","timestamp":"2025-10-24 11:25:07"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (1204ms)","timestamp":"2025-10-24 11:25:07"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1203.589473,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 11:25:07"}
{"body":{"eventSQLId":"pageList","params":{"appID":"51"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:25:07"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:25:07"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: pageList","timestamp":"2025-10-24 11:25:07"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:07"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:07"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:25:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":296.103135,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:25:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:08"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: pageList (ID: 2)","timestamp":"2025-10-24 11:25:08"}
{"level":"debug","message":"[execEventType.js] Using passed param :appID → 51...","timestamp":"2025-10-24 11:25:08"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 51\r\nAND   comp_type in ('Page','CRUD')","timestamp":"2025-10-24 11:25:08"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:08"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:08"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:25:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":69.06962,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:25:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:08"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: pageList (ID: 2)","timestamp":"2025-10-24 11:25:08"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (369ms)","timestamp":"2025-10-24 11:25:08"}
{"body":{"values":{"0":{"paramName":"pageID","paramVal":"64"},"1":{"paramName":"pageName","paramVal":"{pageName}"},"2":{"paramName":"xrefID","paramVal":"64"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 11:25:09"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 11:25:09"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:09"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:25:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":41.772709,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:25:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:09"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:09"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:25:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":112.382126,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:25:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:09"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 11:25:09"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 11:25:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":357.561365,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 11:25:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:09"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 11:25:09"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 11:25:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":245.026563,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 11:25:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:10"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 11:25:10"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 11:25:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":333.396042,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 11:25:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:10"}
{"level":"debug","message":"[setVals.js] Set 3 values for pc7900@gmail.com","timestamp":"2025-10-24 11:25:10"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (1096ms)","timestamp":"2025-10-24 11:25:10"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1096.22374,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 11:25:10"}
{"body":{"eventSQLId":"xrefHierarchy","params":{"xrefID":"64"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:25:10"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:25:10"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefHierarchy","timestamp":"2025-10-24 11:25:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:25:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":124.355287,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:25:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:10"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefHierarchy (ID: 3)","timestamp":"2025-10-24 11:25:10"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-24 11:25:10"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_structure(64)","timestamp":"2025-10-24 11:25:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-24 11:25:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":142.017778,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 11:25:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:10"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefHierarchy (ID: 3)","timestamp":"2025-10-24 11:25:10"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (269ms)","timestamp":"2025-10-24 11:25:10"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":51}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:25:10"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:25:10"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 11:25:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:25:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":198.756532,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 51...","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 51 \r\nAND active = 1","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 11:25:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":180.169776,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:11"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 11:25:11"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (381ms)","timestamp":"2025-10-24 11:25:11"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":51}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:25:11"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:25:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":115.448952,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 51...","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 51\r\nORDER BY class, ordr","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:25:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":94.225722,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:11"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 11:25:11"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (212ms)","timestamp":"2025-10-24 11:25:11"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:25:11"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:25:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":97.659159,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 64 \r\nAND active = 1","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 11:25:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":204.580818,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:11"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 11:25:11"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (304ms)","timestamp":"2025-10-24 11:25:11"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:25:11"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:25:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":143.915464,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 64\r\nORDER BY class, ordr","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:25:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":64.563609,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:11"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 11:25:11"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (210ms)","timestamp":"2025-10-24 11:25:11"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":65}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:25:11"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:25:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":97.656275,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 65...","timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 65 \r\nAND active = 1","timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 11:25:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":169.90006,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:12"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 11:25:12"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (270ms)","timestamp":"2025-10-24 11:25:12"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":65}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:25:12"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:25:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":114.155289,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 65...","timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 65\r\nORDER BY class, ordr","timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 11:25:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":193.418768,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:12"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 11:25:12"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (311ms)","timestamp":"2025-10-24 11:25:12"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":66}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:25:12"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:25:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":43.838068,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 66...","timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 66 \r\nAND active = 1","timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:25:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":155.728205,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:12"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 11:25:12"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (202ms)","timestamp":"2025-10-24 11:25:12"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":66}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:25:12"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:25:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":44.820924,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 66...","timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 66\r\nORDER BY class, ordr","timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 11:25:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":242.629689,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:13"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 11:25:13"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (291ms)","timestamp":"2025-10-24 11:25:13"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:25:13"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:25:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.955658,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 67 \r\nAND active = 1","timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 4","timestamp":"2025-10-24 11:25:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":261.651082,"method":"GET","operation":"database_query","rowCount":4,"success":true},"timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:13"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 11:25:13"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (300ms)","timestamp":"2025-10-24 11:25:13"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:25:13"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:25:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":44.058478,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 67\r\nORDER BY class, ordr","timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 11:25:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":253.105961,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:13"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 11:25:13"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (301ms)","timestamp":"2025-10-24 11:25:13"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":68}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:25:13"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:25:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":39.03532,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 68...","timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 68 \r\nAND active = 1","timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-24 11:25:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":197.388412,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:13"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 11:25:13"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (239ms)","timestamp":"2025-10-24 11:25:13"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":68}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:25:13"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:25:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":38.23561,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:25:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:14"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 11:25:14"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 68...","timestamp":"2025-10-24 11:25:14"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 68\r\nORDER BY class, ordr","timestamp":"2025-10-24 11:25:14"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:14"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:14"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:25:14"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":105.364464,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:25:14"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:14"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 11:25:14"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (146ms)","timestamp":"2025-10-24 11:25:14"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":69}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:25:14"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:25:14"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 11:25:14"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:14"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:14"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:25:14"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":68.063068,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:25:14"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:14"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 11:25:14"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 69...","timestamp":"2025-10-24 11:25:14"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 69 \r\nAND active = 1","timestamp":"2025-10-24 11:25:14"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:14"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:14"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 11:25:14"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":78.315137,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 11:25:14"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:14"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 11:25:14"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (149ms)","timestamp":"2025-10-24 11:25:14"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":69}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:25:14"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:25:14"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 11:25:14"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:14"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:14"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:25:14"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":51.646417,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:25:14"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:14"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 11:25:14"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 69...","timestamp":"2025-10-24 11:25:14"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 69\r\nORDER BY class, ordr","timestamp":"2025-10-24 11:25:14"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:25:14"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:25:14"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 11:25:14"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":188.878795,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 11:25:14"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:25:14"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 11:25:14"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (244ms)","timestamp":"2025-10-24 11:25:14"}
{"body":{"data":{"from_agent":"claude","message":"# Grid rowActions Rendering Implementation\n\n## Changes Made\n\n### 1. rowRenderer.js - Added rowActions Support\n- Added rowActions parameter to renderRow function\n- Created createActionsCell function to generate action buttons\n- Implemented action button onClick handlers with:\n  - Confirmation dialogs (if confirm: true)\n  - Row data injection for DELETE operations\n  - Trigger execution via TriggerEngine\n  - onSuccess trigger support for grid refresh\n\n### 2. DirectRenderer.jsx - Pass rowActions to Renderer\n- Extract rowActions from gridComponent.props\n- Pass to renderRow function for tbody rendering\n\n## Action Button Features\n\n- Stop propagation (don't trigger row selection)\n- Confirmation dialogs for destructive actions\n- Color coding (error=red, default=blue)\n- Tooltips from action.tooltip\n- Auto-inject row ID for DELETE operations\n- Support onSuccess triggers for post-action refreshes\n\n## Usage Pattern\n\n```javascript\nrowActions: [{\n  id: \"delete\",\n  type: \"button\",\n  icon: \"Delete\",\n  color: \"error\",\n  tooltip: \"Delete\",\n  trigger: {\n    action: \"execDML\",\n    content: {\n      method: \"DELETE\",\n      table: \"{{getVal:tableName}}\",\n      confirm: true,\n      confirmMessage: \"Are you sure?\"\n    },\n    onSuccess: [\n      { action: \"refresh\", params: [\"{pageName}Grid\"] }\n    ]\n  }\n}]\n```\n\n## Files Modified\n\n- /apps/studio/src/rendering/utils/rowRenderer.js\n- /apps/studio/src/rendering/DirectRenderer.jsx","plan_id":45,"subject":"Grid rowActions Implementation Complete","to_agent":"any","type":"architecture"},"method":"INSERT","table":"api_wf.plan_communications"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 11:33:35"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 11:33:35"}
{"data":{"from_agent":"claude","message":"# Grid rowActions Rendering Implementation\n\n## Changes Made\n\n### 1. rowRenderer.js - Added rowActions Support\n- Added rowActions parameter to renderRow function\n- Created createActionsCell function to generate action buttons\n- Implemented action button onClick handlers with:\n  - Confirmation dialogs (if confirm: true)\n  - Row data injection for DELETE operations\n  - Trigger execution via TriggerEngine\n  - onSuccess trigger support for grid refresh\n\n### 2. DirectRenderer.jsx - Pass rowActions to Renderer\n- Extract rowActions from gridComponent.props\n- Pass to renderRow function for tbody rendering\n\n## Action Button Features\n\n- Stop propagation (don't trigger row selection)\n- Confirmation dialogs for destructive actions\n- Color coding (error=red, default=blue)\n- Tooltips from action.tooltip\n- Auto-inject row ID for DELETE operations\n- Support onSuccess triggers for post-action refreshes\n\n## Usage Pattern\n\n```javascript\nrowActions: [{\n  id: \"delete\",\n  type: \"button\",\n  icon: \"Delete\",\n  color: \"error\",\n  tooltip: \"Delete\",\n  trigger: {\n    action: \"execDML\",\n    content: {\n      method: \"DELETE\",\n      table: \"{{getVal:tableName}}\",\n      confirm: true,\n      confirmMessage: \"Are you sure?\"\n    },\n    onSuccess: [\n      { action: \"refresh\", params: [\"{pageName}Grid\"] }\n    ]\n  }\n}]\n```\n\n## Files Modified\n\n- /apps/studio/src/rendering/utils/rowRenderer.js\n- /apps/studio/src/rendering/DirectRenderer.jsx","plan_id":45,"subject":"Grid rowActions Implementation Complete","to_agent":"any","type":"architecture"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.plan_communications","timestamp":"2025-10-24 11:33:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:33:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:33:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:33:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":87.685058,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:33:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:33:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:33:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:33:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:33:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":108.304998,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:33:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:33:36"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.plan_communications (plan_id, from_agent, to_agent, type, subject, message, created_at, created_by) VALUES (45, 'claude', 'any', 'architecture', 'Grid rowActions Implementation Complete', '# Grid rowActions Rendering Implementation\n\n## Changes Made\n\n### 1. rowRenderer.js - Added rowActions Support\n- Added rowActions parameter to renderRow function\n- Created createActionsCell function to generate action buttons\n- Implemented action button onClick handlers with:\n  - Confirmation dialogs (if confirm: true)\n  - Row data injection for DELETE operations\n  - Trigger execution via TriggerEngine\n  - onSuccess trigger support for grid refresh\n\n### 2. DirectRenderer.jsx - Pass rowActions to Renderer\n- Extract rowActions from gridComponent.props\n- Pass to renderRow function for tbody rendering\n\n## Action Button Features\n\n- Stop propagation (don''t trigger row selection)\n- Confirmation dialogs for destructive actions\n- Color coding (error=red, default=blue)\n- Tooltips from action.tooltip\n- Auto-inject row ID for DELETE operations\n- Support onSuccess triggers for post-action refreshes\n\n## Usage Pattern\n\n```javascript\nrowActions: [{\n  id: \"delete\",\n  type: \"button\",\n  icon: \"Delete\",\n  color: \"error\",\n  tooltip: \"Delete\",\n  trigger: {\n    action: \"execDML\",\n    content: {\n      method: \"DELETE\",\n      table: \"{{getVal:tableName}}\",\n      confirm: true,\n      confirmMessage: \"Are you sure?\"\n    },\n    onSuccess: [\n      { action: \"refresh\", params: [\"{pageName}Grid\"] }\n    ]\n  }\n}]\n```\n\n## Files Modified\n\n- /apps/studio/src/rendering/utils/rowRenderer.js\n- /apps/studio/src/rendering/DirectRenderer.jsx', NOW(), 'Paul')","timestamp":"2025-10-24 11:33:36"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 11:33:36"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 11:33:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":236.797489,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 11:33:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:33:36"}
{"level":"info","message":"[dmlProcessor.js] INSERT executed successfully on api_wf.plan_communications","timestamp":"2025-10-24 11:33:36"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-24 11:33:36"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (437ms)","timestamp":"2025-10-24 11:33:36"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-24 11:48:42"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 11:51:19"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 11:51:19"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 11:51:19"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:51:19"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:51:19"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-24 11:51:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":117.731088,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-24 11:51:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:51:20"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 11:51:20"}
{"level":"info","message":"[getEventTypes.js] Fetched 19 eventTypes","timestamp":"2025-10-24 11:51:20"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 200 (124ms)","timestamp":"2025-10-24 11:51:20"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 11:51:20"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 11:51:20"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 11:51:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:51:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:51:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-24 11:51:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":162.583633,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-24 11:51:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:51:20"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 11:51:20"}
{"level":"info","message":"[getEventTypes.js] Fetched 19 eventTypes","timestamp":"2025-10-24 11:51:20"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (165ms)","timestamp":"2025-10-24 11:51:20"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:51:20"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:51:20"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 11:51:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:51:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:51:20"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:51:20"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:51:20"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 11:51:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:51:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:51:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:51:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":69.972132,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:51:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:51:20"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 11:51:20"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 11:51:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:51:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:51:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:51:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":73.991788,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:51:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:51:20"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 11:51:20"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 11:51:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:51:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:51:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 11:51:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":155.8536,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 11:51:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:51:20"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 11:51:20"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (227ms)","timestamp":"2025-10-24 11:51:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 11:51:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":155.938343,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 11:51:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:51:20"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 11:51:20"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (232ms)","timestamp":"2025-10-24 11:51:20"}
{"body":{"values":{"0":{"paramName":"xrefID","paramVal":67}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 11:51:25"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 11:51:25"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:51:25"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:51:25"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:51:25"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.150558,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:51:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:51:25"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:51:25"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:51:25"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:51:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.38653,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:51:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:51:26"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 11:51:26"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 11:51:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":439.975979,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 11:51:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:51:26"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 11:51:26"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (522ms)","timestamp":"2025-10-24 11:51:26"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":521.747594,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 11:51:26"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:51:26"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:51:26"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 11:51:26"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:51:26"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:51:26"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 11:51:26"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 11:51:26"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 11:51:26"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:51:26"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:51:26"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:51:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.548148,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:51:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:51:26"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 11:51:26"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-24 11:51:26"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 67\r\nORDER BY class, ordr","timestamp":"2025-10-24 11:51:26"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:51:26"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:51:26"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:51:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":43.260935,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:51:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:51:26"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 11:51:26"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-24 11:51:26"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 67 \r\nAND active = 1","timestamp":"2025-10-24 11:51:26"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:51:26"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:51:26"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 4","timestamp":"2025-10-24 11:51:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":194.085137,"method":"GET","operation":"database_query","rowCount":4,"success":true},"timestamp":"2025-10-24 11:51:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:51:26"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 11:51:26"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (241ms)","timestamp":"2025-10-24 11:51:26"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 11:51:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":198.781095,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 11:51:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:51:26"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 11:51:26"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (239ms)","timestamp":"2025-10-24 11:51:26"}
{"body":{"data":{"from_agent":"claude","message":"# Corrected Grid rowActions Configuration\n\n## Current Issue\n\nThe {pageName}Grid rowActions delete trigger is missing:\n1. Table name (required for execDML DELETE)\n2. onSuccess refresh to update grid after deletion\n\n## Corrected Configuration\n\n```json\n{\n  \"rowActions\": [\n    {\n      \"id\": \"delete\",\n      \"type\": \"button\",\n      \"icon\": \"Delete\",\n      \"color\": \"error\",\n      \"tooltip\": \"Delete\",\n      \"trigger\": {\n        \"action\": \"execDML\",\n        \"content\": {\n          \"method\": \"DELETE\",\n          \"table\": \"{{getVal:tableName}}\",\n          \"confirm\": true,\n          \"confirmMessage\": \"Are you sure you want to delete this item?\"\n        },\n        \"onSuccess\": [\n          {\n            \"action\": \"refresh\",\n            \"params\": [\"{pageName}Grid\"]\n          }\n        ]\n      }\n    }\n  ]\n}\n```\n\n## Additional Required Fixes\n\n### 1. Page onLoad - Set tableName\n\nComponent: {pageName} (id=64)\n\n```json\n{\n  \"workflowTriggers\": {\n    \"onLoad\": [\n      {\n        \"action\": \"setVals\",\n        \"params\": [{\"tableName\": \"api_wf.{tableName}\"}]\n      },\n      {\n        \"action\": \"refresh\",\n        \"params\": \"{pageName}Grid\"\n      }\n    ]\n  }\n}\n```\n\n### 2. Grid onChange - Set method to UPDATE\n\nComponent: {pageName}Grid (id=67)\n\nCurrent:\n```json\n{\n  \"action\": \"setVals\",\n  \"params\": [{\"selectedID\": \"{{selected.id}}\"}]\n}\n```\n\nCorrected:\n```json\n{\n  \"action\": \"setVals\",\n  \"params\": [{\n    \"selectedID\": \"{{selected.id}}\",\n    \"method\": \"UPDATE\"\n  }]\n}\n```\n\n### 3. Form Submit - Hide form after success\n\nComponent: {pageName}Submit (id=69)\n\nAdd to onClick triggers:\n```json\n{\n  \"action\": \"visible\",\n  \"params\": [{\"{pageName}Form\": false}]\n}\n```\n\n## Summary\n\nThese changes complete the CRUD pattern:\n- INSERT: AddNew button sets method=INSERT, clears selectedID\n- UPDATE: Grid onChange sets method=UPDATE, selectedID=row.id\n- DELETE: rowActions button executes DELETE with row.id\n- All operations refresh grid and provide user feedback","plan_id":45,"subject":"{pageName} Grid rowActions - Corrected Configuration","to_agent":"any","type":"pattern"},"method":"INSERT","table":"api_wf.plan_communications"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 11:54:10"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 11:54:10"}
{"data":{"from_agent":"claude","message":"# Corrected Grid rowActions Configuration\n\n## Current Issue\n\nThe {pageName}Grid rowActions delete trigger is missing:\n1. Table name (required for execDML DELETE)\n2. onSuccess refresh to update grid after deletion\n\n## Corrected Configuration\n\n```json\n{\n  \"rowActions\": [\n    {\n      \"id\": \"delete\",\n      \"type\": \"button\",\n      \"icon\": \"Delete\",\n      \"color\": \"error\",\n      \"tooltip\": \"Delete\",\n      \"trigger\": {\n        \"action\": \"execDML\",\n        \"content\": {\n          \"method\": \"DELETE\",\n          \"table\": \"{{getVal:tableName}}\",\n          \"confirm\": true,\n          \"confirmMessage\": \"Are you sure you want to delete this item?\"\n        },\n        \"onSuccess\": [\n          {\n            \"action\": \"refresh\",\n            \"params\": [\"{pageName}Grid\"]\n          }\n        ]\n      }\n    }\n  ]\n}\n```\n\n## Additional Required Fixes\n\n### 1. Page onLoad - Set tableName\n\nComponent: {pageName} (id=64)\n\n```json\n{\n  \"workflowTriggers\": {\n    \"onLoad\": [\n      {\n        \"action\": \"setVals\",\n        \"params\": [{\"tableName\": \"api_wf.{tableName}\"}]\n      },\n      {\n        \"action\": \"refresh\",\n        \"params\": \"{pageName}Grid\"\n      }\n    ]\n  }\n}\n```\n\n### 2. Grid onChange - Set method to UPDATE\n\nComponent: {pageName}Grid (id=67)\n\nCurrent:\n```json\n{\n  \"action\": \"setVals\",\n  \"params\": [{\"selectedID\": \"{{selected.id}}\"}]\n}\n```\n\nCorrected:\n```json\n{\n  \"action\": \"setVals\",\n  \"params\": [{\n    \"selectedID\": \"{{selected.id}}\",\n    \"method\": \"UPDATE\"\n  }]\n}\n```\n\n### 3. Form Submit - Hide form after success\n\nComponent: {pageName}Submit (id=69)\n\nAdd to onClick triggers:\n```json\n{\n  \"action\": \"visible\",\n  \"params\": [{\"{pageName}Form\": false}]\n}\n```\n\n## Summary\n\nThese changes complete the CRUD pattern:\n- INSERT: AddNew button sets method=INSERT, clears selectedID\n- UPDATE: Grid onChange sets method=UPDATE, selectedID=row.id\n- DELETE: rowActions button executes DELETE with row.id\n- All operations refresh grid and provide user feedback","plan_id":45,"subject":"{pageName} Grid rowActions - Corrected Configuration","to_agent":"any","type":"pattern"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.plan_communications","timestamp":"2025-10-24 11:54:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:54:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:54:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:54:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":156.26206,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:54:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:54:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 11:54:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 11:54:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 11:54:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":100.608074,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 11:54:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:54:10"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.plan_communications (plan_id, from_agent, to_agent, type, subject, message, created_at, created_by) VALUES (45, 'claude', 'any', 'pattern', '{pageName} Grid rowActions - Corrected Configuration', '# Corrected Grid rowActions Configuration\n\n## Current Issue\n\nThe {pageName}Grid rowActions delete trigger is missing:\n1. Table name (required for execDML DELETE)\n2. onSuccess refresh to update grid after deletion\n\n## Corrected Configuration\n\n```json\n{\n  \"rowActions\": [\n    {\n      \"id\": \"delete\",\n      \"type\": \"button\",\n      \"icon\": \"Delete\",\n      \"color\": \"error\",\n      \"tooltip\": \"Delete\",\n      \"trigger\": {\n        \"action\": \"execDML\",\n        \"content\": {\n          \"method\": \"DELETE\",\n          \"table\": \"{{getVal:tableName}}\",\n          \"confirm\": true,\n          \"confirmMessage\": \"Are you sure you want to delete this item?\"\n        },\n        \"onSuccess\": [\n          {\n            \"action\": \"refresh\",\n            \"params\": [\"{pageName}Grid\"]\n          }\n        ]\n      }\n    }\n  ]\n}\n```\n\n## Additional Required Fixes\n\n### 1. Page onLoad - Set tableName\n\nComponent: {pageName} (id=64)\n\n```json\n{\n  \"workflowTriggers\": {\n    \"onLoad\": [\n      {\n        \"action\": \"setVals\",\n        \"params\": [{\"tableName\": \"api_wf.{tableName}\"}]\n      },\n      {\n        \"action\": \"refresh\",\n        \"params\": \"{pageName}Grid\"\n      }\n    ]\n  }\n}\n```\n\n### 2. Grid onChange - Set method to UPDATE\n\nComponent: {pageName}Grid (id=67)\n\nCurrent:\n```json\n{\n  \"action\": \"setVals\",\n  \"params\": [{\"selectedID\": \"{{selected.id}}\"}]\n}\n```\n\nCorrected:\n```json\n{\n  \"action\": \"setVals\",\n  \"params\": [{\n    \"selectedID\": \"{{selected.id}}\",\n    \"method\": \"UPDATE\"\n  }]\n}\n```\n\n### 3. Form Submit - Hide form after success\n\nComponent: {pageName}Submit (id=69)\n\nAdd to onClick triggers:\n```json\n{\n  \"action\": \"visible\",\n  \"params\": [{\"{pageName}Form\": false}]\n}\n```\n\n## Summary\n\nThese changes complete the CRUD pattern:\n- INSERT: AddNew button sets method=INSERT, clears selectedID\n- UPDATE: Grid onChange sets method=UPDATE, selectedID=row.id\n- DELETE: rowActions button executes DELETE with row.id\n- All operations refresh grid and provide user feedback', NOW(), 'Paul')","timestamp":"2025-10-24 11:54:10"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 11:54:10"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 11:54:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":143.812235,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 11:54:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:54:10"}
{"level":"info","message":"[dmlProcessor.js] INSERT executed successfully on api_wf.plan_communications","timestamp":"2025-10-24 11:54:10"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-24 11:54:10"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (403ms)","timestamp":"2025-10-24 11:54:10"}
{"body":{"impacts":{"0":{"affectedApps":{"0":"studio"},"changeType":"MODIFY","createdBy":"claude","description":"Implemented rowActions rendering - added createActionsCell function, action button click handlers with confirmation dialogs, DELETE row ID injection, and onSuccess trigger support","filePath":"apps/studio/src/rendering/utils/rowRenderer.js"},"1":{"affectedApps":{"0":"studio"},"changeType":"MODIFY","createdBy":"claude","description":"Added rowActions support - extract rowActions from gridComponent.props and pass to renderRow for tbody rendering","filePath":"apps/studio/src/rendering/DirectRenderer.jsx"}},"planId":45},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/logImpact","timestamp":"2025-10-24 11:54:25"}
{"level":"http","message":"[logImpact.js] POST /api/logImpact","timestamp":"2025-10-24 11:54:25"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 11:54:25"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 11:54:25"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":315.92841,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 11:54:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 11:54:25"}
{"level":"info","message":"[impactLogger.js] Logged 2 impacts","timestamp":"2025-10-24 11:54:25"}
{"level":"info","message":"[logImpact.js] Impact logging completed successfully","timestamp":"2025-10-24 11:54:25"}
{"level":"info","message":"[app.js]  Response: POST /api/logImpact 200 (318ms)","timestamp":"2025-10-24 11:54:25"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:26:15"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:26:15"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 12:26:15"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:26:15"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:26:15"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 12:26:15"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 12:26:15"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 12:26:15"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:26:15"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:26:15"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:26:15"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:26:15"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 12:26:15"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:26:15"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:26:15"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:26:15"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":45.034828,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:26:15"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:26:15"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 12:26:15"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 12:26:15"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:26:15"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:26:15"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-24 12:26:15"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":251.060203,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-24 12:26:15"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:26:15"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 12:26:15"}
{"level":"info","message":"[getEventTypes.js] Fetched 19 eventTypes","timestamp":"2025-10-24 12:26:15"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (253ms)","timestamp":"2025-10-24 12:26:15"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:26:15"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":255.254028,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:26:15"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:26:15"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 12:26:15"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 12:26:15"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:26:15"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:26:15"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 12:26:15"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 12:26:15"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 12:26:15"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:26:15"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:26:15"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 12:26:15"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":201.806143,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 12:26:15"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:26:15"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 12:26:15"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (459ms)","timestamp":"2025-10-24 12:26:15"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 12:26:15"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":410.307681,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 12:26:15"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:26:15"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 12:26:15"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (457ms)","timestamp":"2025-10-24 12:26:15"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-24 12:26:15"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":256.965757,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-24 12:26:15"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:26:15"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 12:26:15"}
{"level":"info","message":"[getEventTypes.js] Fetched 19 eventTypes","timestamp":"2025-10-24 12:26:15"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (260ms)","timestamp":"2025-10-24 12:26:15"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 12:42:53"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 12:42:53"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 12:42:53"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:42:53"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:42:53"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:42:53"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:42:53"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 12:42:53"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:42:53"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:42:53"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:42:53"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:42:53"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 12:42:53"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:42:53"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:42:53"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:42:53"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":85.445837,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:42:53"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:42:53"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 12:42:53"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 12:42:53"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:42:53"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:42:53"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:42:53"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":84.800574,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:42:53"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:42:53"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 12:42:53"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 12:42:53"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:42:53"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:42:53"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 12:42:53"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":40.799043,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 12:42:53"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:42:53"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 12:42:53"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (127ms)","timestamp":"2025-10-24 12:42:53"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-24 12:42:53"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":142.928098,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-24 12:42:53"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:42:53"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 12:42:53"}
{"level":"info","message":"[getEventTypes.js] Fetched 19 eventTypes","timestamp":"2025-10-24 12:42:53"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (145ms)","timestamp":"2025-10-24 12:42:53"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 12:42:53"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":44.881231,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 12:42:53"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:42:53"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 12:42:53"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (132ms)","timestamp":"2025-10-24 12:42:53"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 12:42:53"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 12:42:53"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 12:42:53"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:42:53"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:42:53"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-24 12:42:53"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":151.644159,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-24 12:42:53"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:42:53"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 12:42:53"}
{"level":"info","message":"[getEventTypes.js] Fetched 19 eventTypes","timestamp":"2025-10-24 12:42:53"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (154ms)","timestamp":"2025-10-24 12:42:53"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 12:44:00"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:44:00"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:44:00"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:44:00"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:44:00"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:44:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:44:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.579838,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:44:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:44:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":31.772203,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:44:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-24 12:44:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":64.759704,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:44:00"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 12:44:00"}
{"level":"info","message":"[getEventTypes.js] Fetched 19 eventTypes","timestamp":"2025-10-24 12:44:00"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (66ms)","timestamp":"2025-10-24 12:44:00"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 12:44:00"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:44:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:44:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":181.603139,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[execEventType.js] Resolved from context :acctID → 3","timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:44:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-24 12:44:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":158.617535,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:44:00"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 12:44:00"}
{"level":"info","message":"[getEventTypes.js] Fetched 19 eventTypes","timestamp":"2025-10-24 12:44:00"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (160ms)","timestamp":"2025-10-24 12:44:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:44:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":182.488844,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[execEventType.js] Resolved from context :acctID → 3","timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:44:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 12:44:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.712344,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:44:00"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 12:44:00"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (252ms)","timestamp":"2025-10-24 12:44:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 12:44:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":38.302606,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:44:00"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 12:44:00"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (258ms)","timestamp":"2025-10-24 12:44:00"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-24 12:49:23"}
{"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 12:54:50"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 12:54:50"}
{"level":"debug","message":"[dmlProcessor.js] Processing undefined on undefined","timestamp":"2025-10-24 12:54:50"}
{"code":"MISSING_REQUIRED_FIELDS","level":"error","message":"[execDML.js] DML operation failed: method, table, and data are required","stack":"Error: method, table, and data are required\n    at processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:42:19)\n    at execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:30)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:157:13)\n    at Route.dispatch (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:117:3)\n    at handle (/home/paul/wf-monorepo-new/node_modules/router/index.js:435:11)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at /home/paul/wf-monorepo-new/node_modules/router/index.js:295:15\n    at processParams (/home/paul/wf-monorepo-new/node_modules/router/index.js:582:12)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/index.js:291:5)","status":400,"timestamp":"2025-10-24 12:54:50"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 400 (1ms)","timestamp":"2025-10-24 12:54:50"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.894634,"method":"POST","operation":"http_request","path":"/api/execDML","status":400},"timestamp":"2025-10-24 12:54:50"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 12:54:58"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:54:58"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:54:58"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:54:58"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:54:58"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:54:58"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:54:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":106.097023,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:54:58"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:54:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":103.559402,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:54:58"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-24 12:54:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":151.851832,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:54:58"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 12:54:58"}
{"level":"info","message":"[getEventTypes.js] Fetched 19 eventTypes","timestamp":"2025-10-24 12:54:58"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (155ms)","timestamp":"2025-10-24 12:54:58"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:54:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":46.278977,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[execEventType.js] Resolved from context :acctID → 3","timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:54:58"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 12:54:58"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:54:58"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 12:54:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":157.553585,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:54:58"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 12:54:58"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (311ms)","timestamp":"2025-10-24 12:54:58"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:54:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":211.789809,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[execEventType.js] Resolved from context :acctID → 3","timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:54:58"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 12:54:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":73.222997,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:54:58"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 12:54:58"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (393ms)","timestamp":"2025-10-24 12:54:58"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-24 12:54:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":282.87688,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-24 12:54:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:54:58"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 12:54:58"}
{"level":"info","message":"[getEventTypes.js] Fetched 19 eventTypes","timestamp":"2025-10-24 12:54:58"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (285ms)","timestamp":"2025-10-24 12:54:58"}
{"body":{"values":{"0":{"paramName":"selectedID","paramVal":null}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 12:55:03"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 12:55:03"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:55:03"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:55:03"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:55:03"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":78.650674,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:55:03"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:55:03"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:55:03"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:55:03"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:55:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":74.063351,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:55:04"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:55:04"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 12:55:04"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 12:55:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":313.918874,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 12:55:04"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:55:04"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 12:55:04"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (468ms)","timestamp":"2025-10-24 12:55:04"}
{"body":{"eventSQLId":"{pageName}Dtl","params":{"formData":null}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:55:04"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:55:04"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}Dtl","timestamp":"2025-10-24 12:55:04"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:55:04"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:55:04"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:55:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":162.10405,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:55:04"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:55:04"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}Dtl (ID: 23)","timestamp":"2025-10-24 12:55:04"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:55:04"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:55:04"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:55:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":112.019223,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:55:04"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:55:04"}
{"level":"debug","message":"[execEventType.js] Resolved from context :selectedID → 'null'","timestamp":"2025-10-24 12:55:04"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select \r\n\tid, \r\n\tname,\r\n\tdescription,\r\n\taccount_id\r\nfrom whatsfresh.ingredient_types\r\nwhere id = 'null'","timestamp":"2025-10-24 12:55:04"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:55:04"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:55:04"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 12:55:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":137.090158,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 12:55:04"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:55:04"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}Dtl (ID: 23)","timestamp":"2025-10-24 12:55:04"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (414ms)","timestamp":"2025-10-24 12:55:04"}
{"body":{"values":{"0":{"paramName":"selectedID","paramVal":null}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 12:55:05"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 12:55:05"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:55:05"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:55:05"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:55:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":38.21249,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:55:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:55:05"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:55:05"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:55:05"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:55:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.410193,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:55:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:55:05"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 12:55:05"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 12:55:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":240.924552,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 12:55:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:55:05"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 12:55:05"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (317ms)","timestamp":"2025-10-24 12:55:05"}
{"body":{"eventSQLId":"{pageName}Dtl","params":{"formData":null}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:55:05"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:55:05"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}Dtl","timestamp":"2025-10-24 12:55:05"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:55:05"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:55:05"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:55:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":41.647582,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:55:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:55:05"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}Dtl (ID: 23)","timestamp":"2025-10-24 12:55:05"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:55:05"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:55:05"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:55:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.331339,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:55:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:55:05"}
{"level":"debug","message":"[execEventType.js] Resolved from context :selectedID → 'null'","timestamp":"2025-10-24 12:55:05"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select \r\n\tid, \r\n\tname,\r\n\tdescription,\r\n\taccount_id\r\nfrom whatsfresh.ingredient_types\r\nwhere id = 'null'","timestamp":"2025-10-24 12:55:05"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:55:05"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:55:05"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 12:55:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":48.182994,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 12:55:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:55:05"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}Dtl (ID: 23)","timestamp":"2025-10-24 12:55:05"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (128ms)","timestamp":"2025-10-24 12:55:05"}
{"body":{"values":{"0":{"paramName":"xrefID","paramVal":66}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 12:55:25"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 12:55:25"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:55:25"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:55:25"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:55:25"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":215.098219,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:55:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:55:25"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:55:25"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:55:25"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:55:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":44.958623,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:55:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:55:26"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 12:55:26"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 12:55:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":354.559556,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 12:55:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:55:26"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 12:55:26"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (618ms)","timestamp":"2025-10-24 12:55:26"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":617.535978,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 12:55:26"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":66}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:55:26"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:55:26"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 12:55:26"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:55:26"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:55:26"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":66}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:55:26"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:55:26"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 12:55:26"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:55:26"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:55:26"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:55:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":30.356773,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:55:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:55:26"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 12:55:26"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 66...","timestamp":"2025-10-24 12:55:26"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 66 \r\nAND active = 1","timestamp":"2025-10-24 12:55:26"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:55:26"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:55:26"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:55:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":30.45889,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:55:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:55:26"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 12:55:26"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 66...","timestamp":"2025-10-24 12:55:26"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 66\r\nORDER BY class, ordr","timestamp":"2025-10-24 12:55:26"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:55:26"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:55:26"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:55:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":258.442837,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:55:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:55:26"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 12:55:26"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (291ms)","timestamp":"2025-10-24 12:55:26"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 12:55:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":257.663382,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 12:55:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:55:26"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 12:55:26"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (290ms)","timestamp":"2025-10-24 12:55:26"}
{"body":{"data":{"id":47,"paramName":"label","paramVal":"Add New","xref_id":66},"method":"UPDATE","primaryKey":"id","table":"api_wf.eventProps"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 12:55:54"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 12:55:54"}
{"data":{"id":47,"paramName":"label","paramVal":"Add New","xref_id":66},"level":"debug","message":"[dmlProcessor.js] Processing UPDATE on api_wf.eventProps","primaryKey":"id","timestamp":"2025-10-24 12:55:54"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:55:54"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:55:54"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:55:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":305.122214,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:55:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:55:54"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:55:54"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:55:54"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:55:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.311016,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:55:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:55:54"}
{"level":"info","message":"[dmlProcessor.js] Executing UPDATE SQL:","sql":"UPDATE api_wf.eventProps SET xref_id = 66, paramName = 'label', paramVal = 'Add New', updated_at = NOW(), updated_by = 'Paul' WHERE id = 47","timestamp":"2025-10-24 12:55:54"}
{"level":"debug","message":"[dbUtils.js] Executing PATCH query: ********","timestamp":"2025-10-24 12:55:54"}
{"level":"debug","message":"[dbUtils.js] Handling PATCH-specific logic","timestamp":"2025-10-24 12:55:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":416.416656,"method":"PATCH","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 12:55:55"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:55:55"}
{"level":"info","message":"[dmlProcessor.js] UPDATE executed successfully on api_wf.eventProps","timestamp":"2025-10-24 12:55:55"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-24 12:55:55"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (761ms)","timestamp":"2025-10-24 12:55:55"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":761.041704,"method":"POST","operation":"http_request","path":"/api/execDML","status":200},"timestamp":"2025-10-24 12:55:55"}
{"body":{"values":{"0":{"paramName":"appID","paramVal":"41"},"1":{"paramName":"appName","paramVal":"login"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 12:56:51"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 12:56:51"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:56:51"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:56:51"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:56:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":369.929845,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:56:51"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:51"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:56:51"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:56:51"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:56:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.646769,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:56:51"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:51"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 12:56:51"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 12:56:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":585.42864,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 12:56:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:52"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 12:56:52"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 12:56:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":411.977692,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 12:56:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:52"}
{"level":"debug","message":"[setVals.js] Set 2 values for pc7900@gmail.com","timestamp":"2025-10-24 12:56:52"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (1411ms)","timestamp":"2025-10-24 12:56:52"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1411.2135819999999,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 12:56:52"}
{"body":{"eventSQLId":"pageList","params":{"appID":"41"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:56:52"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:56:52"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: pageList","timestamp":"2025-10-24 12:56:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:56:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:56:52"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:56:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.707001,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:56:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:52"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: pageList (ID: 2)","timestamp":"2025-10-24 12:56:52"}
{"level":"debug","message":"[execEventType.js] Using passed param :appID → 41...","timestamp":"2025-10-24 12:56:52"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 41\r\nAND   comp_type in ('Page','CRUD')","timestamp":"2025-10-24 12:56:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:56:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:56:52"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:56:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":257.939805,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:56:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:52"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: pageList (ID: 2)","timestamp":"2025-10-24 12:56:52"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (299ms)","timestamp":"2025-10-24 12:56:52"}
{"body":{"values":{"0":{"paramName":"pageID","paramVal":"49"},"1":{"paramName":"pageName","paramVal":"login"},"2":{"paramName":"xrefID","paramVal":"49"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 12:56:53"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 12:56:53"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:56:53"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:56:53"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:56:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.159215,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:56:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:54"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:56:54"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:56:54"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:56:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":74.126602,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:56:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:54"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 12:56:54"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 12:56:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":509.587896,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 12:56:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:54"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 12:56:54"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 12:56:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":367.507349,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 12:56:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:54"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 12:56:54"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 12:56:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":390.474711,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[setVals.js] Set 3 values for pc7900@gmail.com","timestamp":"2025-10-24 12:56:55"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (1380ms)","timestamp":"2025-10-24 12:56:55"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1379.615416,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 12:56:55"}
{"body":{"eventSQLId":"xrefHierarchy","params":{"xrefID":"49"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:56:55"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefHierarchy","timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:56:55"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:56:55"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":38.935698,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefHierarchy (ID: 3)","timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 49...","timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_structure(49)","timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:56:55"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-24 12:56:55"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":79.933249,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:55"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefHierarchy (ID: 3)","timestamp":"2025-10-24 12:56:55"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (121ms)","timestamp":"2025-10-24 12:56:55"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":41}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:56:55"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:56:55"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:56:55"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":75.781325,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 41...","timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 41 \r\nAND active = 1","timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:56:55"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 12:56:55"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":270.180888,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:55"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 12:56:55"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (348ms)","timestamp":"2025-10-24 12:56:55"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":41}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:56:55"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:56:55"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:56:55"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":57.883475,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 41...","timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 41\r\nORDER BY class, ordr","timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:56:55"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:56:55"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 12:56:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":90.371319,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 12:56:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:56"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 12:56:56"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (150ms)","timestamp":"2025-10-24 12:56:56"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":49}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:56:56"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:56:56"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 12:56:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:56:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:56:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:56:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.083066,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:56:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:56"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 12:56:56"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 49...","timestamp":"2025-10-24 12:56:56"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 49 \r\nAND active = 1","timestamp":"2025-10-24 12:56:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:56:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:56:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 12:56:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":523.06208,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 12:56:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:56"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 12:56:56"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (560ms)","timestamp":"2025-10-24 12:56:56"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":560.463123,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-24 12:56:56"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":49}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:56:56"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:56:56"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 12:56:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:56:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:56:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:56:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":39.628943,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:56:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:56"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 12:56:56"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 49...","timestamp":"2025-10-24 12:56:56"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 49\r\nORDER BY class, ordr","timestamp":"2025-10-24 12:56:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:56:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:56:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 12:56:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":222.049113,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 12:56:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:56"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 12:56:56"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (264ms)","timestamp":"2025-10-24 12:56:56"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":43}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:56:56"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:56:56"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 12:56:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:56:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:56:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:56:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":48.948183,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:56:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:56"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 12:56:56"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 43...","timestamp":"2025-10-24 12:56:56"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 43 \r\nAND active = 1","timestamp":"2025-10-24 12:56:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:56:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:56:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 12:56:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":75.585793,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:57"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 12:56:57"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (127ms)","timestamp":"2025-10-24 12:56:57"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":43}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:56:57"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:56:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:56:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.170853,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 43...","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 43\r\nORDER BY class, ordr","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:56:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 4","timestamp":"2025-10-24 12:56:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":349.774703,"method":"GET","operation":"database_query","rowCount":4,"success":true},"timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:57"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 12:56:57"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (385ms)","timestamp":"2025-10-24 12:56:57"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":42}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:56:57"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:56:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:56:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":55.189808,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 42...","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 42 \r\nAND active = 1","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:56:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:56:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":150.816024,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:57"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 12:56:57"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (208ms)","timestamp":"2025-10-24 12:56:57"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":42}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:56:57"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:56:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:56:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.491332,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 42...","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 42\r\nORDER BY class, ordr","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:56:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 12:56:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":158.496689,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:57"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 12:56:57"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (196ms)","timestamp":"2025-10-24 12:56:57"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":44}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:56:57"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:56:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:56:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.03926,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 44...","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 44 \r\nAND active = 1","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:56:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 4","timestamp":"2025-10-24 12:56:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":91.258688,"method":"GET","operation":"database_query","rowCount":4,"success":true},"timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:57"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 12:56:57"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (128ms)","timestamp":"2025-10-24 12:56:57"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":44}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:56:57"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:56:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:56:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":32.450312,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 44...","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 44\r\nORDER BY class, ordr","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:56:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:56:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 4","timestamp":"2025-10-24 12:56:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":68.13012,"method":"GET","operation":"database_query","rowCount":4,"success":true},"timestamp":"2025-10-24 12:56:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:56:58"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 12:56:58"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (102ms)","timestamp":"2025-10-24 12:56:58"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 12:57:05"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 12:57:05"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 12:57:05"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:57:05"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:57:05"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-24 12:57:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":256.182566,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-24 12:57:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:57:05"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 12:57:05"}
{"level":"info","message":"[getEventTypes.js] Fetched 19 eventTypes","timestamp":"2025-10-24 12:57:05"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (259ms)","timestamp":"2025-10-24 12:57:05"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 12:57:05"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 12:57:05"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 12:57:05"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:57:05"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:57:05"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-24 12:57:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":120.320212,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-24 12:57:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:57:05"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 12:57:05"}
{"level":"info","message":"[getEventTypes.js] Fetched 19 eventTypes","timestamp":"2025-10-24 12:57:05"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (123ms)","timestamp":"2025-10-24 12:57:05"}
{"body":{"password":"********","userEmail":"pc7900@gmail.com"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/auth/login","timestamp":"2025-10-24 12:57:22"}
{"level":"info","message":"[userLogin.js] Login attempt started","timestamp":"2025-10-24 12:57:22"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:57:22"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:57:22"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:57:22"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":339.471046,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:57:22"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:57:22"}
{"availableFields":{"0":"userID","1":"lastName","2":"firstName","3":"userEmail","4":"password","5":"roleID","6":"dfltAcctID","7":"lastLogin"},"hasPassword":"********","level":"debug","message":"[userLogin.js] User found","passwordPrefix":"********","timestamp":"2025-10-24 12:57:22","userEmail":"pc7900@gmail.com"}
{"level":"debug","matched":true,"message":"[userLogin.js] Password verification result","needsRehash":false,"timestamp":"2025-10-24 12:57:22","userEmail":"pc7900@gmail.com"}
{"level":"info","message":"[userLogin.js] Login successful","timestamp":"2025-10-24 12:57:22","userEmail":"pc7900@gmail.com"}
{"level":"info","message":"[app.js]  Response: POST /api/auth/login 200 (391ms)","timestamp":"2025-10-24 12:57:22"}
{"body":{"eventSQLId":"authAppList","params":{"formData":{"enteredPassword":"********","userEmail":"pc7900@gmail.com"},"response":{"success":true,"user":{"dfltAcctID":1,"email":"pc7900@gmail.com","firstName":"Paul","id":2,"name":"Paul Chambless","role":1}}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:57:22"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:57:22"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: authAppList","timestamp":"2025-10-24 12:57:22"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:57:22"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:57:22"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:57:22"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":199.547158,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:57:22"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:57:22"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: authAppList (ID: 5)","timestamp":"2025-10-24 12:57:22"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select comp_name, \r\n  concat('preview/',comp_name,'/') routePath\r\nfrom   api_wf.vw_hier_components vhc \r\nwhere template = 'App'","timestamp":"2025-10-24 12:57:22"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:57:22"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:57:22"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":56.810364,"errorCode":"ER_BAD_FIELD_ERROR","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-10-24 12:57:22"}
{"code":"ER_BAD_FIELD_ERROR","errno":1054,"level":"error","message":"Unknown column 'template' in 'where clause'","sql":"select comp_name, \r\n  concat('preview/',comp_name,'/') routePath\r\nfrom   api_wf.vw_hier_components vhc \r\nwhere template = 'App'","sqlMessage":"Unknown column 'template' in 'where clause'","sqlState":"42S22","stack":"Error: Unknown column 'template' in 'where clause'\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execEventType.js:118:20)","timestamp":"2025-10-24 12:57:22"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-10-24 12:57:22"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execEventType.js:118:20)","timestamp":"2025-10-24 12:57:22"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:57:22"}
{"code":"ER_BAD_FIELD_ERROR","errno":1054,"level":"error","message":"Unknown column 'template' in 'where clause'","sql":"select comp_name, \r\n  concat('preview/',comp_name,'/') routePath\r\nfrom   api_wf.vw_hier_components vhc \r\nwhere template = 'App'","sqlMessage":"Unknown column 'template' in 'where clause'","sqlState":"42S22","stack":"Error: Unknown column 'template' in 'where clause'\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execEventType.js:118:20)","timestamp":"2025-10-24 12:57:22"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 500 (259ms)","timestamp":"2025-10-24 12:57:22"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":259.264065,"method":"POST","operation":"http_request","path":"/api/execEventType","status":500},"timestamp":"2025-10-24 12:57:22"}
{"body":{"values":{"0":{"paramName":"xrefID","paramVal":42}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 12:57:37"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 12:57:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:57:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:57:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:57:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":89.388107,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:57:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:57:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:57:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:57:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:57:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":104.764928,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:57:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:57:37"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 12:57:37"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 12:57:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":304.465292,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 12:57:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:57:37"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 12:57:37"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (502ms)","timestamp":"2025-10-24 12:57:37"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":501.616588,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 12:57:37"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":42}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:57:37"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:57:37"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 12:57:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:57:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:57:37"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":42}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:57:37"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:57:37"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 12:57:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:57:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:57:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:57:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":44.939155,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:57:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:57:37"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 12:57:37"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 42...","timestamp":"2025-10-24 12:57:37"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 42\r\nORDER BY class, ordr","timestamp":"2025-10-24 12:57:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:57:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:57:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:57:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":50.401506,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:57:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:57:37"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 12:57:37"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 42...","timestamp":"2025-10-24 12:57:37"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 42 \r\nAND active = 1","timestamp":"2025-10-24 12:57:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:57:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:57:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 12:57:38"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":143.304195,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 12:57:38"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:57:38"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 12:57:38"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (190ms)","timestamp":"2025-10-24 12:57:38"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:57:38"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":193.62724,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:57:38"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:57:38"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 12:57:38"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (247ms)","timestamp":"2025-10-24 12:57:38"}
{"body":{"values":{"0":{"paramName":"xrefID","paramVal":42}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 12:57:38"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 12:57:38"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:57:38"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:57:38"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:57:38"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":258.387269,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:57:38"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:57:38"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:57:38"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:57:38"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:57:38"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":269.891814,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:57:38"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:57:38"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 12:57:38"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 12:57:38"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":815.427514,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 12:57:39"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:57:39"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 12:57:39"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (1347ms)","timestamp":"2025-10-24 12:57:39"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1347.362065,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 12:57:39"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":42}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:57:39"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:57:39"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 12:57:39"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:57:39"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:57:39"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":42}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:57:39"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:57:39"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 12:57:39"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:57:39"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:57:39"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:57:39"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.382969,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:57:39"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:57:39"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 12:57:39"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 42...","timestamp":"2025-10-24 12:57:39"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 42\r\nORDER BY class, ordr","timestamp":"2025-10-24 12:57:39"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:57:39"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:57:39"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:57:39"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":44.643194,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:57:39"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:57:39"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 12:57:39"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 42...","timestamp":"2025-10-24 12:57:39"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 42 \r\nAND active = 1","timestamp":"2025-10-24 12:57:39"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:57:39"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:57:39"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 12:57:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":286.868999,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 12:57:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:57:40"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 12:57:40"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (331ms)","timestamp":"2025-10-24 12:57:40"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:57:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":287.605937,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:57:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:57:40"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 12:57:40"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (334ms)","timestamp":"2025-10-24 12:57:40"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 12:58:19"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 12:58:19"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 12:58:19"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:58:19"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:58:19"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-24 12:58:19"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":221.284141,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-24 12:58:19"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:58:19"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 12:58:19"}
{"level":"info","message":"[getEventTypes.js] Fetched 19 eventTypes","timestamp":"2025-10-24 12:58:19"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (223ms)","timestamp":"2025-10-24 12:58:19"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 12:58:19"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 12:58:19"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 12:58:19"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:58:19"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:58:19"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-24 12:58:19"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":247.406702,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-24 12:58:19"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:58:19"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 12:58:19"}
{"level":"info","message":"[getEventTypes.js] Fetched 19 eventTypes","timestamp":"2025-10-24 12:58:19"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (249ms)","timestamp":"2025-10-24 12:58:19"}
{"body":{"values":{"0":{"paramName":"xrefID","paramVal":43}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 12:58:27"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 12:58:27"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:58:27"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:58:27"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:58:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":297.27799,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:58:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:58:28"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:58:28"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:58:28"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:58:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":72.714506,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:58:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:58:28"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 12:58:28"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 12:58:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":281.980679,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 12:58:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:58:28"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 12:58:28"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (656ms)","timestamp":"2025-10-24 12:58:28"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":655.793078,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 12:58:28"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":43}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:58:28"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:58:28"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 12:58:28"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:58:28"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:58:28"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":43}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 12:58:28"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 12:58:28"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 12:58:28"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:58:28"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:58:28"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:58:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.042877,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:58:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:58:28"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 12:58:28"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 43...","timestamp":"2025-10-24 12:58:28"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 43 \r\nAND active = 1","timestamp":"2025-10-24 12:58:28"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:58:28"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:58:28"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 12:58:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.465583,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 12:58:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:58:28"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 12:58:28"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 43...","timestamp":"2025-10-24 12:58:28"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 43\r\nORDER BY class, ordr","timestamp":"2025-10-24 12:58:28"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 12:58:28"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 12:58:28"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 12:58:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":70.26553,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 12:58:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:58:28"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 12:58:28"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (108ms)","timestamp":"2025-10-24 12:58:28"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 4","timestamp":"2025-10-24 12:58:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":75.289714,"method":"GET","operation":"database_query","rowCount":4,"success":true},"timestamp":"2025-10-24 12:58:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 12:58:28"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 12:58:28"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (114ms)","timestamp":"2025-10-24 12:58:28"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-24 13:49:47"}
{"body":{"values":{"0":{"paramName":"appID","paramVal":"51"},"1":{"paramName":"appName","paramVal":"admin"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 14:30:00"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 14:30:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:30:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":69.530398,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:30:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:30:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":336.494767,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:30:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:00"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 14:30:00"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 14:30:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":891.828139,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 14:30:01"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:01"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 14:30:01"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 14:30:01"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":1010.71641,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 14:30:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:02"}
{"level":"debug","message":"[setVals.js] Set 2 values for pc7900@gmail.com","timestamp":"2025-10-24 14:30:02"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (2312ms)","timestamp":"2025-10-24 14:30:02"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2312.383515,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 14:30:02"}
{"body":{"eventSQLId":"pageList","params":{"appID":"51"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:30:02"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:30:02"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: pageList","timestamp":"2025-10-24 14:30:02"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:02"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:02"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:30:03"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":436.830127,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:30:03"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:03"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: pageList (ID: 2)","timestamp":"2025-10-24 14:30:03"}
{"level":"debug","message":"[execEventType.js] Using passed param :appID → 51...","timestamp":"2025-10-24 14:30:03"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 51\r\nAND   comp_type in ('Page','CRUD')","timestamp":"2025-10-24 14:30:03"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:03"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:03"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:30:03"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":312.198604,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:30:03"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:03"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: pageList (ID: 2)","timestamp":"2025-10-24 14:30:03"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (751ms)","timestamp":"2025-10-24 14:30:03"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":750.82293,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-24 14:30:03"}
{"body":{"values":{"0":{"paramName":"pageID","paramVal":"64"},"1":{"paramName":"pageName","paramVal":"{pageName}"},"2":{"paramName":"xrefID","paramVal":"64"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 14:30:04"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 14:30:04"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:04"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:04"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:30:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":251.033172,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:30:04"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:04"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:04"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:04"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:30:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.716169,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:30:04"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:04"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 14:30:04"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 14:30:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":286.143519,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 14:30:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:05"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 14:30:05"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 14:30:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":230.816154,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 14:30:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:05"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 14:30:05"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 14:30:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":271.835672,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 14:30:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:05"}
{"level":"debug","message":"[setVals.js] Set 3 values for pc7900@gmail.com","timestamp":"2025-10-24 14:30:05"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (1081ms)","timestamp":"2025-10-24 14:30:05"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1081.362113,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 14:30:05"}
{"body":{"eventSQLId":"xrefHierarchy","params":{"xrefID":"64"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:30:05"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:30:05"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefHierarchy","timestamp":"2025-10-24 14:30:05"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:05"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:05"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:30:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":165.304344,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:30:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:05"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefHierarchy (ID: 3)","timestamp":"2025-10-24 14:30:05"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-24 14:30:05"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_structure(64)","timestamp":"2025-10-24 14:30:05"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:05"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:05"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-24 14:30:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":116.166697,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 14:30:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:05"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefHierarchy (ID: 3)","timestamp":"2025-10-24 14:30:05"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (284ms)","timestamp":"2025-10-24 14:30:05"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":51}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:30:05"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:30:05"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 14:30:05"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:05"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:05"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:30:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":39.955982,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:30:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:05"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 14:30:05"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 51...","timestamp":"2025-10-24 14:30:05"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 51 \r\nAND active = 1","timestamp":"2025-10-24 14:30:05"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:05"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:05"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 14:30:06"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":343.070968,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 14:30:06"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:06"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 14:30:06"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (385ms)","timestamp":"2025-10-24 14:30:06"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":51}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:30:06"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:30:06"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 14:30:06"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:06"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:06"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:30:06"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":408.983157,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:30:06"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:06"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 14:30:06"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 51...","timestamp":"2025-10-24 14:30:06"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 51\r\nORDER BY class, ordr","timestamp":"2025-10-24 14:30:06"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:06"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:06"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:30:07"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":554.687636,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:30:07"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:07"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 14:30:07"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (966ms)","timestamp":"2025-10-24 14:30:07"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":966.2461,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-24 14:30:07"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:30:07"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:30:07"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 14:30:07"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:07"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:07"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:30:07"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":74.759571,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:30:07"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:07"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 14:30:07"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-24 14:30:07"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 64 \r\nAND active = 1","timestamp":"2025-10-24 14:30:07"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:07"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:07"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 14:30:07"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":389.441365,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 14:30:07"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:07"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 14:30:07"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (466ms)","timestamp":"2025-10-24 14:30:07"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:30:07"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:30:07"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 14:30:07"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:07"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:07"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:30:07"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":53.722122,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:30:07"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:07"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 14:30:07"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-24 14:30:07"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 64\r\nORDER BY class, ordr","timestamp":"2025-10-24 14:30:07"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:07"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:07"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:30:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":299.11419,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:30:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:08"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 14:30:08"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (355ms)","timestamp":"2025-10-24 14:30:08"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":65}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:30:08"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:30:08"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 14:30:08"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:08"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:08"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:30:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":48.385463,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:30:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:08"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 14:30:08"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 65...","timestamp":"2025-10-24 14:30:08"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 65 \r\nAND active = 1","timestamp":"2025-10-24 14:30:08"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:08"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:08"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 14:30:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":405.960483,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 14:30:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:08"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 14:30:08"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (456ms)","timestamp":"2025-10-24 14:30:08"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":65}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:30:08"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:30:08"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 14:30:08"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:08"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:08"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:30:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.351324,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:30:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:08"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 14:30:08"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 65...","timestamp":"2025-10-24 14:30:08"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 65\r\nORDER BY class, ordr","timestamp":"2025-10-24 14:30:08"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:08"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:08"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 14:30:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":255.128611,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 14:30:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:08"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 14:30:08"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (294ms)","timestamp":"2025-10-24 14:30:08"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":66}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:30:08"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:30:08"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 14:30:08"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:08"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:08"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:30:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.433974,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:30:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:08"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 14:30:08"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 66...","timestamp":"2025-10-24 14:30:08"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 66 \r\nAND active = 1","timestamp":"2025-10-24 14:30:08"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:08"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:08"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:30:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":189.970725,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:30:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:09"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 14:30:09"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (226ms)","timestamp":"2025-10-24 14:30:09"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":66}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:30:09"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:30:09"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 14:30:09"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:09"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:30:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":54.713989,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:30:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:09"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 14:30:09"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 66...","timestamp":"2025-10-24 14:30:09"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 66\r\nORDER BY class, ordr","timestamp":"2025-10-24 14:30:09"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:09"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 14:30:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":116.641032,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 14:30:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:09"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 14:30:09"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (173ms)","timestamp":"2025-10-24 14:30:09"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:30:09"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:30:09"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 14:30:09"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:09"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:30:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":44.342289,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:30:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:09"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 14:30:09"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-24 14:30:09"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 67 \r\nAND active = 1","timestamp":"2025-10-24 14:30:09"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:09"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 4","timestamp":"2025-10-24 14:30:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":332.165476,"method":"GET","operation":"database_query","rowCount":4,"success":true},"timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:10"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 14:30:10"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (378ms)","timestamp":"2025-10-24 14:30:10"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:30:10"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:30:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":44.63295,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 67\r\nORDER BY class, ordr","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 14:30:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":320.681393,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:10"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 14:30:10"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (368ms)","timestamp":"2025-10-24 14:30:10"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":68}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:30:10"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:30:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":46.048852,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 68...","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 68 \r\nAND active = 1","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-24 14:30:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":139.734858,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:10"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 14:30:10"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (188ms)","timestamp":"2025-10-24 14:30:10"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":68}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:30:10"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:30:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.848173,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 68...","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 68\r\nORDER BY class, ordr","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:30:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":80.128973,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:10"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 14:30:10"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (125ms)","timestamp":"2025-10-24 14:30:10"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":69}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:30:10"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:30:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":48.845495,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 69...","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 69 \r\nAND active = 1","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 14:30:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":273.402107,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 14:30:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:11"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 14:30:11"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (325ms)","timestamp":"2025-10-24 14:30:11"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":69}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:30:11"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:30:11"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 14:30:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:30:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":45.085764,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:30:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:11"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 14:30:11"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 69...","timestamp":"2025-10-24 14:30:11"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 69\r\nORDER BY class, ordr","timestamp":"2025-10-24 14:30:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 14:30:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":344.004333,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 14:30:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:11"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 14:30:11"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (391ms)","timestamp":"2025-10-24 14:30:11"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 14:30:17"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 14:30:17"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 14:30:17"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:17"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:17"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:30:17"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:30:17"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 14:30:17"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:17"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:17"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:30:17"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:30:17"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 14:30:17"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:17"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:17"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:30:18"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":253.533818,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:30:18"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:18"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 14:30:18"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:18"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:18"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:30:18"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":262.132846,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:30:18"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:18"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 14:30:18"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:18"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:18"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:30:18"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":67.304166,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:30:18"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:18"}
{"level":"debug","message":"[execEventType.js] Resolved from context :acctID → 3","timestamp":"2025-10-24 14:30:18"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 14:30:18"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:18"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:18"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-24 14:30:18"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":331.939549,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-24 14:30:18"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:18"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 14:30:18"}
{"level":"info","message":"[getEventTypes.js] Fetched 19 eventTypes","timestamp":"2025-10-24 14:30:18"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (335ms)","timestamp":"2025-10-24 14:30:18"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:30:18"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":69.920957,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:30:18"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:18"}
{"level":"debug","message":"[execEventType.js] Resolved from context :acctID → 3","timestamp":"2025-10-24 14:30:18"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 14:30:18"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:18"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:18"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 14:30:18"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 14:30:18"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 14:30:18"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:30:18"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:30:18"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 14:30:18"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.938677,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 14:30:18"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:18"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 14:30:18"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (362ms)","timestamp":"2025-10-24 14:30:18"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 14:30:18"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.75031,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 14:30:18"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:18"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 14:30:18"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (377ms)","timestamp":"2025-10-24 14:30:18"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-24 14:30:18"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":85.850603,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-24 14:30:18"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:30:18"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 14:30:18"}
{"level":"info","message":"[getEventTypes.js] Fetched 19 eventTypes","timestamp":"2025-10-24 14:30:18"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (89ms)","timestamp":"2025-10-24 14:30:18"}
{"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 14:30:53"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 14:30:53"}
{"level":"debug","message":"[dmlProcessor.js] Processing undefined on undefined","timestamp":"2025-10-24 14:30:53"}
{"code":"MISSING_REQUIRED_FIELDS","level":"error","message":"[execDML.js] DML operation failed: method, table, and data are required","stack":"Error: method, table, and data are required\n    at processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:42:19)\n    at execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:30)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:157:13)\n    at Route.dispatch (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:117:3)\n    at handle (/home/paul/wf-monorepo-new/node_modules/router/index.js:435:11)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at /home/paul/wf-monorepo-new/node_modules/router/index.js:295:15\n    at processParams (/home/paul/wf-monorepo-new/node_modules/router/index.js:582:12)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/index.js:291:5)","status":400,"timestamp":"2025-10-24 14:30:53"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 400 (4ms)","timestamp":"2025-10-24 14:30:53"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":4.031269,"method":"POST","operation":"http_request","path":"/api/execDML","status":400},"timestamp":"2025-10-24 14:30:53"}
{"body":{"values":{"0":{"paramName":"xrefID","paramVal":64}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 14:33:56"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 14:33:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:33:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:33:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:33:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":78.195635,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:33:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:33:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:33:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:33:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:33:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":120.028048,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:33:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:33:56"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 14:33:56"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 14:33:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":266.416992,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 14:33:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:33:57"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 14:33:57"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (469ms)","timestamp":"2025-10-24 14:33:57"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:33:57"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:33:57"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 14:33:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:33:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:33:57"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:33:57"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:33:57"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 14:33:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:33:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:33:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:33:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.656546,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:33:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:33:57"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 14:33:57"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-24 14:33:57"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 64\r\nORDER BY class, ordr","timestamp":"2025-10-24 14:33:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:33:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:33:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:33:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.371064,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:33:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:33:57"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 14:33:57"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-24 14:33:57"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 64 \r\nAND active = 1","timestamp":"2025-10-24 14:33:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:33:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:33:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:33:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.384276,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:33:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:33:57"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 14:33:57"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (72ms)","timestamp":"2025-10-24 14:33:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 14:33:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":98.635628,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 14:33:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:33:57"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 14:33:57"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (143ms)","timestamp":"2025-10-24 14:33:57"}
{"body":{"eventSQLId":"sessionPlan45"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:38:13"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:38:13"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: sessionPlan45","timestamp":"2025-10-24 14:38:13"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:38:13"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:38:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:38:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":321.493289,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:38:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:38:13"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: sessionPlan45 (ID: 31)","timestamp":"2025-10-24 14:38:13"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select * \r\nfrom api_wf.vw_plan45","timestamp":"2025-10-24 14:38:13"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:38:13"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:38:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 14:38:14"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":161.334929,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 14:38:14"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:38:14"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: sessionPlan45 (ID: 31)","timestamp":"2025-10-24 14:38:14"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (485ms)","timestamp":"2025-10-24 14:38:14"}
{"body":{"values":{"0":{"paramName":"xrefID","paramVal":67}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 14:40:59"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 14:40:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:40:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:40:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:40:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":196.317199,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:40:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:40:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:40:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:40:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:40:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":32.265821,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:40:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:40:59"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 14:40:59"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 14:40:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":267.763053,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 14:41:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:41:00"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 14:41:00"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (498ms)","timestamp":"2025-10-24 14:41:00"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:41:00"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:41:00"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 14:41:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:41:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:41:00"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:41:00"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:41:00"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 14:41:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:41:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:41:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:41:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":41.716097,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:41:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:41:00"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 14:41:00"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-24 14:41:00"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 67\r\nORDER BY class, ordr","timestamp":"2025-10-24 14:41:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:41:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:41:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:41:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":46.647161,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:41:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:41:00"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 14:41:00"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-24 14:41:00"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 67 \r\nAND active = 1","timestamp":"2025-10-24 14:41:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:41:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:41:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 4","timestamp":"2025-10-24 14:41:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":268.092384,"method":"GET","operation":"database_query","rowCount":4,"success":true},"timestamp":"2025-10-24 14:41:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:41:00"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 14:41:00"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (316ms)","timestamp":"2025-10-24 14:41:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 14:41:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":269.603142,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 14:41:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:41:00"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 14:41:00"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (313ms)","timestamp":"2025-10-24 14:41:00"}
{"body":{"eventSQLId":"getEventSQL","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:41:03"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:41:03"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: getEventSQL","timestamp":"2025-10-24 14:41:03"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:41:03"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:41:03"}
{"body":{"eventSQLId":"getEventSQL","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:41:03"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:41:03"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: getEventSQL","timestamp":"2025-10-24 14:41:03"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:41:03"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:41:03"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:41:03"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":68.788025,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:41:03"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:41:03"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: getEventSQL (ID: 13)","timestamp":"2025-10-24 14:41:03"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-24 14:41:03"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name, comp_type, qryName, qrySQL\r\n     FROM api_wf.vw_eventSQL\r\n     WHERE xref_id = 67","timestamp":"2025-10-24 14:41:03"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:41:03"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:41:03"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:41:03"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":68.586112,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:41:03"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:41:03"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: getEventSQL (ID: 13)","timestamp":"2025-10-24 14:41:03"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-24 14:41:03"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name, comp_type, qryName, qrySQL\r\n     FROM api_wf.vw_eventSQL\r\n     WHERE xref_id = 67","timestamp":"2025-10-24 14:41:03"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:41:03"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:41:03"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:41:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":183.866895,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:41:04"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:41:04"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: getEventSQL (ID: 13)","timestamp":"2025-10-24 14:41:04"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (255ms)","timestamp":"2025-10-24 14:41:04"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:41:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":183.652957,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:41:04"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:41:04"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: getEventSQL (ID: 13)","timestamp":"2025-10-24 14:41:04"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (254ms)","timestamp":"2025-10-24 14:41:04"}
{"body":{"eventSQLId":"sessionPlan45"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:44:24"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:44:24"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: sessionPlan45","timestamp":"2025-10-24 14:44:24"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:44:24"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:44:24"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:44:24"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":99.736777,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:44:24"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:44:24"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: sessionPlan45 (ID: 31)","timestamp":"2025-10-24 14:44:24"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select * \r\nfrom api_wf.vw_plan45","timestamp":"2025-10-24 14:44:24"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:44:24"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:44:24"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 14:44:24"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":64.260636,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 14:44:24"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:44:24"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: sessionPlan45 (ID: 31)","timestamp":"2025-10-24 14:44:24"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (166ms)","timestamp":"2025-10-24 14:44:24"}
{"body":{"eventSQLId":"xrefFieldGen","params":{"xref_id":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:44:33"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:44:33"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefFieldGen","timestamp":"2025-10-24 14:44:33"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:44:33"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:44:33"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:44:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":219.612252,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:44:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:44:34"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefFieldGen (ID: 10)","timestamp":"2025-10-24 14:44:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:44:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:44:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:44:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":186.514209,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:44:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:44:34"}
{"level":"debug","message":"[execEventType.js] Resolved from context :xrefID → 67","timestamp":"2025-10-24 14:44:34"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_genFields(67)","timestamp":"2025-10-24 14:44:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:44:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:44:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 14:44:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":110.064881,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 14:44:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:44:34"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefFieldGen (ID: 10)","timestamp":"2025-10-24 14:44:34"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (519ms)","timestamp":"2025-10-24 14:44:34"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":518.678987,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-24 14:44:34"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-24 14:50:47"}
{"body":{"values":{"0":{"paramName":"xrefID","paramVal":65}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 14:59:52"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 14:59:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:59:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:59:52"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:59:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":188.692377,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:59:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:59:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:59:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:59:52"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:59:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":91.781934,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:59:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:59:52"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 14:59:52"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 14:59:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":279.775516,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 14:59:53"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:59:53"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 14:59:53"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (564ms)","timestamp":"2025-10-24 14:59:53"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":564.174308,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 14:59:53"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":65}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:59:53"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:59:53"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 14:59:53"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:59:53"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:59:53"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":65}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:59:53"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:59:53"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 14:59:53"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:59:53"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:59:53"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:59:53"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.568939,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:59:53"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:59:53"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 14:59:53"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 65...","timestamp":"2025-10-24 14:59:53"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 65 \r\nAND active = 1","timestamp":"2025-10-24 14:59:53"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:59:53"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:59:53"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:59:53"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.686959,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:59:53"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:59:53"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 14:59:53"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 65...","timestamp":"2025-10-24 14:59:53"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 65\r\nORDER BY class, ordr","timestamp":"2025-10-24 14:59:53"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:59:53"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:59:53"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 14:59:53"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":271.007151,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 14:59:53"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:59:53"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 14:59:53"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (311ms)","timestamp":"2025-10-24 14:59:53"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 14:59:53"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":270.655709,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 14:59:53"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:59:53"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 14:59:53"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (307ms)","timestamp":"2025-10-24 14:59:53"}
{"body":{"values":{"0":{"paramName":"xrefID","paramVal":64}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 14:59:59"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 14:59:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:59:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:59:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:59:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":76.561622,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:59:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:59:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:59:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:59:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 14:59:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":177.812173,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 14:59:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:59:59"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 14:59:59"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 14:59:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":350.773139,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 14:59:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 14:59:59"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 14:59:59"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (608ms)","timestamp":"2025-10-24 14:59:59"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":608.050194,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 14:59:59"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:59:59"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:59:59"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 14:59:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:59:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:59:59"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 14:59:59"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 14:59:59"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 14:59:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 14:59:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 14:59:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:00:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.675518,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:00:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:00:00"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:00:00"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-24 15:00:00"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 64 \r\nAND active = 1","timestamp":"2025-10-24 15:00:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:00:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:00:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 15:00:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":361.906064,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 15:00:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:00:00"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:00:00"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (408ms)","timestamp":"2025-10-24 15:00:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:00:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":417.26171,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:00:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:00:00"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:00:00"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-24 15:00:00"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 64\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:00:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:00:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:00:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:00:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":365.611989,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:00:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:00:00"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:00:00"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (786ms)","timestamp":"2025-10-24 15:00:00"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":785.53661,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-24 15:00:00"}
{"body":{"data":{"id":59,"paramName":"columns","paramVal":"[{\"name\":\"id\",\"dataType\":\"int\",\"nullable\":\"NO\",\"defaultValue\":null,\"inputType\":\"number\"},{\"name\":\"name\",\"dataType\":\"varchar\",\"nullable\":\"NO\",\"defaultValue\":null,\"inputType\":\"text\"},{\"name\":\"description\",\"dataType\":\"text\",\"nullable\":\"NO\",\"defaultValue\":null,\"inputType\":\"textarea\"},{\"name\":\"account_id\",\"dataType\":\"int\",\"nullable\":\"NO\",\"defaultValue\":null,\"inputType\":\"number\"}]","xref_id":67},"method":"UPDATE","primaryKey":"id","table":"api_wf.eventProps"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 15:00:11"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 15:00:11"}
{"data":{"id":59,"paramName":"columns","paramVal":"[{\"name\":\"id\",\"dataType\":\"int\",\"nullable\":\"NO\",\"defaultValue\":null,\"inputType\":\"number\"},{\"name\":\"name\",\"dataType\":\"varchar\",\"nullable\":\"NO\",\"defaultValue\":null,\"inputType\":\"text\"},{\"name\":\"description\",\"dataType\":\"text\",\"nullable\":\"NO\",\"defaultValue\":null,\"inputType\":\"textarea\"},{\"name\":\"account_id\",\"dataType\":\"int\",\"nullable\":\"NO\",\"defaultValue\":null,\"inputType\":\"number\"}]","xref_id":67},"level":"debug","message":"[dmlProcessor.js] Processing UPDATE on api_wf.eventProps","primaryKey":"id","timestamp":"2025-10-24 15:00:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:00:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:00:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:00:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":38.486504,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:00:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:00:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:00:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:00:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:00:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":268.574686,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:00:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:00:11"}
{"level":"info","message":"[dmlProcessor.js] Executing UPDATE SQL:","sql":"UPDATE api_wf.eventProps SET xref_id = 67, paramName = 'columns', paramVal = '[{\"name\":\"id\",\"dataType\":\"int\",\"nullable\":\"NO\",\"defaultValue\":null,\"inputType\":\"number\"},{\"name\":\"name\",\"dataType\":\"varchar\",\"nullable\":\"NO\",\"defaultValue\":null,\"inputType\":\"text\"},{\"name\":\"description\",\"dataType\":\"text\",\"nullable\":\"NO\",\"defaultValue\":null,\"inputType\":\"textarea\"},{\"name\":\"account_id\",\"dataType\":\"int\",\"nullable\":\"NO\",\"defaultValue\":null,\"inputType\":\"number\"}]', updated_at = NOW(), updated_by = 'Paul' WHERE id = 59","timestamp":"2025-10-24 15:00:11"}
{"level":"debug","message":"[dbUtils.js] Executing PATCH query: ********","timestamp":"2025-10-24 15:00:11"}
{"level":"debug","message":"[dbUtils.js] Handling PATCH-specific logic","timestamp":"2025-10-24 15:00:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":745.052211,"method":"PATCH","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:00:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:00:12"}
{"level":"info","message":"[dmlProcessor.js] UPDATE executed successfully on api_wf.eventProps","timestamp":"2025-10-24 15:00:12"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-24 15:00:12"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (1055ms)","timestamp":"2025-10-24 15:00:12"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1055.353314,"method":"POST","operation":"http_request","path":"/api/execDML","status":200},"timestamp":"2025-10-24 15:00:12"}
{"body":{"data":{"paramName":"props","paramVal":"{\"tableName\":\"whatsfresh.ingredient_types\"}","xref_id":64},"method":"INSERT","table":"api_wf.eventProps"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 15:00:12"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 15:00:12"}
{"data":{"paramName":"props","paramVal":"{\"tableName\":\"whatsfresh.ingredient_types\"}","xref_id":64},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.eventProps","timestamp":"2025-10-24 15:00:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:00:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:00:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:00:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":45.501925,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:00:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:00:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:00:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:00:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:00:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":69.000404,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:00:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:00:12"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.eventProps (xref_id, paramName, paramVal, created_at, created_by) VALUES (64, 'props', '{\"tableName\":\"whatsfresh.ingredient_types\"}', NOW(), 'Paul')","timestamp":"2025-10-24 15:00:12"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:00:12"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:00:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":447.774397,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:00:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:00:13"}
{"level":"info","message":"[dmlProcessor.js] INSERT executed successfully on api_wf.eventProps","timestamp":"2025-10-24 15:00:13"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-24 15:00:13"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (565ms)","timestamp":"2025-10-24 15:00:13"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":564.625847,"method":"POST","operation":"http_request","path":"/api/execDML","status":200},"timestamp":"2025-10-24 15:00:13"}
{"body":{"impacts":{"0":{"affectedApps":{"0":"studio"},"changeType":"MODIFY","createdBy":"claude","description":"Added Page props to pageConfig - now pageConfig.props is available for template resolution in triggers (enables {{pageConfig.props.tableName}} pattern)","filePath":"apps/studio/src/utils/pageConfigBuilder/index.js"}},"planId":45},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/logImpact","timestamp":"2025-10-24 15:05:29"}
{"level":"http","message":"[logImpact.js] POST /api/logImpact","timestamp":"2025-10-24 15:05:29"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:05:29"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:05:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":389.72627,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:05:30"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:05:30"}
{"level":"info","message":"[impactLogger.js] Logged 1 impacts","timestamp":"2025-10-24 15:05:30"}
{"level":"info","message":"[logImpact.js] Impact logging completed successfully","timestamp":"2025-10-24 15:05:30"}
{"level":"info","message":"[app.js]  Response: POST /api/logImpact 200 (391ms)","timestamp":"2025-10-24 15:05:30"}
{"body":{"values":{"0":{"paramName":"appID","paramVal":"50"},"1":{"paramName":"appName","paramVal":"whatsfresh"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 15:06:20"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 15:06:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:06:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":63.463187,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:06:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:06:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":165.492494,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:06:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:20"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:06:20"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:06:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":710.113936,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:06:21"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:21"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:06:21"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:06:21"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":772.393162,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:06:22"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:22"}
{"level":"debug","message":"[setVals.js] Set 2 values for pc7900@gmail.com","timestamp":"2025-10-24 15:06:22"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (1715ms)","timestamp":"2025-10-24 15:06:22"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1715.210512,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 15:06:22"}
{"body":{"eventSQLId":"pageList","params":{"appID":"50"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:06:22"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:06:22"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: pageList","timestamp":"2025-10-24 15:06:22"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:22"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:22"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:06:22"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":32.362151,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:06:22"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:22"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: pageList (ID: 2)","timestamp":"2025-10-24 15:06:22"}
{"level":"debug","message":"[execEventType.js] Using passed param :appID → 50...","timestamp":"2025-10-24 15:06:22"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 50\r\nAND   comp_type in ('Page','CRUD')","timestamp":"2025-10-24 15:06:22"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:22"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:22"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 5","timestamp":"2025-10-24 15:06:22"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":600.850537,"method":"GET","operation":"database_query","rowCount":5,"success":true},"timestamp":"2025-10-24 15:06:22"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:22"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: pageList (ID: 2)","timestamp":"2025-10-24 15:06:22"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (635ms)","timestamp":"2025-10-24 15:06:22"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":634.885402,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-24 15:06:22"}
{"body":{"values":{"0":{"paramName":"appID","paramVal":"51"},"1":{"paramName":"appName","paramVal":"admin"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 15:06:38"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 15:06:38"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:38"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:38"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:06:38"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":40.006747,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:06:38"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:38"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:38"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:38"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:06:38"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":89.596275,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:06:38"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:38"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:06:38"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:06:38"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":490.987187,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:06:39"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:39"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:06:39"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:06:39"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":804.229205,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:06:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:40"}
{"level":"debug","message":"[setVals.js] Set 2 values for pc7900@gmail.com","timestamp":"2025-10-24 15:06:40"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (1429ms)","timestamp":"2025-10-24 15:06:40"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1428.8113290000001,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 15:06:40"}
{"body":{"eventSQLId":"pageList","params":{"appID":"51"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:06:40"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:06:40"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: pageList","timestamp":"2025-10-24 15:06:40"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:40"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:40"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:06:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":39.772978,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:06:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:40"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: pageList (ID: 2)","timestamp":"2025-10-24 15:06:40"}
{"level":"debug","message":"[execEventType.js] Using passed param :appID → 51...","timestamp":"2025-10-24 15:06:40"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 51\r\nAND   comp_type in ('Page','CRUD')","timestamp":"2025-10-24 15:06:40"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:40"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:40"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:06:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":87.860777,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:06:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:40"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: pageList (ID: 2)","timestamp":"2025-10-24 15:06:40"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (130ms)","timestamp":"2025-10-24 15:06:40"}
{"body":{"values":{"0":{"paramName":"pageID","paramVal":"64"},"1":{"paramName":"pageName","paramVal":"{pageName}"},"2":{"paramName":"xrefID","paramVal":"64"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 15:06:41"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 15:06:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:06:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":97.737646,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:06:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:06:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":188.13921,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:06:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:41"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:06:41"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:06:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":591.310834,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:06:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:42"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:06:42"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:06:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":406.838449,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:06:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:42"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:06:42"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:06:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":228.013618,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[setVals.js] Set 3 values for pc7900@gmail.com","timestamp":"2025-10-24 15:06:43"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (1517ms)","timestamp":"2025-10-24 15:06:43"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1516.65256,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 15:06:43"}
{"body":{"eventSQLId":"xrefHierarchy","params":{"xrefID":"64"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:06:43"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefHierarchy","timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:06:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":40.109956,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefHierarchy (ID: 3)","timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_structure(64)","timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-24 15:06:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":60.672802,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:43"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefHierarchy (ID: 3)","timestamp":"2025-10-24 15:06:43"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (103ms)","timestamp":"2025-10-24 15:06:43"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":51}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:06:43"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:06:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":247.955,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 51...","timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 51 \r\nAND active = 1","timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 15:06:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":43.025704,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:43"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:06:43"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (293ms)","timestamp":"2025-10-24 15:06:43"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":51}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:06:43"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:06:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":240.427529,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 51...","timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 51\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:06:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.449022,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:43"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:06:43"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (278ms)","timestamp":"2025-10-24 15:06:43"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:06:43"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:06:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":204.1636,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 64 \r\nAND active = 1","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:06:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.069879,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:44"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:06:44"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (244ms)","timestamp":"2025-10-24 15:06:44"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:06:44"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:06:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":45.79376,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 64\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:06:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.408932,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:44"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:06:44"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (84ms)","timestamp":"2025-10-24 15:06:44"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":65}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:06:44"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:06:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":79.754902,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 65...","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 65 \r\nAND active = 1","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 15:06:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":219.307829,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:44"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:06:44"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (302ms)","timestamp":"2025-10-24 15:06:44"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":65}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:06:44"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:06:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":39.678104,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 65...","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 65\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 15:06:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":247.998932,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:44"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:06:44"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (290ms)","timestamp":"2025-10-24 15:06:44"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":66}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:06:44"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:06:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.052348,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 66...","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 66 \r\nAND active = 1","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:06:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":189.263427,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:45"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:06:45"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (233ms)","timestamp":"2025-10-24 15:06:45"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":66}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:06:45"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:06:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":38.208376,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 66...","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 66\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 15:06:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":40.83242,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:45"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:06:45"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (81ms)","timestamp":"2025-10-24 15:06:45"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:06:45"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:06:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":264.3285,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 67 \r\nAND active = 1","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 4","timestamp":"2025-10-24 15:06:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.572269,"method":"GET","operation":"database_query","rowCount":4,"success":true},"timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:45"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:06:45"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (301ms)","timestamp":"2025-10-24 15:06:45"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:06:45"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:06:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":100.206067,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 67\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 15:06:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":152.230214,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:45"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:06:45"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (254ms)","timestamp":"2025-10-24 15:06:45"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":68}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:06:45"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:06:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":45.382952,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 68...","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 68 \r\nAND active = 1","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-24 15:06:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":198.700033,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:46"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:06:46"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (245ms)","timestamp":"2025-10-24 15:06:46"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":68}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:06:46"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:06:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":38.625395,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 68...","timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 68\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:06:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":78.508678,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:46"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:06:46"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (119ms)","timestamp":"2025-10-24 15:06:46"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":69}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:06:46"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:06:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":69.476611,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 69...","timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 69 \r\nAND active = 1","timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 15:06:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":233.999032,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:46"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:06:46"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (306ms)","timestamp":"2025-10-24 15:06:46"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":69}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:06:46"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:06:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":294.021808,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 69...","timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 69\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:06:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 15:06:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.684425,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 15:06:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:06:46"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:06:46"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (332ms)","timestamp":"2025-10-24 15:06:46"}
{"body":{"impacts":{"0":{"affectedApps":{"0":"studio"},"changeType":"MODIFY","createdBy":"claude","description":"Enhanced getComponentProps to handle nested props - when paramName is props with JSON object value, merges the object into props instead of nesting it","filePath":"apps/studio/src/utils/pageConfigBuilder/dataFetcher.js"}},"planId":45},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/logImpact","timestamp":"2025-10-24 15:09:53"}
{"level":"http","message":"[logImpact.js] POST /api/logImpact","timestamp":"2025-10-24 15:09:53"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:09:53"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:09:53"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":526.760755,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:09:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:09:54"}
{"level":"info","message":"[impactLogger.js] Logged 1 impacts","timestamp":"2025-10-24 15:09:54"}
{"level":"info","message":"[logImpact.js] Impact logging completed successfully","timestamp":"2025-10-24 15:09:54"}
{"level":"info","message":"[app.js]  Response: POST /api/logImpact 200 (529ms)","timestamp":"2025-10-24 15:09:54"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":528.828493,"method":"POST","operation":"http_request","path":"/api/logImpact","status":200},"timestamp":"2025-10-24 15:09:54"}
{"body":{"values":{"0":{"paramName":"appID","paramVal":"50"},"1":{"paramName":"appName","paramVal":"whatsfresh"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 15:16:35"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 15:16:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":163.226252,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":89.780065,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:35"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:16:35"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:16:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":173.682486,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:16:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:36"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:16:36"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:16:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":164.993105,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:16:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:36"}
{"level":"debug","message":"[setVals.js] Set 2 values for pc7900@gmail.com","timestamp":"2025-10-24 15:16:36"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (594ms)","timestamp":"2025-10-24 15:16:36"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":594.447445,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 15:16:36"}
{"body":{"eventSQLId":"pageList","params":{"appID":"50"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:16:36"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:16:36"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: pageList","timestamp":"2025-10-24 15:16:36"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:36"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:36"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":46.909811,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:36"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: pageList (ID: 2)","timestamp":"2025-10-24 15:16:36"}
{"level":"debug","message":"[execEventType.js] Using passed param :appID → 50...","timestamp":"2025-10-24 15:16:36"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 50\r\nAND   comp_type in ('Page','CRUD')","timestamp":"2025-10-24 15:16:36"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:36"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:36"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 5","timestamp":"2025-10-24 15:16:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.545686,"method":"GET","operation":"database_query","rowCount":5,"success":true},"timestamp":"2025-10-24 15:16:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:36"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: pageList (ID: 2)","timestamp":"2025-10-24 15:16:36"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (84ms)","timestamp":"2025-10-24 15:16:36"}
{"body":{"values":{"0":{"paramName":"pageID","paramVal":"57"},"1":{"paramName":"pageName","paramVal":"ingrType"},"2":{"paramName":"xrefID","paramVal":"57"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 15:16:38"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 15:16:38"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:38"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:38"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:38"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":84.423958,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:38"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:38"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:38"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:38"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:38"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":49.47492,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:38"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:38"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:16:38"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:16:38"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":405.400738,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:16:39"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:39"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:16:39"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:16:39"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":302.01056,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:16:39"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:39"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:16:39"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:16:39"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":280.548625,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:16:39"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:39"}
{"level":"debug","message":"[setVals.js] Set 3 values for pc7900@gmail.com","timestamp":"2025-10-24 15:16:39"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (1125ms)","timestamp":"2025-10-24 15:16:39"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1124.985673,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 15:16:39"}
{"body":{"eventSQLId":"xrefHierarchy","params":{"xrefID":"57"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:16:39"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:16:39"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefHierarchy","timestamp":"2025-10-24 15:16:39"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:39"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:39"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:39"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.731212,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:39"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:39"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefHierarchy (ID: 3)","timestamp":"2025-10-24 15:16:39"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 57...","timestamp":"2025-10-24 15:16:39"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_structure(57)","timestamp":"2025-10-24 15:16:39"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:39"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:39"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-24 15:16:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":111.558603,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:40"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefHierarchy (ID: 3)","timestamp":"2025-10-24 15:16:40"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (152ms)","timestamp":"2025-10-24 15:16:40"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":50}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:16:40"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:40"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":137.137031,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 50...","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 50 \r\nAND active = 1","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:40"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 15:16:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":129.62136,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:40"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:16:40"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (269ms)","timestamp":"2025-10-24 15:16:40"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":50}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:16:40"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:40"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":40.364662,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 50...","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 50\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:40"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 15:16:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":215.936507,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:40"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:16:40"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (258ms)","timestamp":"2025-10-24 15:16:40"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":57}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:16:40"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:40"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.967148,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 57...","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 57 \r\nAND active = 1","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:40"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 15:16:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":176.670895,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:40"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:16:40"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (221ms)","timestamp":"2025-10-24 15:16:40"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":57}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:16:40"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:40"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.579057,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 57...","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 57\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:40"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-24 15:16:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":73.844113,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:40"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:16:40"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (111ms)","timestamp":"2025-10-24 15:16:40"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":60}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:16:40"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:40"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.594797,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 60...","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 60 \r\nAND active = 1","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:40"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:40"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":62.228762,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (99ms)","timestamp":"2025-10-24 15:16:41"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":60}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:16:41"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":44.305537,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 60...","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 60\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":63.490348,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (110ms)","timestamp":"2025-10-24 15:16:41"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":56}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:16:41"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":31.960227,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 56...","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 56 \r\nAND active = 1","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 4","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":64.85189,"method":"GET","operation":"database_query","rowCount":4,"success":true},"timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (99ms)","timestamp":"2025-10-24 15:16:41"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":56}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:16:41"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.126185,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 56...","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 56\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":84.054641,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (119ms)","timestamp":"2025-10-24 15:16:41"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":59}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:16:41"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.724227,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 59...","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 59 \r\nAND active = 1","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":74.593902,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (112ms)","timestamp":"2025-10-24 15:16:41"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":59}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:16:41"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.626615,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 59...","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 59\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":67.134317,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (103ms)","timestamp":"2025-10-24 15:16:41"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":63}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:16:41"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":44.764239,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 63...","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 63 \r\nAND active = 1","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":66.05257,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (113ms)","timestamp":"2025-10-24 15:16:41"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":63}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:16:41"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.738191,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 63...","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 63\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":64.890184,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 15:16:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:16:41"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (102ms)","timestamp":"2025-10-24 15:16:41"}
{"body":{"values":{"0":{"paramName":"appID","paramVal":"51"},"1":{"paramName":"appName","paramVal":"admin"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 15:16:44"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 15:16:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.055388,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":32.699045,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:44"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:16:44"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:16:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":106.681364,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:16:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:44"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:16:44"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:16:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":125.219574,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:16:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:44"}
{"level":"debug","message":"[setVals.js] Set 2 values for pc7900@gmail.com","timestamp":"2025-10-24 15:16:44"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (301ms)","timestamp":"2025-10-24 15:16:44"}
{"body":{"eventSQLId":"pageList","params":{"appID":"51"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:16:44"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:16:44"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: pageList","timestamp":"2025-10-24 15:16:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":46.796366,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:44"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: pageList (ID: 2)","timestamp":"2025-10-24 15:16:44"}
{"level":"debug","message":"[execEventType.js] Using passed param :appID → 51...","timestamp":"2025-10-24 15:16:44"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 51\r\nAND   comp_type in ('Page','CRUD')","timestamp":"2025-10-24 15:16:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":40.889877,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:44"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: pageList (ID: 2)","timestamp":"2025-10-24 15:16:44"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (89ms)","timestamp":"2025-10-24 15:16:44"}
{"body":{"values":{"0":{"paramName":"pageID","paramVal":"64"},"1":{"paramName":"pageName","paramVal":"{pageName}"},"2":{"paramName":"xrefID","paramVal":"64"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 15:16:46"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 15:16:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":58.846729,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":255.110514,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:46"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:16:46"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:16:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":349.200129,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:16:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:46"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:16:46"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:16:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":356.063425,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:16:47"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:47"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:16:47"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:16:47"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":198.769396,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:16:47"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:47"}
{"level":"debug","message":"[setVals.js] Set 3 values for pc7900@gmail.com","timestamp":"2025-10-24 15:16:47"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (1223ms)","timestamp":"2025-10-24 15:16:47"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1223.1661159999999,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 15:16:47"}
{"body":{"eventSQLId":"xrefHierarchy","params":{"xrefID":"64"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:16:47"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:16:47"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefHierarchy","timestamp":"2025-10-24 15:16:47"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:47"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:47"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:47"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":53.783315,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:47"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:47"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefHierarchy (ID: 3)","timestamp":"2025-10-24 15:16:47"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-24 15:16:47"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_structure(64)","timestamp":"2025-10-24 15:16:47"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:47"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:47"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-24 15:16:47"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":94.990032,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:16:47"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:47"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefHierarchy (ID: 3)","timestamp":"2025-10-24 15:16:47"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (150ms)","timestamp":"2025-10-24 15:16:47"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":51}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:16:47"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:16:47"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:16:47"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:47"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:47"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:47"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":265.513914,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:47"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:47"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:16:47"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 51...","timestamp":"2025-10-24 15:16:47"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 51 \r\nAND active = 1","timestamp":"2025-10-24 15:16:47"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:47"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:47"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 15:16:48"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":71.034032,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:48"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:16:48"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (338ms)","timestamp":"2025-10-24 15:16:48"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":51}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:16:48"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:48"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:48"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":288.180743,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 51...","timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 51\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:48"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:48"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.55735,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:48"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:16:48"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (327ms)","timestamp":"2025-10-24 15:16:48"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:16:48"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:48"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:48"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":250.45927,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 64 \r\nAND active = 1","timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:48"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:48"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":38.584308,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:48"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:16:48"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (291ms)","timestamp":"2025-10-24 15:16:48"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:16:48"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:48"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:48"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":68.6251,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 64\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:48"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:48"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":186.595155,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:48"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:16:48"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (258ms)","timestamp":"2025-10-24 15:16:48"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":65}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:16:48"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:48"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:48"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:49"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":288.816033,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 65...","timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 65 \r\nAND active = 1","timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:49"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 15:16:49"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.407807,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:49"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:16:49"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (327ms)","timestamp":"2025-10-24 15:16:49"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":65}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:16:49"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:49"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:49"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":254.639348,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 65...","timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 65\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:49"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 15:16:49"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":39.988668,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:49"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:16:49"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (297ms)","timestamp":"2025-10-24 15:16:49"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":66}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:16:49"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:49"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:49"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":89.947593,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 66...","timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 66 \r\nAND active = 1","timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:49"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:49"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":96.253165,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:49"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:16:49"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (188ms)","timestamp":"2025-10-24 15:16:49"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":66}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:16:49"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:49"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:49"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":172.048706,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 66...","timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 66\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:49"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:49"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 15:16:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":110.436479,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:50"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:16:50"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (285ms)","timestamp":"2025-10-24 15:16:50"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:16:50"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":51.050511,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 67 \r\nAND active = 1","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 4","timestamp":"2025-10-24 15:16:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.087508,"method":"GET","operation":"database_query","rowCount":4,"success":true},"timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:50"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:16:50"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (91ms)","timestamp":"2025-10-24 15:16:50"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:16:50"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":268.156473,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 67\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 15:16:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":268.198219,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:50"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:16:50"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (538ms)","timestamp":"2025-10-24 15:16:50"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":538.300337,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-24 15:16:50"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":68}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:16:50"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.485107,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 68...","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 68 \r\nAND active = 1","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-24 15:16:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":41.399365,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:50"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:16:50"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (76ms)","timestamp":"2025-10-24 15:16:50"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":68}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:16:50"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":114.78977,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 68...","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 68\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":31.248572,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:50"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:16:50"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (148ms)","timestamp":"2025-10-24 15:16:50"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":69}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:16:51"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:16:51"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:16:51"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:51"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:51"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":255.262371,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:51"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:51"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:16:51"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 69...","timestamp":"2025-10-24 15:16:51"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 69 \r\nAND active = 1","timestamp":"2025-10-24 15:16:51"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:51"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:51"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 15:16:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":41.881029,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 15:16:51"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:51"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:16:51"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (299ms)","timestamp":"2025-10-24 15:16:51"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":69}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:16:51"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:16:51"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:16:51"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:51"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:51"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:16:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":253.733255,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:16:51"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:51"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:16:51"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 69...","timestamp":"2025-10-24 15:16:51"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 69\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:16:51"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:16:51"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:16:51"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 15:16:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.909513,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 15:16:51"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:16:51"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:16:51"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (291ms)","timestamp":"2025-10-24 15:16:51"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:17:18"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:17:18"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 15:17:18"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:17:18"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:17:18"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:17:18"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:17:18"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":78.173337,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:17:18"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:17:18"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":72.375015,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:17:18"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:17:18"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":295.674646,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[execEventType.js] Resolved from context :acctID → 3","timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:17:18"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-24 15:17:18"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":371.574686,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:17:18"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 15:17:18"}
{"level":"info","message":"[getEventTypes.js] Fetched 19 eventTypes","timestamp":"2025-10-24 15:17:18"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (374ms)","timestamp":"2025-10-24 15:17:18"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:17:18"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":303.117943,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[execEventType.js] Resolved from context :acctID → 3","timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:17:18"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 15:17:18"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:17:18"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 15:17:18"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.563868,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:17:18"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 15:17:18"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (412ms)","timestamp":"2025-10-24 15:17:18"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 15:17:18"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":85.79867,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:17:18"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 15:17:18"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (465ms)","timestamp":"2025-10-24 15:17:18"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-10-24 15:17:18"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":134.400994,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-10-24 15:17:18"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:17:18"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 15:17:18"}
{"level":"info","message":"[getEventTypes.js] Fetched 19 eventTypes","timestamp":"2025-10-24 15:17:18"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (137ms)","timestamp":"2025-10-24 15:17:18"}
{"body":{"values":{"0":{"paramName":"xrefID","paramVal":65}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 15:18:37"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:18:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:18:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.888572,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:18:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:18:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":134.995239,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:18:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":284.366095,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 15:18:37"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (465ms)","timestamp":"2025-10-24 15:18:37"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":65}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:18:37"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:18:37"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":65}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:18:37"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:18:37"}
{"body":{"values":{"0":{"paramName":"xrefID","paramVal":65}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 15:18:37"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:18:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:18:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":39.778236,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:18:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:18:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":68.104127,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 65...","timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 65\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:18:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:18:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":73.743728,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 65...","timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 65 \r\nAND active = 1","timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:18:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 15:18:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.495714,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:18:37"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:18:37"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (112ms)","timestamp":"2025-10-24 15:18:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:18:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":45.138754,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:18:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 15:18:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":43.443477,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 15:18:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:18:37"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:18:37"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (119ms)","timestamp":"2025-10-24 15:18:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":399.388889,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:18:38"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:18:38"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 15:18:38"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (486ms)","timestamp":"2025-10-24 15:18:38"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":65}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:18:38"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:18:38"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:18:38"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:18:38"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:18:38"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":65}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:18:38"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:18:38"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:18:38"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:18:38"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:18:38"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:18:38"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":51.021068,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:18:38"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:18:38"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:18:38"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 65...","timestamp":"2025-10-24 15:18:38"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 65 \r\nAND active = 1","timestamp":"2025-10-24 15:18:38"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:18:38"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:18:38"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:18:38"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":50.285602,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:18:38"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:18:38"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:18:38"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 65...","timestamp":"2025-10-24 15:18:38"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 65\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:18:38"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:18:38"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:18:38"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 15:18:38"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":117.994268,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 15:18:38"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:18:38"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:18:38"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (170ms)","timestamp":"2025-10-24 15:18:38"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 15:18:38"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":117.913648,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 15:18:38"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:18:38"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:18:38"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (169ms)","timestamp":"2025-10-24 15:18:38"}
{"body":{"values":{"0":{"paramName":"appID","paramVal":"50"},"1":{"paramName":"appName","paramVal":"whatsfresh"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 15:39:40"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 15:39:40"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:40"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:40"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":167.86018,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:40"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:40"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:40"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":158.137575,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:40"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:39:40"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:39:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":115.300491,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:39:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:40"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:39:40"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:39:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":237.500308,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:39:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:41"}
{"level":"debug","message":"[setVals.js] Set 2 values for pc7900@gmail.com","timestamp":"2025-10-24 15:39:41"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (682ms)","timestamp":"2025-10-24 15:39:41"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":681.729913,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 15:39:41"}
{"body":{"eventSQLId":"pageList","params":{"appID":"50"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:39:41"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:39:41"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: pageList","timestamp":"2025-10-24 15:39:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":49.445372,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:41"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: pageList (ID: 2)","timestamp":"2025-10-24 15:39:41"}
{"level":"debug","message":"[execEventType.js] Using passed param :appID → 50...","timestamp":"2025-10-24 15:39:41"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 50\r\nAND   comp_type in ('Page','CRUD')","timestamp":"2025-10-24 15:39:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 5","timestamp":"2025-10-24 15:39:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":69.786966,"method":"GET","operation":"database_query","rowCount":5,"success":true},"timestamp":"2025-10-24 15:39:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:41"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: pageList (ID: 2)","timestamp":"2025-10-24 15:39:41"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (121ms)","timestamp":"2025-10-24 15:39:41"}
{"body":{"values":{"0":{"paramName":"appID","paramVal":"51"},"1":{"paramName":"appName","paramVal":"admin"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 15:39:42"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 15:39:42"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:42"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:42"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":198.701396,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":52.498824,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:43"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:39:43"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:39:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":328.614937,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:39:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:43"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:39:43"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:39:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":221.151956,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:39:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:43"}
{"level":"debug","message":"[setVals.js] Set 2 values for pc7900@gmail.com","timestamp":"2025-10-24 15:39:43"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (805ms)","timestamp":"2025-10-24 15:39:43"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":804.630355,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 15:39:43"}
{"body":{"eventSQLId":"pageList","params":{"appID":"51"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:39:43"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:39:43"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: pageList","timestamp":"2025-10-24 15:39:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":45.558906,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:43"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: pageList (ID: 2)","timestamp":"2025-10-24 15:39:43"}
{"level":"debug","message":"[execEventType.js] Using passed param :appID → 51...","timestamp":"2025-10-24 15:39:43"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 51\r\nAND   comp_type in ('Page','CRUD')","timestamp":"2025-10-24 15:39:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":142.442034,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:43"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: pageList (ID: 2)","timestamp":"2025-10-24 15:39:43"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (191ms)","timestamp":"2025-10-24 15:39:43"}
{"body":{"values":{"0":{"paramName":"pageID","paramVal":"64"},"1":{"paramName":"pageName","paramVal":"{pageName}"},"2":{"paramName":"xrefID","paramVal":"64"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 15:39:45"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":69.681086,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":145.360456,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":163.257811,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":102.517817,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":108.038729,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[setVals.js] Set 3 values for pc7900@gmail.com","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (593ms)","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":592.551473,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 15:39:45"}
{"body":{"eventSQLId":"xrefHierarchy","params":{"xrefID":"64"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:39:45"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefHierarchy","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.915621,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefHierarchy (ID: 3)","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_structure(64)","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":41.553106,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefHierarchy (ID: 3)","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (79ms)","timestamp":"2025-10-24 15:39:45"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":51}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:39:45"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.954195,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 51...","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 51 \r\nAND active = 1","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.558279,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (73ms)","timestamp":"2025-10-24 15:39:45"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":51}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:39:45"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.196541,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 51...","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 51\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.582043,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (72ms)","timestamp":"2025-10-24 15:39:45"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:39:45"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":39.514287,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 64 \r\nAND active = 1","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.746042,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (75ms)","timestamp":"2025-10-24 15:39:45"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:39:45"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.609683,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 64\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.470424,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (72ms)","timestamp":"2025-10-24 15:39:46"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":65}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:39:46"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.423338,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 65...","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 65 \r\nAND active = 1","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":32.301439,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (69ms)","timestamp":"2025-10-24 15:39:46"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":65}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:39:46"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.942612,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 65...","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 65\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":44.18646,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (83ms)","timestamp":"2025-10-24 15:39:46"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":77}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:39:46"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.994786,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 77...","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 77 \r\nAND active = 1","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":72.106989,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (109ms)","timestamp":"2025-10-24 15:39:46"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":77}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:39:46"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.2159,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 77...","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 77\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":71.657095,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (110ms)","timestamp":"2025-10-24 15:39:46"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":66}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:39:46"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":38.315036,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 66...","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 66 \r\nAND active = 1","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.00626,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (75ms)","timestamp":"2025-10-24 15:39:46"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":66}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:39:46"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":31.780161,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 66...","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 66\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.840337,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (76ms)","timestamp":"2025-10-24 15:39:46"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:39:46"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":31.370547,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 67 \r\nAND active = 1","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 4","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.821089,"method":"GET","operation":"database_query","rowCount":4,"success":true},"timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (71ms)","timestamp":"2025-10-24 15:39:46"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:39:46"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.247952,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 67\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.273539,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (73ms)","timestamp":"2025-10-24 15:39:46"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":68}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:39:46"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.148021,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 68...","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 68 \r\nAND active = 1","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.449081,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (70ms)","timestamp":"2025-10-24 15:39:46"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":68}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:39:46"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":41.646024,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 68...","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 68\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.427597,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (78ms)","timestamp":"2025-10-24 15:39:46"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":69}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:39:46"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:47"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":38.511874,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:47"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:47"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:39:47"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 69...","timestamp":"2025-10-24 15:39:47"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 69 \r\nAND active = 1","timestamp":"2025-10-24 15:39:47"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:47"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:47"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 15:39:47"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.222825,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 15:39:47"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:47"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:39:47"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (74ms)","timestamp":"2025-10-24 15:39:47"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":69}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:39:47"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:39:47"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:39:47"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:47"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:47"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:39:47"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":52.415903,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:39:47"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:47"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:39:47"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 69...","timestamp":"2025-10-24 15:39:47"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 69\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:39:47"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:39:47"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:39:47"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 15:39:47"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.318445,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 15:39:47"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:39:47"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:39:47"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (89ms)","timestamp":"2025-10-24 15:39:47"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:40:05"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:40:05"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:40:05"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:40:05"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 15:40:05"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:40:05"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:40:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":98.804688,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:40:05"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:40:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":97.663084,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:40:05"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:40:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":79.960681,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[execEventType.js] Resolved from context :acctID → 3","timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:40:05"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:40:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":79.946754,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[execEventType.js] Resolved from context :acctID → 3","timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:40:05"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 25","timestamp":"2025-10-24 15:40:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":177.16497,"method":"GET","operation":"database_query","rowCount":25,"success":true},"timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:40:05"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 15:40:05"}
{"level":"info","message":"[getEventTypes.js] Fetched 25 eventTypes","timestamp":"2025-10-24 15:40:05"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 200 (178ms)","timestamp":"2025-10-24 15:40:05"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 15:40:05"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:40:05"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 15:40:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":31.013302,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:40:05"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 15:40:05"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (210ms)","timestamp":"2025-10-24 15:40:05"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 15:40:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.442359,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:40:05"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 15:40:05"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (213ms)","timestamp":"2025-10-24 15:40:05"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 25","timestamp":"2025-10-24 15:40:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":146.463943,"method":"GET","operation":"database_query","rowCount":25,"success":true},"timestamp":"2025-10-24 15:40:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:40:05"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 15:40:05"}
{"level":"info","message":"[getEventTypes.js] Fetched 25 eventTypes","timestamp":"2025-10-24 15:40:05"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (149ms)","timestamp":"2025-10-24 15:40:05"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 15:41:56"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 15:41:56"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 15:41:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:41:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:41:56"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:41:56"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:41:56"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 15:41:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:41:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:41:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 25","timestamp":"2025-10-24 15:41:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":79.561746,"method":"GET","operation":"database_query","rowCount":25,"success":true},"timestamp":"2025-10-24 15:41:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:41:57"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 15:41:57"}
{"level":"info","message":"[getEventTypes.js] Fetched 25 eventTypes","timestamp":"2025-10-24 15:41:57"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (82ms)","timestamp":"2025-10-24 15:41:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:41:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":293.443633,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:41:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:41:57"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 15:41:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:41:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:41:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:41:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.6924,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:41:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:41:57"}
{"level":"debug","message":"[execEventType.js] Resolved from context :acctID → 3","timestamp":"2025-10-24 15:41:57"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 15:41:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:41:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:41:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 15:41:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":32.414415,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 15:41:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:41:57"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 15:41:57"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (365ms)","timestamp":"2025-10-24 15:41:57"}
{"body":{"impacts":{"0":{"affectedApps":{"0":"studio"},"changeType":"CREATE","createdBy":"claude","description":"Created textRenderer module - handles rendering of H1-H4, Text, and Label components with proper HTML tags and styling","filePath":"apps/studio/src/rendering/utils/textRenderer.js"},"1":{"affectedApps":{"0":"studio"},"changeType":"MODIFY","createdBy":"claude","description":"Integrated textRenderer - added text component detection and rendering support for H1-H4, Text, Label comp_types","filePath":"apps/studio/src/rendering/DirectRenderer.jsx"}},"planId":45},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/logImpact","timestamp":"2025-10-24 15:42:17"}
{"level":"http","message":"[logImpact.js] POST /api/logImpact","timestamp":"2025-10-24 15:42:17"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:42:17"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:42:17"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":367.16243,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:42:18"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:42:18"}
{"level":"info","message":"[impactLogger.js] Logged 2 impacts","timestamp":"2025-10-24 15:42:18"}
{"level":"info","message":"[logImpact.js] Impact logging completed successfully","timestamp":"2025-10-24 15:42:18"}
{"level":"info","message":"[app.js]  Response: POST /api/logImpact 200 (369ms)","timestamp":"2025-10-24 15:42:18"}
{"body":{"data":{"from_agent":"claude","message":"# Text Component Types Implementation\n\n## New Component Types Added\n\nAdded semantic HTML text components to eventTypes:\n\n- **H1** - Main page title (32px, bold)\n- **H2** - Section title (24px, semi-bold)\n- **H3** - Subsection title (20px, semi-bold)\n- **H4** - Minor heading (16px, semi-bold)\n- **Text** - Generic paragraph/span (14px, normal)\n- **Label** - Form field labels (14px, medium)\n\n## Implementation\n\n### textRenderer.js Module\n\nCreated modular renderer for text components:\n- Maps comp_type to HTML tags (H1→h1, Text→p, etc.)\n- Extracts text from props.text or textContent\n- Applies default styles from eventTypes\n- Supports event handlers\n- Label components support htmlFor prop\n\n### DirectRenderer Integration\n\nAdded text component detection before template lookup:\n```javascript\nif (isTextComponent(comp_type)) {\n  return renderTextComponent(...);\n}\n```\n\n## Usage Pattern\n\n### In Component Hierarchy (eventComp_xref)\n```json\n{\n  \"comp_name\": \"{pageName}Title\",\n  \"comp_type\": \"H2\",\n  \"posOrder\": \"01,00,98,center\"\n}\n```\n\n### With Props (eventProps)\n```json\n{\n  \"paramName\": \"text\",\n  \"paramVal\": \"{pageName} Management\"\n}\n```\n\n### Renders As\n```html\n<h2 style=\"fontSize: 24px; fontWeight: 600; ...\">\n  {pageName} Management\n</h2>\n```\n\n## Benefits\n\n- ✅ Semantic HTML for accessibility\n- ✅ Consistent typography across app\n- ✅ No template definitions needed\n- ✅ Modular rendering logic\n- ✅ Style override support via props\n\n## Files Modified\n\n- Created: /apps/studio/src/rendering/utils/textRenderer.js\n- Modified: /apps/studio/src/rendering/DirectRenderer.jsx","plan_id":45,"subject":"Text Component Types - H1-H4, Text, Label","to_agent":"any","type":"architecture"},"method":"INSERT","table":"api_wf.plan_communications"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 15:42:39"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 15:42:39"}
{"data":{"from_agent":"claude","message":"# Text Component Types Implementation\n\n## New Component Types Added\n\nAdded semantic HTML text components to eventTypes:\n\n- **H1** - Main page title (32px, bold)\n- **H2** - Section title (24px, semi-bold)\n- **H3** - Subsection title (20px, semi-bold)\n- **H4** - Minor heading (16px, semi-bold)\n- **Text** - Generic paragraph/span (14px, normal)\n- **Label** - Form field labels (14px, medium)\n\n## Implementation\n\n### textRenderer.js Module\n\nCreated modular renderer for text components:\n- Maps comp_type to HTML tags (H1→h1, Text→p, etc.)\n- Extracts text from props.text or textContent\n- Applies default styles from eventTypes\n- Supports event handlers\n- Label components support htmlFor prop\n\n### DirectRenderer Integration\n\nAdded text component detection before template lookup:\n```javascript\nif (isTextComponent(comp_type)) {\n  return renderTextComponent(...);\n}\n```\n\n## Usage Pattern\n\n### In Component Hierarchy (eventComp_xref)\n```json\n{\n  \"comp_name\": \"{pageName}Title\",\n  \"comp_type\": \"H2\",\n  \"posOrder\": \"01,00,98,center\"\n}\n```\n\n### With Props (eventProps)\n```json\n{\n  \"paramName\": \"text\",\n  \"paramVal\": \"{pageName} Management\"\n}\n```\n\n### Renders As\n```html\n<h2 style=\"fontSize: 24px; fontWeight: 600; ...\">\n  {pageName} Management\n</h2>\n```\n\n## Benefits\n\n- ✅ Semantic HTML for accessibility\n- ✅ Consistent typography across app\n- ✅ No template definitions needed\n- ✅ Modular rendering logic\n- ✅ Style override support via props\n\n## Files Modified\n\n- Created: /apps/studio/src/rendering/utils/textRenderer.js\n- Modified: /apps/studio/src/rendering/DirectRenderer.jsx","plan_id":45,"subject":"Text Component Types - H1-H4, Text, Label","to_agent":"any","type":"architecture"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.plan_communications","timestamp":"2025-10-24 15:42:39"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:42:39"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:42:39"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:42:39"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":131.656133,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:42:39"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:42:39"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:42:39"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:42:39"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:42:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":31.552652,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:42:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:42:40"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.plan_communications (plan_id, from_agent, to_agent, type, subject, message, created_at, created_by) VALUES (45, 'claude', 'any', 'architecture', 'Text Component Types - H1-H4, Text, Label', '# Text Component Types Implementation\n\n## New Component Types Added\n\nAdded semantic HTML text components to eventTypes:\n\n- **H1** - Main page title (32px, bold)\n- **H2** - Section title (24px, semi-bold)\n- **H3** - Subsection title (20px, semi-bold)\n- **H4** - Minor heading (16px, semi-bold)\n- **Text** - Generic paragraph/span (14px, normal)\n- **Label** - Form field labels (14px, medium)\n\n## Implementation\n\n### textRenderer.js Module\n\nCreated modular renderer for text components:\n- Maps comp_type to HTML tags (H1→h1, Text→p, etc.)\n- Extracts text from props.text or textContent\n- Applies default styles from eventTypes\n- Supports event handlers\n- Label components support htmlFor prop\n\n### DirectRenderer Integration\n\nAdded text component detection before template lookup:\n```javascript\nif (isTextComponent(comp_type)) {\n  return renderTextComponent(...);\n}\n```\n\n## Usage Pattern\n\n### In Component Hierarchy (eventComp_xref)\n```json\n{\n  \"comp_name\": \"{pageName}Title\",\n  \"comp_type\": \"H2\",\n  \"posOrder\": \"01,00,98,center\"\n}\n```\n\n### With Props (eventProps)\n```json\n{\n  \"paramName\": \"text\",\n  \"paramVal\": \"{pageName} Management\"\n}\n```\n\n### Renders As\n```html\n<h2 style=\"fontSize: 24px; fontWeight: 600; ...\">\n  {pageName} Management\n</h2>\n```\n\n## Benefits\n\n- ✅ Semantic HTML for accessibility\n- ✅ Consistent typography across app\n- ✅ No template definitions needed\n- ✅ Modular rendering logic\n- ✅ Style override support via props\n\n## Files Modified\n\n- Created: /apps/studio/src/rendering/utils/textRenderer.js\n- Modified: /apps/studio/src/rendering/DirectRenderer.jsx', NOW(), 'Paul')","timestamp":"2025-10-24 15:42:40"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:42:40"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:42:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":355.320381,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:42:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:42:40"}
{"level":"info","message":"[dmlProcessor.js] INSERT executed successfully on api_wf.plan_communications","timestamp":"2025-10-24 15:42:40"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-24 15:42:40"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (521ms)","timestamp":"2025-10-24 15:42:40"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":521.003768,"method":"POST","operation":"http_request","path":"/api/execDML","status":200},"timestamp":"2025-10-24 15:42:40"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-24 15:51:46"}
{"body":{"impacts":{"0":{"affectedApps":{"0":"all"},"changeType":"MODIFY","createdBy":"claude","description":"Updated impact logging guidelines\n- Added markdown formatting standard for descriptions\n- Provided examples with newlines and bullet points\n- Clarified when to use formatted vs simple descriptions","filePath":".shared/commands/summary.md"}},"planId":45},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/logImpact","timestamp":"2025-10-24 15:51:52"}
{"level":"http","message":"[logImpact.js] POST /api/logImpact","timestamp":"2025-10-24 15:51:52"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:51:52"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:51:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":272.950367,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:51:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:51:52"}
{"level":"info","message":"[impactLogger.js] Logged 1 impacts","timestamp":"2025-10-24 15:51:52"}
{"level":"info","message":"[logImpact.js] Impact logging completed successfully","timestamp":"2025-10-24 15:51:52"}
{"level":"info","message":"[app.js]  Response: POST /api/logImpact 200 (275ms)","timestamp":"2025-10-24 15:51:52"}
{"body":{"eventSQLId":"eventTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:57:50"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: eventTypeList","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:57:50"}
{"body":{"eventSQLId":"qrySqlList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:57:50"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: qrySqlList","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:57:50"}
{"body":{"eventSQLId":"triggerList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:57:50"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: triggerList","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:57:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:57:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":66.94708,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: qrySqlList (ID: 17)","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, qryName, qrySQL, description\r\nFROM api_wf.eventSQL\r\nWHERE active = 1\r\nORDER BY qryName","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:57:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:57:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":101.313869,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: triggerList (ID: 16)","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select a.id, a.trigType, content_type, a.is_dom_event, a.name, \r\na.description, a.example \r\nfrom    api_wf.triggers a \r\norder by a.trigType, name","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:57:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:57:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":110.083516,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: eventTypeList (ID: 9)","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name, category, title, style\r\nFROM api_wf.eventType\r\nORDER BY Hier, name","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:57:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 30","timestamp":"2025-10-24 15:57:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":104.719019,"method":"GET","operation":"database_query","rowCount":30,"success":true},"timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:50"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: qrySqlList (ID: 17)","timestamp":"2025-10-24 15:57:50"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (175ms)","timestamp":"2025-10-24 15:57:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 23","timestamp":"2025-10-24 15:57:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":96.727653,"method":"GET","operation":"database_query","rowCount":23,"success":true},"timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:50"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: triggerList (ID: 16)","timestamp":"2025-10-24 15:57:50"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (200ms)","timestamp":"2025-10-24 15:57:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 25","timestamp":"2025-10-24 15:57:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":111.880772,"method":"GET","operation":"database_query","rowCount":25,"success":true},"timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:50"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: eventTypeList (ID: 9)","timestamp":"2025-10-24 15:57:50"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (225ms)","timestamp":"2025-10-24 15:57:50"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:57:50"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:57:50"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:57:50"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:57:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:57:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":38.712932,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 70\r\nAND   comp_type = 'App'\r\nAND   xref_id <> parent_id  -- exclude root.","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:57:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:57:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":95.139129,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 70\r\nAND   comp_type = 'App'\r\nAND   xref_id <> parent_id  -- exclude root.","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:57:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 15:57:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":50.06687,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:50"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-24 15:57:50"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (147ms)","timestamp":"2025-10-24 15:57:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 15:57:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":100.513795,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 15:57:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:50"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-24 15:57:50"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (141ms)","timestamp":"2025-10-24 15:57:50"}
{"body":{"values":{"0":{"paramName":"appID","paramVal":"51"},"1":{"paramName":"appName","paramVal":"admin"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 15:57:54"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 15:57:54"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:57:54"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:57:54"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:57:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":32.68151,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:57:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:54"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:57:54"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:57:54"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:57:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":250.352881,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:57:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:54"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:57:54"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:57:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":200.72686,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:57:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:54"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:57:54"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:57:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":199.372915,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:57:55"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:55"}
{"level":"debug","message":"[setVals.js] Set 2 values for pc7900@gmail.com","timestamp":"2025-10-24 15:57:55"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (688ms)","timestamp":"2025-10-24 15:57:55"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":688.199001,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 15:57:55"}
{"body":{"eventSQLId":"pageList","params":{"appID":"51"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:57:55"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:57:55"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: pageList","timestamp":"2025-10-24 15:57:55"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:57:55"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:57:55"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:57:55"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.56431,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:57:55"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:55"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: pageList (ID: 2)","timestamp":"2025-10-24 15:57:55"}
{"level":"debug","message":"[execEventType.js] Using passed param :appID → 51...","timestamp":"2025-10-24 15:57:55"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 51\r\nAND   comp_type in ('Page','CRUD')","timestamp":"2025-10-24 15:57:55"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:57:55"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:57:55"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:57:55"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":132.416847,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:57:55"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:55"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: pageList (ID: 2)","timestamp":"2025-10-24 15:57:55"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (177ms)","timestamp":"2025-10-24 15:57:55"}
{"body":{"values":{"0":{"paramName":"pageID","paramVal":"64"},"1":{"paramName":"pageName","paramVal":"{pageName}"},"2":{"paramName":"xrefID","paramVal":"64"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 15:57:57"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 15:57:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:57:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:57:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:57:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":168.986774,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:57:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:57:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:57:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:57:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":94.42977,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:57:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:58"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:57:58"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:57:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":319.437796,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:57:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:58"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:57:58"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:57:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":186.902827,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:57:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:58"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:57:58"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:57:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":221.626124,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:57:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:58"}
{"level":"debug","message":"[setVals.js] Set 3 values for pc7900@gmail.com","timestamp":"2025-10-24 15:57:58"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (996ms)","timestamp":"2025-10-24 15:57:58"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":995.996923,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 15:57:58"}
{"body":{"eventSQLId":"xrefHierarchy","params":{"xrefID":"64"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:57:58"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:57:58"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefHierarchy","timestamp":"2025-10-24 15:57:58"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:57:58"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:57:58"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":239.269395,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefHierarchy (ID: 3)","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_structure(64)","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":52.589659,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefHierarchy (ID: 3)","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (294ms)","timestamp":"2025-10-24 15:57:59"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":51}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:57:59"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":145.327382,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 51...","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 51 \r\nAND active = 1","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":85.788893,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (233ms)","timestamp":"2025-10-24 15:57:59"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":51}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:57:59"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.590928,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 51...","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 51\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":52.387349,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (89ms)","timestamp":"2025-10-24 15:57:59"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:57:59"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":104.446357,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 64 \r\nAND active = 1","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":56.508751,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (164ms)","timestamp":"2025-10-24 15:57:59"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:57:59"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":129.825436,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 64\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":57.546885,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (189ms)","timestamp":"2025-10-24 15:57:59"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":65}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:57:59"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":40.75729,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 65...","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 65 \r\nAND active = 1","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":70.742673,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (113ms)","timestamp":"2025-10-24 15:57:59"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":65}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:57:59"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":32.865042,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 65...","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 65\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:57:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:57:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.273956,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (73ms)","timestamp":"2025-10-24 15:58:00"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":77}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:58:00"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":45.558375,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 77...","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 77 \r\nAND active = 1","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":64.879719,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (112ms)","timestamp":"2025-10-24 15:58:00"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":77}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:58:00"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.392226,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 77...","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 77\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":66.359196,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (105ms)","timestamp":"2025-10-24 15:58:00"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":66}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:58:00"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.174292,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 66...","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 66 \r\nAND active = 1","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":38.277839,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (76ms)","timestamp":"2025-10-24 15:58:00"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":66}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:58:00"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.534799,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 66...","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 66\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":30.852139,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (67ms)","timestamp":"2025-10-24 15:58:00"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:58:00"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":30.970971,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 67 \r\nAND active = 1","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 4","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":76.124963,"method":"GET","operation":"database_query","rowCount":4,"success":true},"timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (109ms)","timestamp":"2025-10-24 15:58:00"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:58:00"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.928441,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 67\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.565984,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (73ms)","timestamp":"2025-10-24 15:58:00"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":68}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:58:00"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":39.422699,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 68...","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 68 \r\nAND active = 1","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.499961,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (78ms)","timestamp":"2025-10-24 15:58:00"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":68}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:58:00"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":46.893835,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 68...","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 68\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":72.06643,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (121ms)","timestamp":"2025-10-24 15:58:00"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":69}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:58:00"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.417173,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 69...","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 69 \r\nAND active = 1","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":39.116302,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (75ms)","timestamp":"2025-10-24 15:58:00"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":69}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:58:00"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":40.022481,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 69...","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 69\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 15:58:01"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.08815,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 15:58:01"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:01"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:58:01"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (78ms)","timestamp":"2025-10-24 15:58:01"}
{"body":{"values":{"0":{"paramName":"xrefID","paramVal":64}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 15:58:15"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 15:58:15"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:15"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:15"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:58:16"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":160.938427,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:58:16"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:16"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:16"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:16"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:58:16"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":75.22855,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:58:16"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:16"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:58:16"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:58:16"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":230.964742,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:58:16"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:16"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 15:58:16"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (469ms)","timestamp":"2025-10-24 15:58:16"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:58:16"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:58:16"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:58:16"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:16"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:16"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:58:16"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:58:16"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:58:16"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:16"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:16"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:58:16"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.994154,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:58:16"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:16"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:58:16"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-24 15:58:16"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 64 \r\nAND active = 1","timestamp":"2025-10-24 15:58:16"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:16"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:16"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:58:16"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":31.767041,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:58:16"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:16"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:58:16"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-24 15:58:16"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 64\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:58:16"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:16"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:16"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:58:16"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":31.207583,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:58:16"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:16"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:58:16"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (68ms)","timestamp":"2025-10-24 15:58:16"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:58:16"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.117505,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:58:16"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:16"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:58:16"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (69ms)","timestamp":"2025-10-24 15:58:16"}
{"body":{"values":{"0":{"paramName":"xrefID","paramVal":67}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 15:58:23"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 15:58:23"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:23"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:23"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:58:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.616875,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:58:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:23"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:23"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:23"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:58:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":45.343697,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:58:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:23"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:58:23"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:58:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":104.241663,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:58:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:23"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 15:58:23"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (189ms)","timestamp":"2025-10-24 15:58:23"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:58:23"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:58:23"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:58:23"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:23"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:23"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:58:23"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:58:23"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:58:23"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:23"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:23"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:58:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.078306,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:58:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:23"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:58:23"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-24 15:58:23"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 67 \r\nAND active = 1","timestamp":"2025-10-24 15:58:23"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:23"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:23"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:58:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":31.432271,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:58:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:23"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:58:23"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-24 15:58:23"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 67\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:58:23"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:23"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:23"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 15:58:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":39.692324,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 15:58:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:23"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:58:23"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (73ms)","timestamp":"2025-10-24 15:58:23"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 4","timestamp":"2025-10-24 15:58:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":44.233036,"method":"GET","operation":"database_query","rowCount":4,"success":true},"timestamp":"2025-10-24 15:58:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:23"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:58:23"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (80ms)","timestamp":"2025-10-24 15:58:23"}
{"body":{"values":{"0":{"paramName":"xrefID","paramVal":64}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 15:58:46"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 15:58:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:58:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":50.34662,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:58:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:58:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":71.088239,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:58:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:46"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 15:58:46"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 15:58:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":478.787117,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 15:58:47"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:47"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 15:58:47"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (603ms)","timestamp":"2025-10-24 15:58:47"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":603.003537,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 15:58:47"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:58:47"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:58:47"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 15:58:47"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:47"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:47"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 15:58:47"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 15:58:47"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 15:58:47"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:47"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:47"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:58:47"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.621283,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:58:47"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:47"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:58:47"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-24 15:58:47"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 64 \r\nAND active = 1","timestamp":"2025-10-24 15:58:47"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:47"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:47"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:58:47"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":41.147193,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:58:47"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:47"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:58:47"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-24 15:58:47"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 64\r\nORDER BY class, ordr","timestamp":"2025-10-24 15:58:47"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 15:58:47"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 15:58:47"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:58:47"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":46.761079,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:58:47"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:47"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 15:58:47"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (90ms)","timestamp":"2025-10-24 15:58:47"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 15:58:47"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":50.500394,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 15:58:47"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 15:58:47"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 15:58:47"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (95ms)","timestamp":"2025-10-24 15:58:47"}
{"body":{"values":{"0":{"paramName":"xrefID","paramVal":77}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 16:05:08"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 16:05:08"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 16:05:08"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 16:05:08"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 16:05:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":66.796303,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 16:05:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 16:05:08"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 16:05:08"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 16:05:08"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 16:05:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":30.884214,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 16:05:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 16:05:08"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 16:05:08"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 16:05:08"}
{"body":{"values":{"0":{"paramName":"xrefID","paramVal":77}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 16:05:08"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 16:05:08"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 16:05:08"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 16:05:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":134.898951,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 16:05:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 16:05:08"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 16:05:08"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (236ms)","timestamp":"2025-10-24 16:05:08"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":77}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 16:05:08"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 16:05:08"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 16:05:08"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 16:05:08"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 16:05:08"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":77}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 16:05:08"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 16:05:08"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 16:05:08"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 16:05:08"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 16:05:08"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 16:05:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.616313,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 16:05:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 16:05:08"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 16:05:08"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 16:05:08"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 16:05:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":41.974622,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 77...","timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 77 \r\nAND active = 1","timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 16:05:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 16:05:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":40.917482,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 77...","timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 77\r\nORDER BY class, ordr","timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 16:05:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 16:05:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.162584,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 16:05:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 16:05:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":30.405041,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 16:05:09"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 16:05:09"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (74ms)","timestamp":"2025-10-24 16:05:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 16:05:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":62.461705,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 16:05:09"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 16:05:09"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (105ms)","timestamp":"2025-10-24 16:05:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":144.560896,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 16:05:09"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (216ms)","timestamp":"2025-10-24 16:05:09"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":77}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 16:05:09"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 16:05:09"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":77}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 16:05:09"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 16:05:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 16:05:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.333087,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 77...","timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 77 \r\nAND active = 1","timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 16:05:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 16:05:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":32.330818,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 77...","timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 77\r\nORDER BY class, ordr","timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 16:05:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 16:05:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":31.07671,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 16:05:09"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 16:05:09"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (66ms)","timestamp":"2025-10-24 16:05:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 16:05:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":30.754601,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 16:05:09"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 16:05:09"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (65ms)","timestamp":"2025-10-24 16:05:09"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-24 16:52:54"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-24 17:53:26"}
{"body":{"data":{"from_agent":"claude","message":"# {pageName} Template Cloning Wizard\n\n## Purpose\n\nProvide a guided UI for cloning the {pageName} template to create new CRUD pages with proper configuration.\n\n## Required Inputs\n\n### 1. Page Name (pageName)\n- Format: lowercase with underscores\n- Example: `ingredient_types`\n- Used for: Component names, route paths, event names\n- Replaces all `{pageName}` placeholders\n\n### 2. Page Title (pageTitle)\n- Format: Human-readable display name\n- Example: `Ingredient Types Management`\n- Sets: Page component title, H3 display text\n- Used for: UI display, page headers\n\n### 3. Table Name (tableName)\n- Format: schema.table_name\n- Example: `whatsfresh.ingredient_types`\n- Sets: Page props.tableName\n- Used for: All CRUD operations (INSERT, UPDATE, DELETE)\n\n### 4. Parent App (appName)\n- Pre-selected from dropdown\n- Example: `admin`, `whatsfresh`\n- Used for: Route generation, component hierarchy\n\n## Auto-Generated Values\n\n### Route Path\n- Pattern: `/{appName}/{pageName}`\n- Example: `/admin/ingredient_types`\n- Automatically set based on app + page name\n\n## Cloning Process\n\n1. **Validate inputs** - Check for duplicates, valid format\n2. **Generate new IDs** - Get next available component IDs\n3. **Clone components** - Copy template components (64-69, 77)\n4. **Replace placeholders:**\n   - `{pageName}` → actual pageName in all comp_names\n   - `{tableName}` → actual tableName in props\n   - `{appName}` → actual appName in descriptions\n5. **Set titles:**\n   - Page component title → pageTitle\n   - H3 text prop → pageTitle\n6. **Update relationships:**\n   - Set parent_id to target app\n   - Update all child parent_id references\n7. **Clone props and triggers** - Copy from template with new xref_ids\n8. **Set table name** - Page props.tableName → tableName value\n\n## Template Components to Clone\n\n- **64**: Page (parent)\n- **65**: Container\n- **77**: H3 Title\n- **66**: AddNew Button\n- **67**: Grid (with rowActions)\n- **68**: Form\n- **69**: Submit Button\n\n## UI Wireframe\n\n```\n┌─────────────────────────────────────────┐\n│  Clone {pageName} Template              │\n├─────────────────────────────────────────┤\n│                                         │\n│  App*:         [admin ▼]                │\n│                                         │\n│  Page Name*:   [_______________]        │\n│                (lowercase_underscores)  │\n│                                         │\n│  Page Title*:  [_______________]        │\n│                (Display Name)           │\n│                                         │\n│  Table Name*:  [_______________]        │\n│                (schema.table)           │\n│                                         │\n│  Route:        /admin/page_name         │\n│                (auto-generated)         │\n│                                         │\n│  [Cancel]  [Clone Template]             │\n└─────────────────────────────────────────┘\n```\n\n## Implementation Phases\n\n### Phase 1: Backend Cloning Workflow\n- Create server-side workflow for template cloning\n- Handle ID generation, placeholder replacement\n- Copy all related records (props, triggers)\n\n### Phase 2: Studio UI\n- Build cloning wizard form\n- Validation and error handling\n- Success confirmation and navigation\n\n### Phase 3: Testing\n- Verify CRUD operations work on cloned pages\n- Test with multiple apps and tables\n- Validate all placeholders replaced\n\n## Prerequisites\n\n✅ {pageName} template must be complete and tested:\n- INSERT working (AddNew button)\n- UPDATE working (Grid selection + Form)\n- DELETE working (Grid rowActions)\n- All triggers properly configured\n- Page props (tableName) working\n- Text components (H3 title) rendering\n\nOnce template is rock-solid, cloning can begin.","plan_id":45,"subject":"{pageName} Template Cloning Architecture","to_agent":"any","type":"architecture"},"method":"INSERT","table":"api_wf.plan_communications"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 18:10:03"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 18:10:03"}
{"data":{"from_agent":"claude","message":"# {pageName} Template Cloning Wizard\n\n## Purpose\n\nProvide a guided UI for cloning the {pageName} template to create new CRUD pages with proper configuration.\n\n## Required Inputs\n\n### 1. Page Name (pageName)\n- Format: lowercase with underscores\n- Example: `ingredient_types`\n- Used for: Component names, route paths, event names\n- Replaces all `{pageName}` placeholders\n\n### 2. Page Title (pageTitle)\n- Format: Human-readable display name\n- Example: `Ingredient Types Management`\n- Sets: Page component title, H3 display text\n- Used for: UI display, page headers\n\n### 3. Table Name (tableName)\n- Format: schema.table_name\n- Example: `whatsfresh.ingredient_types`\n- Sets: Page props.tableName\n- Used for: All CRUD operations (INSERT, UPDATE, DELETE)\n\n### 4. Parent App (appName)\n- Pre-selected from dropdown\n- Example: `admin`, `whatsfresh`\n- Used for: Route generation, component hierarchy\n\n## Auto-Generated Values\n\n### Route Path\n- Pattern: `/{appName}/{pageName}`\n- Example: `/admin/ingredient_types`\n- Automatically set based on app + page name\n\n## Cloning Process\n\n1. **Validate inputs** - Check for duplicates, valid format\n2. **Generate new IDs** - Get next available component IDs\n3. **Clone components** - Copy template components (64-69, 77)\n4. **Replace placeholders:**\n   - `{pageName}` → actual pageName in all comp_names\n   - `{tableName}` → actual tableName in props\n   - `{appName}` → actual appName in descriptions\n5. **Set titles:**\n   - Page component title → pageTitle\n   - H3 text prop → pageTitle\n6. **Update relationships:**\n   - Set parent_id to target app\n   - Update all child parent_id references\n7. **Clone props and triggers** - Copy from template with new xref_ids\n8. **Set table name** - Page props.tableName → tableName value\n\n## Template Components to Clone\n\n- **64**: Page (parent)\n- **65**: Container\n- **77**: H3 Title\n- **66**: AddNew Button\n- **67**: Grid (with rowActions)\n- **68**: Form\n- **69**: Submit Button\n\n## UI Wireframe\n\n```\n┌─────────────────────────────────────────┐\n│  Clone {pageName} Template              │\n├─────────────────────────────────────────┤\n│                                         │\n│  App*:         [admin ▼]                │\n│                                         │\n│  Page Name*:   [_______________]        │\n│                (lowercase_underscores)  │\n│                                         │\n│  Page Title*:  [_______________]        │\n│                (Display Name)           │\n│                                         │\n│  Table Name*:  [_______________]        │\n│                (schema.table)           │\n│                                         │\n│  Route:        /admin/page_name         │\n│                (auto-generated)         │\n│                                         │\n│  [Cancel]  [Clone Template]             │\n└─────────────────────────────────────────┘\n```\n\n## Implementation Phases\n\n### Phase 1: Backend Cloning Workflow\n- Create server-side workflow for template cloning\n- Handle ID generation, placeholder replacement\n- Copy all related records (props, triggers)\n\n### Phase 2: Studio UI\n- Build cloning wizard form\n- Validation and error handling\n- Success confirmation and navigation\n\n### Phase 3: Testing\n- Verify CRUD operations work on cloned pages\n- Test with multiple apps and tables\n- Validate all placeholders replaced\n\n## Prerequisites\n\n✅ {pageName} template must be complete and tested:\n- INSERT working (AddNew button)\n- UPDATE working (Grid selection + Form)\n- DELETE working (Grid rowActions)\n- All triggers properly configured\n- Page props (tableName) working\n- Text components (H3 title) rendering\n\nOnce template is rock-solid, cloning can begin.","plan_id":45,"subject":"{pageName} Template Cloning Architecture","to_agent":"any","type":"architecture"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.plan_communications","timestamp":"2025-10-24 18:10:03"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:10:03"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:10:03"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:10:03"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":93.700356,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:10:03"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:10:03"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:10:03"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:10:03"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:10:03"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":61.122954,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:10:03"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:10:03"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.plan_communications (plan_id, from_agent, to_agent, type, subject, message, created_at, created_by) VALUES (45, 'claude', 'any', 'architecture', '{pageName} Template Cloning Architecture', '# {pageName} Template Cloning Wizard\n\n## Purpose\n\nProvide a guided UI for cloning the {pageName} template to create new CRUD pages with proper configuration.\n\n## Required Inputs\n\n### 1. Page Name (pageName)\n- Format: lowercase with underscores\n- Example: `ingredient_types`\n- Used for: Component names, route paths, event names\n- Replaces all `{pageName}` placeholders\n\n### 2. Page Title (pageTitle)\n- Format: Human-readable display name\n- Example: `Ingredient Types Management`\n- Sets: Page component title, H3 display text\n- Used for: UI display, page headers\n\n### 3. Table Name (tableName)\n- Format: schema.table_name\n- Example: `whatsfresh.ingredient_types`\n- Sets: Page props.tableName\n- Used for: All CRUD operations (INSERT, UPDATE, DELETE)\n\n### 4. Parent App (appName)\n- Pre-selected from dropdown\n- Example: `admin`, `whatsfresh`\n- Used for: Route generation, component hierarchy\n\n## Auto-Generated Values\n\n### Route Path\n- Pattern: `/{appName}/{pageName}`\n- Example: `/admin/ingredient_types`\n- Automatically set based on app + page name\n\n## Cloning Process\n\n1. **Validate inputs** - Check for duplicates, valid format\n2. **Generate new IDs** - Get next available component IDs\n3. **Clone components** - Copy template components (64-69, 77)\n4. **Replace placeholders:**\n   - `{pageName}` → actual pageName in all comp_names\n   - `{tableName}` → actual tableName in props\n   - `{appName}` → actual appName in descriptions\n5. **Set titles:**\n   - Page component title → pageTitle\n   - H3 text prop → pageTitle\n6. **Update relationships:**\n   - Set parent_id to target app\n   - Update all child parent_id references\n7. **Clone props and triggers** - Copy from template with new xref_ids\n8. **Set table name** - Page props.tableName → tableName value\n\n## Template Components to Clone\n\n- **64**: Page (parent)\n- **65**: Container\n- **77**: H3 Title\n- **66**: AddNew Button\n- **67**: Grid (with rowActions)\n- **68**: Form\n- **69**: Submit Button\n\n## UI Wireframe\n\n```\n┌─────────────────────────────────────────┐\n│  Clone {pageName} Template              │\n├─────────────────────────────────────────┤\n│                                         │\n│  App*:         [admin ▼]                │\n│                                         │\n│  Page Name*:   [_______________]        │\n│                (lowercase_underscores)  │\n│                                         │\n│  Page Title*:  [_______________]        │\n│                (Display Name)           │\n│                                         │\n│  Table Name*:  [_______________]        │\n│                (schema.table)           │\n│                                         │\n│  Route:        /admin/page_name         │\n│                (auto-generated)         │\n│                                         │\n│  [Cancel]  [Clone Template]             │\n└─────────────────────────────────────────┘\n```\n\n## Implementation Phases\n\n### Phase 1: Backend Cloning Workflow\n- Create server-side workflow for template cloning\n- Handle ID generation, placeholder replacement\n- Copy all related records (props, triggers)\n\n### Phase 2: Studio UI\n- Build cloning wizard form\n- Validation and error handling\n- Success confirmation and navigation\n\n### Phase 3: Testing\n- Verify CRUD operations work on cloned pages\n- Test with multiple apps and tables\n- Validate all placeholders replaced\n\n## Prerequisites\n\n✅ {pageName} template must be complete and tested:\n- INSERT working (AddNew button)\n- UPDATE working (Grid selection + Form)\n- DELETE working (Grid rowActions)\n- All triggers properly configured\n- Page props (tableName) working\n- Text components (H3 title) rendering\n\nOnce template is rock-solid, cloning can begin.', NOW(), 'Paul')","timestamp":"2025-10-24 18:10:03"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:10:03"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:10:03"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":345.428801,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:10:04"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:10:04"}
{"level":"info","message":"[dmlProcessor.js] INSERT executed successfully on api_wf.plan_communications","timestamp":"2025-10-24 18:10:04"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-24 18:10:04"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (503ms)","timestamp":"2025-10-24 18:10:04"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":502.749695,"method":"POST","operation":"http_request","path":"/api/execDML","status":200},"timestamp":"2025-10-24 18:10:04"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 18:11:11"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 18:11:11"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 18:11:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 25","timestamp":"2025-10-24 18:11:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":269.078039,"method":"GET","operation":"database_query","rowCount":25,"success":true},"timestamp":"2025-10-24 18:11:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:11"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 18:11:11"}
{"level":"info","message":"[getEventTypes.js] Fetched 25 eventTypes","timestamp":"2025-10-24 18:11:11"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (271ms)","timestamp":"2025-10-24 18:11:11"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 18:11:11"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 18:11:11"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 18:11:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:11"}
{"body":{"values":{"0":{"paramName":"tableName","paramVal":"{{pageConfig.props.tableName}}"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 18:11:11"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 18:11:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:11"}
{"body":{"values":{"0":{"paramName":"tableName","paramVal":"{{pageConfig.props.tableName}}"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 18:11:11"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 18:11:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:11:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":40.990688,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:11:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:11:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":40.256445,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:11:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 25","timestamp":"2025-10-24 18:11:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":116.998556,"method":"GET","operation":"database_query","rowCount":25,"success":true},"timestamp":"2025-10-24 18:11:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:11"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 18:11:11"}
{"level":"info","message":"[getEventTypes.js] Fetched 25 eventTypes","timestamp":"2025-10-24 18:11:11"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (119ms)","timestamp":"2025-10-24 18:11:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:11:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":92.683749,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:11:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:11"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:11:11"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:11:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:11:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":92.587089,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:11:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:11"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:11:11"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:11:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":307.819044,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:11:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:12"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 18:11:12"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (444ms)","timestamp":"2025-10-24 18:11:12"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:11:12"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:11:12"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 18:11:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:11:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":31.156395,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:11:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:12"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:11:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":368.787314,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:11:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:12"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 18:11:12"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (505ms)","timestamp":"2025-10-24 18:11:12"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":504.710063,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 18:11:12"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:11:12"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:11:12"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 18:11:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:11:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":57.711014,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:11:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:12"}
{"level":"debug","message":"[execEventType.js] Resolved from context :acctID → 3","timestamp":"2025-10-24 18:11:12"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 18:11:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:11:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":47.82862,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:11:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:12"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:11:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:11:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":56.325503,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:11:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:12"}
{"level":"debug","message":"[execEventType.js] Resolved from context :acctID → 3","timestamp":"2025-10-24 18:11:12"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 18:11:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 18:11:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":59.187425,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 18:11:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:12"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:11:12"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (150ms)","timestamp":"2025-10-24 18:11:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 18:11:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":62.213518,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 18:11:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:12"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:11:12"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (168ms)","timestamp":"2025-10-24 18:11:12"}
{"body":{"eventSQLId":"eventTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:11:41"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: eventTypeList","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:41"}
{"body":{"eventSQLId":"qrySqlList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:11:41"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: qrySqlList","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:41"}
{"body":{"eventSQLId":"triggerList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:11:41"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: triggerList","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:11:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":259.197491,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: eventTypeList (ID: 9)","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name, category, title, style\r\nFROM api_wf.eventType\r\nORDER BY Hier, name","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:11:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":422.0292,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: qrySqlList (ID: 17)","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, qryName, qrySQL, description\r\nFROM api_wf.eventSQL\r\nWHERE active = 1\r\nORDER BY qryName","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:11:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":420.558129,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: triggerList (ID: 16)","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select a.id, a.trigType, content_type, a.is_dom_event, a.name, \r\na.description, a.example \r\nfrom    api_wf.triggers a \r\norder by a.trigType, name","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 25","timestamp":"2025-10-24 18:11:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":166.635514,"method":"GET","operation":"database_query","rowCount":25,"success":true},"timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:41"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: eventTypeList (ID: 9)","timestamp":"2025-10-24 18:11:41"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (428ms)","timestamp":"2025-10-24 18:11:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 30","timestamp":"2025-10-24 18:11:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":67.05712,"method":"GET","operation":"database_query","rowCount":30,"success":true},"timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:41"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: qrySqlList (ID: 17)","timestamp":"2025-10-24 18:11:41"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (491ms)","timestamp":"2025-10-24 18:11:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 23","timestamp":"2025-10-24 18:11:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":68.986739,"method":"GET","operation":"database_query","rowCount":23,"success":true},"timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:41"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: triggerList (ID: 16)","timestamp":"2025-10-24 18:11:41"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (491ms)","timestamp":"2025-10-24 18:11:41"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:11:41"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:41"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:11:41"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:11:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":106.608471,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 70\r\nAND   comp_type = 'App'\r\nAND   xref_id <> parent_id  -- exclude root.","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:11:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":105.18809,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 70\r\nAND   comp_type = 'App'\r\nAND   xref_id <> parent_id  -- exclude root.","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 18:11:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":47.845349,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:41"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-24 18:11:41"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (155ms)","timestamp":"2025-10-24 18:11:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 18:11:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":50.362611,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 18:11:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:41"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-24 18:11:41"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (159ms)","timestamp":"2025-10-24 18:11:41"}
{"body":{"impacts":{"0":{"affectedApps":{"0":"studio"},"changeType":"MODIFY","createdBy":"claude","description":"Fixed event handler builder call\n- Corrected parameters to pass workflowTriggers instead of full component\n- Fixed triggers.some error","filePath":"apps/studio/src/rendering/utils/textRenderer.js"}},"planId":45},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/logImpact","timestamp":"2025-10-24 18:11:49"}
{"level":"http","message":"[logImpact.js] POST /api/logImpact","timestamp":"2025-10-24 18:11:49"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:11:49"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:11:49"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":548.02176,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:11:49"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:49"}
{"level":"info","message":"[impactLogger.js] Logged 1 impacts","timestamp":"2025-10-24 18:11:49"}
{"level":"info","message":"[logImpact.js] Impact logging completed successfully","timestamp":"2025-10-24 18:11:49"}
{"level":"info","message":"[app.js]  Response: POST /api/logImpact 200 (550ms)","timestamp":"2025-10-24 18:11:49"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":549.642053,"method":"POST","operation":"http_request","path":"/api/logImpact","status":200},"timestamp":"2025-10-24 18:11:49"}
{"body":{"eventSQLId":"eventTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:11:56"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: eventTypeList","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:56"}
{"body":{"eventSQLId":"qrySqlList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:11:56"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: qrySqlList","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:56"}
{"body":{"eventSQLId":"triggerList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:11:56"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: triggerList","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:11:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.847193,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: qrySqlList (ID: 17)","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, qryName, qrySQL, description\r\nFROM api_wf.eventSQL\r\nWHERE active = 1\r\nORDER BY qryName","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:11:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.179602,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: triggerList (ID: 16)","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select a.id, a.trigType, content_type, a.is_dom_event, a.name, \r\na.description, a.example \r\nfrom    api_wf.triggers a \r\norder by a.trigType, name","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:11:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":55.126057,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: eventTypeList (ID: 9)","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name, category, title, style\r\nFROM api_wf.eventType\r\nORDER BY Hier, name","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 30","timestamp":"2025-10-24 18:11:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.18828,"method":"GET","operation":"database_query","rowCount":30,"success":true},"timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:56"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: qrySqlList (ID: 17)","timestamp":"2025-10-24 18:11:56"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (72ms)","timestamp":"2025-10-24 18:11:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 23","timestamp":"2025-10-24 18:11:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":40.642065,"method":"GET","operation":"database_query","rowCount":23,"success":true},"timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:56"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: triggerList (ID: 16)","timestamp":"2025-10-24 18:11:56"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (79ms)","timestamp":"2025-10-24 18:11:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 25","timestamp":"2025-10-24 18:11:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.551985,"method":"GET","operation":"database_query","rowCount":25,"success":true},"timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:56"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: eventTypeList (ID: 9)","timestamp":"2025-10-24 18:11:56"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (93ms)","timestamp":"2025-10-24 18:11:56"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:11:56"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:56"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:11:56"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:11:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.741029,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 70\r\nAND   comp_type = 'App'\r\nAND   xref_id <> parent_id  -- exclude root.","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:11:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.776125,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 70\r\nAND   comp_type = 'App'\r\nAND   xref_id <> parent_id  -- exclude root.","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:11:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 18:11:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":41.446054,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:56"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-24 18:11:56"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (81ms)","timestamp":"2025-10-24 18:11:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 18:11:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":39.193165,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 18:11:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:11:56"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-24 18:11:56"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (78ms)","timestamp":"2025-10-24 18:11:56"}
{"body":{"data":{"action":"refresh","class":"onLoad","content":"\"{pageName}Grid\"","id":61,"ordr":2,"xref_id":64},"method":"UPDATE","primaryKey":"id","table":"api_wf.eventTrigger"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 18:12:02"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 18:12:02"}
{"data":{"action":"refresh","class":"onLoad","content":"\"{pageName}Grid\"","id":61,"ordr":2,"xref_id":64},"level":"debug","message":"[dmlProcessor.js] Processing UPDATE on api_wf.eventTrigger","primaryKey":"id","timestamp":"2025-10-24 18:12:02"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:02"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:02"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":48.85673,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:02"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:02"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:02"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":30.275886,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:02"}
{"level":"info","message":"[dmlProcessor.js] Executing UPDATE SQL:","sql":"UPDATE api_wf.eventTrigger SET xref_id = 64, class = 'onLoad', action = 'refresh', ordr = 2, content = '\"{pageName}Grid\"', updated_at = NOW(), updated_by = 'Paul' WHERE id = 61","timestamp":"2025-10-24 18:12:02"}
{"level":"debug","message":"[dbUtils.js] Executing PATCH query: ********","timestamp":"2025-10-24 18:12:02"}
{"level":"debug","message":"[dbUtils.js] Handling PATCH-specific logic","timestamp":"2025-10-24 18:12:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":438.189592,"method":"PATCH","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:12:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:02"}
{"level":"info","message":"[dmlProcessor.js] UPDATE executed successfully on api_wf.eventTrigger","timestamp":"2025-10-24 18:12:02"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-24 18:12:02"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (519ms)","timestamp":"2025-10-24 18:12:02"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":518.97545,"method":"POST","operation":"http_request","path":"/api/execDML","status":200},"timestamp":"2025-10-24 18:12:02"}
{"body":{"data":{"action":"setVals","class":"onLoad","content":"[\n    {\"tableName\": \"{{pageConfig.props.tableName}}\"}\n]","ordr":1,"xref_id":64},"method":"INSERT","table":"api_wf.eventTrigger"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 18:12:02"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 18:12:02"}
{"data":{"action":"setVals","class":"onLoad","content":"[\n    {\"tableName\": \"{{pageConfig.props.tableName}}\"}\n]","ordr":1,"xref_id":64},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.eventTrigger","timestamp":"2025-10-24 18:12:02"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:02"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:02"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":68.726508,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:02"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:02"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:02"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:03"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":172.643028,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:03"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:03"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.eventTrigger (xref_id, class, action, ordr, content, created_at, created_by) VALUES (64, 'onLoad', 'setVals', 1, '[\n    {\"tableName\": \"{{pageConfig.props.tableName}}\"}\n]', NOW(), 'Paul')","timestamp":"2025-10-24 18:12:03"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:12:03"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:12:03"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":309.807744,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:12:03"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:03"}
{"level":"info","message":"[dmlProcessor.js] INSERT executed successfully on api_wf.eventTrigger","timestamp":"2025-10-24 18:12:03"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-10-24 18:12:03"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (554ms)","timestamp":"2025-10-24 18:12:03"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":553.8551,"method":"POST","operation":"http_request","path":"/api/execDML","status":200},"timestamp":"2025-10-24 18:12:03"}
{"body":{"values":{"0":{"paramName":"appID","paramVal":"51"},"1":{"paramName":"appName","paramVal":"admin"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 18:12:03"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 18:12:03"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:03"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:03"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:03"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.739111,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:03"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:03"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:03"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:03"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:03"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":242.935209,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:03"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:03"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:12:03"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:12:03"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":278.481747,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:12:03"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:03"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:12:03"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:12:03"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":233.262207,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:12:04"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:04"}
{"level":"debug","message":"[setVals.js] Set 2 values for pc7900@gmail.com","timestamp":"2025-10-24 18:12:04"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (792ms)","timestamp":"2025-10-24 18:12:04"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":791.651396,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 18:12:04"}
{"body":{"eventSQLId":"pageList","params":{"appID":"51"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:12:04"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:12:04"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: pageList","timestamp":"2025-10-24 18:12:04"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:04"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:04"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":45.173588,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:04"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:04"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: pageList (ID: 2)","timestamp":"2025-10-24 18:12:04"}
{"level":"debug","message":"[execEventType.js] Using passed param :appID → 51...","timestamp":"2025-10-24 18:12:04"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT xref_id, comp_name\r\nFROM api_wf.vw_hier_components vhc \r\nWHERE parent_id = 51\r\nAND   comp_type in ('Page','CRUD')","timestamp":"2025-10-24 18:12:04"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:04"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:04"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":46.018125,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:04"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:04"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: pageList (ID: 2)","timestamp":"2025-10-24 18:12:04"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (94ms)","timestamp":"2025-10-24 18:12:04"}
{"body":{"values":{"0":{"paramName":"pageID","paramVal":"64"},"1":{"paramName":"pageName","paramVal":"{pageName}"},"2":{"paramName":"xrefID","paramVal":"64"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 18:12:08"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 18:12:08"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:08"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:08"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":39.745046,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:08"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:08"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:08"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":282.855943,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:08"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:12:08"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:12:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":343.860321,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:12:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:08"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:12:08"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:12:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":676.242742,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:12:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:09"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:12:09"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:12:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":349.17741,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:12:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:09"}
{"level":"debug","message":"[setVals.js] Set 3 values for pc7900@gmail.com","timestamp":"2025-10-24 18:12:09"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (1697ms)","timestamp":"2025-10-24 18:12:09"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1697.345771,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 18:12:09"}
{"body":{"eventSQLId":"xrefHierarchy","params":{"xrefID":"64"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:12:09"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:12:09"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefHierarchy","timestamp":"2025-10-24 18:12:09"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:09"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.657078,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:09"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefHierarchy (ID: 3)","timestamp":"2025-10-24 18:12:09"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-24 18:12:09"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_structure(64)","timestamp":"2025-10-24 18:12:09"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:09"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-24 18:12:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":74.923204,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:12:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:09"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefHierarchy (ID: 3)","timestamp":"2025-10-24 18:12:09"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (111ms)","timestamp":"2025-10-24 18:12:09"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":51}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:12:09"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:12:09"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 18:12:09"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:09"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":318.687788,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 51...","timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 51 \r\nAND active = 1","timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 18:12:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.161246,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:10"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 18:12:10"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (355ms)","timestamp":"2025-10-24 18:12:10"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":51}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:12:10"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":136.894412,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 51...","timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 51\r\nORDER BY class, ordr","timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":58.290094,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:10"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 18:12:10"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (197ms)","timestamp":"2025-10-24 18:12:10"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:12:10"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":200.042711,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 64 \r\nAND active = 1","timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-24 18:12:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":48.227156,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:10"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 18:12:10"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (250ms)","timestamp":"2025-10-24 18:12:10"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":64}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:12:10"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.457261,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 64...","timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 64\r\nORDER BY class, ordr","timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-24 18:12:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":264.260246,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:11"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 18:12:11"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (302ms)","timestamp":"2025-10-24 18:12:11"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":65}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:12:11"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.199695,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 65...","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 65 \r\nAND active = 1","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 18:12:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":248.408549,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:11"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 18:12:11"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (293ms)","timestamp":"2025-10-24 18:12:11"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":65}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:12:11"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.274931,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 65...","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 65\r\nORDER BY class, ordr","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 18:12:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":259.616508,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:11"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 18:12:11"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (298ms)","timestamp":"2025-10-24 18:12:11"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":77}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:12:11"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.56244,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 77...","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 77 \r\nAND active = 1","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 18:12:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":82.239008,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:11"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 18:12:11"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (119ms)","timestamp":"2025-10-24 18:12:11"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":77}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:12:11"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":70.632072,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 77...","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 77\r\nORDER BY class, ordr","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 18:12:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.542727,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:11"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 18:12:11"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (109ms)","timestamp":"2025-10-24 18:12:11"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":66}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:12:11"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":163.499394,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 66...","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 66 \r\nAND active = 1","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":85.776874,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:12"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 18:12:12"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (251ms)","timestamp":"2025-10-24 18:12:12"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":66}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:12:12"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.107513,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 66...","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 66\r\nORDER BY class, ordr","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 18:12:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.070148,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:12"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 18:12:12"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (81ms)","timestamp":"2025-10-24 18:12:12"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:12:12"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":309.521822,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 67 \r\nAND active = 1","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 4","timestamp":"2025-10-24 18:12:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":31.635244,"method":"GET","operation":"database_query","rowCount":4,"success":true},"timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:12"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 18:12:12"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (343ms)","timestamp":"2025-10-24 18:12:12"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":67}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:12:12"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":153.910624,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 67...","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 67\r\nORDER BY class, ordr","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 18:12:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":43.691526,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:12"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 18:12:12"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (200ms)","timestamp":"2025-10-24 18:12:12"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":68}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:12:12"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":255.318454,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:13"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 18:12:13"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 68...","timestamp":"2025-10-24 18:12:13"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 68 \r\nAND active = 1","timestamp":"2025-10-24 18:12:13"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:13"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-24 18:12:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":408.630102,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:12:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:13"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 18:12:13"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (666ms)","timestamp":"2025-10-24 18:12:13"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":665.655907,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-24 18:12:13"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":68}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:12:13"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:12:13"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 18:12:13"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:13"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":47.841378,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:13"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 18:12:13"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 68...","timestamp":"2025-10-24 18:12:13"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 68\r\nORDER BY class, ordr","timestamp":"2025-10-24 18:12:13"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:13"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":211.088127,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:13"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 18:12:13"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (261ms)","timestamp":"2025-10-24 18:12:13"}
{"body":{"eventSQLId":"xrefPropList","params":{"xrefID":69}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:12:13"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:12:13"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefPropList","timestamp":"2025-10-24 18:12:13"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:13"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":46.196952,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:13"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefPropList (ID: 7)","timestamp":"2025-10-24 18:12:13"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 69...","timestamp":"2025-10-24 18:12:13"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, paramName, paramVal \r\nFROM api_wf.eventProps \r\nWHERE xref_id = 69 \r\nAND active = 1","timestamp":"2025-10-24 18:12:13"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:13"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 18:12:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.365057,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 18:12:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:13"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefPropList (ID: 7)","timestamp":"2025-10-24 18:12:13"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (86ms)","timestamp":"2025-10-24 18:12:13"}
{"body":{"eventSQLId":"xrefTriggerList","params":{"xrefID":69}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:12:13"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:12:13"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: xrefTriggerList","timestamp":"2025-10-24 18:12:13"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:13"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:14"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":199.585991,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:14"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:14"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 18:12:14"}
{"level":"debug","message":"[execEventType.js] Using passed param :xrefID → 69...","timestamp":"2025-10-24 18:12:14"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, xref_id, class, action, ordr, content\r\nFROM api_wf.eventTrigger\r\nWHERE xref_id = 69\r\nORDER BY class, ordr","timestamp":"2025-10-24 18:12:14"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:14"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:14"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 3","timestamp":"2025-10-24 18:12:14"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":85.062777,"method":"GET","operation":"database_query","rowCount":3,"success":true},"timestamp":"2025-10-24 18:12:14"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:14"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: xrefTriggerList (ID: 6)","timestamp":"2025-10-24 18:12:14"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (288ms)","timestamp":"2025-10-24 18:12:14"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 18:12:22"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 18:12:22"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 18:12:22"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:22"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:22"}
{"body":{"values":{"0":{"paramName":"tableName","paramVal":"{{pageConfig.props.tableName}}"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 18:12:22"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 18:12:22"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:22"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:22"}
{"body":{"values":{"0":{"paramName":"tableName","paramVal":"{{pageConfig.props.tableName}}"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 18:12:22"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 18:12:22"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:22"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:22"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:22"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":316.365208,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:22"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:22"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:22"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:22"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:22"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":314.948452,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:22"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:22"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:22"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:22"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 25","timestamp":"2025-10-24 18:12:22"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":360.408165,"method":"GET","operation":"database_query","rowCount":25,"success":true},"timestamp":"2025-10-24 18:12:22"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:22"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 18:12:22"}
{"level":"info","message":"[getEventTypes.js] Fetched 25 eventTypes","timestamp":"2025-10-24 18:12:22"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (363ms)","timestamp":"2025-10-24 18:12:22"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:22"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":41.015878,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:22"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:22"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:12:22"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:12:22"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:22"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":41.97169,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:22"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:22"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:12:22"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:12:22"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 18:12:22"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 18:12:22"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 18:12:22"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:22"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:22"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 25","timestamp":"2025-10-24 18:12:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":356.128942,"method":"GET","operation":"database_query","rowCount":25,"success":true},"timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:23"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 18:12:23"}
{"level":"info","message":"[getEventTypes.js] Fetched 25 eventTypes","timestamp":"2025-10-24 18:12:23"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (359ms)","timestamp":"2025-10-24 18:12:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":400.71467,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 18:12:23"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (761ms)","timestamp":"2025-10-24 18:12:23"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":760.824386,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 18:12:23"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:12:23"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":443.115282,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 18:12:23"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (803ms)","timestamp":"2025-10-24 18:12:23"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":803.220171,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 18:12:23"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:12:23"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:23"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.477971,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:23"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":54.550446,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:23"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":43.183208,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[execEventType.js] Resolved from context :acctID → 3","timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:23"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":62.870557,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[execEventType.js] Resolved from context :acctID → 3","timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:23"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 18:12:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":63.742179,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:23"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:12:23"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (144ms)","timestamp":"2025-10-24 18:12:23"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 18:12:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":39.039022,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 18:12:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:23"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:12:23"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (159ms)","timestamp":"2025-10-24 18:12:23"}
{"body":{"values":{"0":{"paramName":"selectedID","paramVal":null}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 18:12:24"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 18:12:24"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:24"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:24"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:24"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.084905,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:24"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:24"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:24"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:24"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:24"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":45.391181,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:24"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:24"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:12:24"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:12:24"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":104.467545,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:12:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:25"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 18:12:25"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (185ms)","timestamp":"2025-10-24 18:12:25"}
{"body":{"eventSQLId":"{pageName}Dtl","params":{"formData":null}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:12:25"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:12:25"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}Dtl","timestamp":"2025-10-24 18:12:25"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:25"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:25"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:25"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.690034,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:25"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}Dtl (ID: 23)","timestamp":"2025-10-24 18:12:25"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:25"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:25"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:12:25"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":52.939688,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:12:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:25"}
{"level":"debug","message":"[execEventType.js] Resolved from context :selectedID → 'null'","timestamp":"2025-10-24 18:12:25"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select \r\n\tid, \r\n\tname,\r\n\tdescription,\r\n\taccount_id\r\nfrom whatsfresh.ingredient_types\r\nwhere id = 'null'","timestamp":"2025-10-24 18:12:25"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:12:25"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:12:25"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 18:12:25"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":44.448241,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 18:12:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:12:25"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}Dtl (ID: 23)","timestamp":"2025-10-24 18:12:25"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (135ms)","timestamp":"2025-10-24 18:12:25"}
{"body":{"values":{"0":{"paramName":"dmlData","paramVal":{"description":"Test Description","name":"Test Type"}}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 18:13:11"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 18:13:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:13:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:13:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:13:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.046898,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:13:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:13:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:13:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:13:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:13:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":87.399665,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:13:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:13:11"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:13:11"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:13:11"}
{"body":{"values":{"0":{"paramName":"dmlData","paramVal":{"description":"Test Description","name":"Test Type"}}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 18:13:12"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 18:13:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:13:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:13:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":926.466653,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:13:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:13:12"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 18:13:12"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (1059ms)","timestamp":"2025-10-24 18:13:12"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1058.720585,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 18:13:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:13:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":60.893898,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:13:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:13:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:13:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:13:12"}
{"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 18:13:12"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 18:13:12"}
{"level":"debug","message":"[dmlProcessor.js] Processing undefined on undefined","timestamp":"2025-10-24 18:13:12"}
{"code":"MISSING_REQUIRED_FIELDS","level":"error","message":"[execDML.js] DML operation failed: method, table, and data are required","stack":"Error: method, table, and data are required\n    at processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:42:19)\n    at execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:30)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:157:13)\n    at Route.dispatch (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:117:3)\n    at handle (/home/paul/wf-monorepo-new/node_modules/router/index.js:435:11)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at /home/paul/wf-monorepo-new/node_modules/router/index.js:295:15\n    at processParams (/home/paul/wf-monorepo-new/node_modules/router/index.js:582:12)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/index.js:291:5)","status":400,"timestamp":"2025-10-24 18:13:12"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 400 (6ms)","timestamp":"2025-10-24 18:13:12"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":6.497722,"method":"POST","operation":"http_request","path":"/api/execDML","status":400},"timestamp":"2025-10-24 18:13:12"}
{"body":{"eventSQLId":"{pageName}List","params":{"formData":{"description":"Test Description","name":"Test Type"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:13:12"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:13:12"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 18:13:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:13:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:13:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:13:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":342.201897,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:13:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:13:13"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:13:13"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:13:13"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:13:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:13:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":377.500515,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:13:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:13:13"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:13:13"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:13:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:13:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":44.142013,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:13:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:13:13"}
{"level":"debug","message":"[execEventType.js] Resolved from context :acctID → 3","timestamp":"2025-10-24 18:13:13"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 18:13:13"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:13:13"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:13:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 18:13:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":81.929169,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 18:13:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:13:13"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:13:13"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (472ms)","timestamp":"2025-10-24 18:13:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":216.378446,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:13:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:13:13"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 18:13:13"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (659ms)","timestamp":"2025-10-24 18:13:13"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":658.844062,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 18:13:13"}
{"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 18:13:13"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 18:13:13"}
{"level":"debug","message":"[dmlProcessor.js] Processing undefined on undefined","timestamp":"2025-10-24 18:13:13"}
{"code":"MISSING_REQUIRED_FIELDS","level":"error","message":"[execDML.js] DML operation failed: method, table, and data are required","stack":"Error: method, table, and data are required\n    at processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:42:19)\n    at execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:30)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:157:13)\n    at Route.dispatch (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:117:3)\n    at handle (/home/paul/wf-monorepo-new/node_modules/router/index.js:435:11)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at /home/paul/wf-monorepo-new/node_modules/router/index.js:295:15\n    at processParams (/home/paul/wf-monorepo-new/node_modules/router/index.js:582:12)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/index.js:291:5)","status":400,"timestamp":"2025-10-24 18:13:13"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 400 (2ms)","timestamp":"2025-10-24 18:13:13"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.917874,"method":"POST","operation":"http_request","path":"/api/execDML","status":400},"timestamp":"2025-10-24 18:13:13"}
{"body":{"eventSQLId":"{pageName}List","params":{"formData":{"description":"Test Description","name":"Test Type"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:13:13"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:13:13"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 18:13:13"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:13:13"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:13:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:13:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":397.536968,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:13:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:13:13"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:13:13"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:13:13"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:13:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:13:14"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":233.632186,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:13:14"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:13:14"}
{"level":"debug","message":"[execEventType.js] Resolved from context :acctID → 3","timestamp":"2025-10-24 18:13:14"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 18:13:14"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:13:14"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:13:14"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 18:13:14"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":310.624979,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 18:13:14"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:13:14"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:13:14"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (946ms)","timestamp":"2025-10-24 18:13:14"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":946.431469,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-24 18:13:14"}
{"body":{"values":{"0":{"paramName":"selectedID","paramVal":17}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 18:13:26"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 18:13:26"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:13:26"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:13:26"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:13:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":50.995698,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:13:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:13:26"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:13:26"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:13:26"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:13:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":71.889092,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:13:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:13:26"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:13:26"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:13:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":328.636763,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:13:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:13:26"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 18:13:26"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (455ms)","timestamp":"2025-10-24 18:13:26"}
{"body":{"eventSQLId":"{pageName}Dtl","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:13:26"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:13:26"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}Dtl","timestamp":"2025-10-24 18:13:26"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:13:26"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:13:26"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:13:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":31.339622,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:13:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:13:26"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}Dtl (ID: 23)","timestamp":"2025-10-24 18:13:26"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:13:26"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:13:26"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:13:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.364796,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:13:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:13:26"}
{"level":"debug","message":"[execEventType.js] Resolved from context :selectedID → 17","timestamp":"2025-10-24 18:13:26"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select \r\n\tid, \r\n\tname,\r\n\tdescription,\r\n\taccount_id\r\nfrom whatsfresh.ingredient_types\r\nwhere id = 17","timestamp":"2025-10-24 18:13:26"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:13:26"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:13:26"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:13:27"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":313.333851,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:13:27"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:13:27"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}Dtl (ID: 23)","timestamp":"2025-10-24 18:13:27"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (382ms)","timestamp":"2025-10-24 18:13:27"}
{"body":{"values":{"0":{"paramName":"dmlData","paramVal":{"description":"Local Description","name":"Local"}}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 18:13:36"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 18:13:36"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:13:36"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:13:36"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:13:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":258.104085,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:13:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:13:36"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:13:36"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:13:36"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:13:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":45.565496,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:13:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:13:36"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:13:36"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:13:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":223.829411,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:13:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:13:36"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 18:13:36"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (532ms)","timestamp":"2025-10-24 18:13:36"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":531.55134,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 18:13:36"}
{"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 18:13:36"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 18:13:36"}
{"level":"debug","message":"[dmlProcessor.js] Processing undefined on undefined","timestamp":"2025-10-24 18:13:36"}
{"code":"MISSING_REQUIRED_FIELDS","level":"error","message":"[execDML.js] DML operation failed: method, table, and data are required","stack":"Error: method, table, and data are required\n    at processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:42:19)\n    at execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:30)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:157:13)\n    at Route.dispatch (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:117:3)\n    at handle (/home/paul/wf-monorepo-new/node_modules/router/index.js:435:11)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at /home/paul/wf-monorepo-new/node_modules/router/index.js:295:15\n    at processParams (/home/paul/wf-monorepo-new/node_modules/router/index.js:582:12)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/index.js:291:5)","status":400,"timestamp":"2025-10-24 18:13:36"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 400 (2ms)","timestamp":"2025-10-24 18:13:36"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.564125,"method":"POST","operation":"http_request","path":"/api/execDML","status":400},"timestamp":"2025-10-24 18:13:36"}
{"body":{"eventSQLId":"{pageName}List","params":{"formData":{"description":"Local Description","name":"Local"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:13:36"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:13:36"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 18:13:36"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:13:36"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:13:36"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:13:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":38.222298,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:13:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:13:36"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:13:36"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:13:36"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:13:36"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:13:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":31.820746,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:13:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:13:36"}
{"level":"debug","message":"[execEventType.js] Resolved from context :acctID → 3","timestamp":"2025-10-24 18:13:36"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 18:13:36"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:13:36"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:13:36"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 18:13:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":298.84978,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 18:13:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:13:37"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:13:37"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (371ms)","timestamp":"2025-10-24 18:13:37"}
{"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 18:13:56"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 18:13:56"}
{"level":"debug","message":"[dmlProcessor.js] Processing undefined on undefined","timestamp":"2025-10-24 18:13:56"}
{"code":"MISSING_REQUIRED_FIELDS","level":"error","message":"[execDML.js] DML operation failed: method, table, and data are required","stack":"Error: method, table, and data are required\n    at processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:42:19)\n    at execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:30)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:157:13)\n    at Route.dispatch (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:117:3)\n    at handle (/home/paul/wf-monorepo-new/node_modules/router/index.js:435:11)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at /home/paul/wf-monorepo-new/node_modules/router/index.js:295:15\n    at processParams (/home/paul/wf-monorepo-new/node_modules/router/index.js:582:12)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/index.js:291:5)","status":400,"timestamp":"2025-10-24 18:13:56"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 400 (2ms)","timestamp":"2025-10-24 18:13:56"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.928438,"method":"POST","operation":"http_request","path":"/api/execDML","status":400},"timestamp":"2025-10-24 18:13:56"}
{"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 18:14:44"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 18:14:44"}
{"level":"debug","message":"[dmlProcessor.js] Processing undefined on undefined","timestamp":"2025-10-24 18:14:44"}
{"code":"MISSING_REQUIRED_FIELDS","level":"error","message":"[execDML.js] DML operation failed: method, table, and data are required","stack":"Error: method, table, and data are required\n    at processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:42:19)\n    at execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:30)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:157:13)\n    at Route.dispatch (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:117:3)\n    at handle (/home/paul/wf-monorepo-new/node_modules/router/index.js:435:11)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at /home/paul/wf-monorepo-new/node_modules/router/index.js:295:15\n    at processParams (/home/paul/wf-monorepo-new/node_modules/router/index.js:582:12)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/index.js:291:5)","status":400,"timestamp":"2025-10-24 18:14:44"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 400 (3ms)","timestamp":"2025-10-24 18:14:44"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.665625,"method":"POST","operation":"http_request","path":"/api/execDML","status":400},"timestamp":"2025-10-24 18:14:44"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 18:16:11"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 18:16:11"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 18:16:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:16:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:16:11"}
{"body":{"values":{"0":{"paramName":"tableName","paramVal":"{{pageConfig.props.tableName}}"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 18:16:11"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 18:16:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:16:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:16:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:16:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.41678,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:16:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:16:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:16:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:16:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 25","timestamp":"2025-10-24 18:16:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":71.544438,"method":"GET","operation":"database_query","rowCount":25,"success":true},"timestamp":"2025-10-24 18:16:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:16:11"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 18:16:11"}
{"level":"info","message":"[getEventTypes.js] Fetched 25 eventTypes","timestamp":"2025-10-24 18:16:11"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (73ms)","timestamp":"2025-10-24 18:16:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:16:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":46.512635,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:16:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:16:11"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:16:11"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:16:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":141.172593,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:16:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:16:11"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 18:16:11"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (225ms)","timestamp":"2025-10-24 18:16:11"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:16:11"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:16:11"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 18:16:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:16:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:16:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:16:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":46.553445,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:16:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:16:11"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:16:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:16:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:16:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:16:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":44.965893,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:16:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:16:11"}
{"level":"debug","message":"[execEventType.js] Resolved from context :acctID → 3","timestamp":"2025-10-24 18:16:11"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 18:16:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:16:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:16:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 18:16:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.278422,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 18:16:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:16:11"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:16:11"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (128ms)","timestamp":"2025-10-24 18:16:11"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 18:16:19"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 18:16:19"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 18:16:19"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:16:19"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:16:19"}
{"body":{"values":{"0":{"paramName":"tableName","paramVal":"{{pageConfig.props.tableName}}"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 18:16:19"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 18:16:19"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:16:19"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:16:19"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:16:19"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":48.870939,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:16:19"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:16:19"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:16:19"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:16:19"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:16:19"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.125858,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:16:19"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:16:19"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:16:19"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:16:19"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 25","timestamp":"2025-10-24 18:16:19"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":93.01047,"method":"GET","operation":"database_query","rowCount":25,"success":true},"timestamp":"2025-10-24 18:16:19"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:16:19"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 18:16:19"}
{"level":"info","message":"[getEventTypes.js] Fetched 25 eventTypes","timestamp":"2025-10-24 18:16:19"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (94ms)","timestamp":"2025-10-24 18:16:19"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":454.247878,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:16:19"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:16:19"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 18:16:19"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (541ms)","timestamp":"2025-10-24 18:16:19"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":541.392381,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 18:16:19"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:16:19"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:16:19"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 18:16:19"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:16:19"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:16:19"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:16:19"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":50.027031,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:16:19"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:16:19"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:16:19"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:16:19"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:16:19"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:16:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":257.59219,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:16:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:16:20"}
{"level":"debug","message":"[execEventType.js] Resolved from context :acctID → 3","timestamp":"2025-10-24 18:16:20"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 18:16:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:16:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:16:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 18:16:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":31.801433,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 18:16:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:16:20"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:16:20"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (341ms)","timestamp":"2025-10-24 18:16:20"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 18:16:28"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 18:16:28"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 18:16:28"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:16:28"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:16:28"}
{"body":{"values":{"0":{"paramName":"tableName","paramVal":"{{pageConfig.props.tableName}}"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 18:16:28"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 18:16:28"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:16:28"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:16:28"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:16:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":163.963574,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:16:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:16:28"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:16:28"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:16:28"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:16:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.33697,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:16:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:16:28"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:16:28"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:16:28"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 25","timestamp":"2025-10-24 18:16:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":205.560125,"method":"GET","operation":"database_query","rowCount":25,"success":true},"timestamp":"2025-10-24 18:16:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:16:28"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 18:16:28"}
{"level":"info","message":"[getEventTypes.js] Fetched 25 eventTypes","timestamp":"2025-10-24 18:16:28"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (208ms)","timestamp":"2025-10-24 18:16:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":613.361102,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:16:29"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:16:29"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 18:16:29"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (814ms)","timestamp":"2025-10-24 18:16:29"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":813.665297,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 18:16:29"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:16:29"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:16:29"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 18:16:29"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:16:29"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:16:29"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:16:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.028665,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:16:29"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:16:29"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:16:29"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:16:29"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:16:29"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:16:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":48.185382,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:16:29"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:16:29"}
{"level":"debug","message":"[execEventType.js] Resolved from context :acctID → 3","timestamp":"2025-10-24 18:16:29"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 18:16:29"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:16:29"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:16:29"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 18:16:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":41.796982,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 18:16:29"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:16:29"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:16:29"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (127ms)","timestamp":"2025-10-24 18:16:29"}
{"body":{"impacts":{"0":{"affectedApps":{"0":"studio"},"changeType":"MODIFY","createdBy":"claude","description":"Added template token resolution to TriggerEngine\n- Resolves {{getVal:paramName}} from context store\n- Resolves {{pageConfig.props.X}} from page props\n- Resolves {{selected.X}} and {{row.X}} from context\n- Recursively resolves templates in objects and arrays\n- Critical fix for CRUD operations to work","filePath":"apps/studio/src/rendering/WorkflowEngine/TriggerEngine.js"}},"planId":45},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/logImpact","timestamp":"2025-10-24 18:16:35"}
{"level":"http","message":"[logImpact.js] POST /api/logImpact","timestamp":"2025-10-24 18:16:35"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:16:35"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:16:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":656.070584,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:16:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:16:36"}
{"level":"info","message":"[impactLogger.js] Logged 1 impacts","timestamp":"2025-10-24 18:16:36"}
{"level":"info","message":"[logImpact.js] Impact logging completed successfully","timestamp":"2025-10-24 18:16:36"}
{"level":"info","message":"[app.js]  Response: POST /api/logImpact 200 (657ms)","timestamp":"2025-10-24 18:16:36"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":657.136108,"method":"POST","operation":"http_request","path":"/api/logImpact","status":200},"timestamp":"2025-10-24 18:16:36"}
{"body":{"values":{"0":{"paramName":"selectedID","paramVal":null}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 18:17:22"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 18:17:22"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:17:22"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:17:22"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:17:22"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.23121,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:17:22"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:17:22"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:17:22"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:17:22"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:17:22"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":265.053565,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:17:22"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:17:22"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:17:22"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:17:22"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":188.177748,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:17:22"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:17:22"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 18:17:22"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (488ms)","timestamp":"2025-10-24 18:17:22"}
{"body":{"eventSQLId":"{pageName}Dtl","params":{"formData":null}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:17:22"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:17:22"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}Dtl","timestamp":"2025-10-24 18:17:22"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:17:22"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:17:22"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:17:22"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":101.609606,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:17:22"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:17:22"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}Dtl (ID: 23)","timestamp":"2025-10-24 18:17:22"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:17:22"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:17:22"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:17:22"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":155.626122,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:17:22"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:17:22"}
{"level":"debug","message":"[execEventType.js] Resolved from context :selectedID → 'null'","timestamp":"2025-10-24 18:17:22"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select \r\n\tid, \r\n\tname,\r\n\tdescription,\r\n\taccount_id\r\nfrom whatsfresh.ingredient_types\r\nwhere id = 'null'","timestamp":"2025-10-24 18:17:22"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:17:22"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:17:22"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 18:17:22"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":54.58957,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 18:17:22"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:17:22"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}Dtl (ID: 23)","timestamp":"2025-10-24 18:17:22"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (313ms)","timestamp":"2025-10-24 18:17:22"}
{"body":{"values":{"0":{"paramName":"dmlData","paramVal":{"description":"Test Description","name":"Test Type"}}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 18:20:40"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 18:20:40"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:20:40"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:20:40"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:20:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":142.300898,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:20:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:20:40"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:20:40"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:20:40"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:20:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":49.821686,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:20:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:20:40"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:20:40"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:20:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":263.934685,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:20:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:20:40"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 18:20:40"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (459ms)","timestamp":"2025-10-24 18:20:40"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/getVal","query":{"paramName":"method"},"timestamp":"2025-10-24 18:20:40"}
{"level":"http","message":"[getVal.js] GET /api/getVal?paramName=method","timestamp":"2025-10-24 18:20:40"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:20:40"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:20:40"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 18:20:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":279.824693,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 18:20:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:20:41"}
{"level":"warn","message":"[getVal.js] No value found for parameter: method","timestamp":"2025-10-24 18:20:41"}
{"level":"info","message":"[app.js]  Response: GET /api/getVal 404 (282ms)","timestamp":"2025-10-24 18:20:41"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":281.820962,"method":"GET","operation":"http_request","path":"/api/getVal","status":404},"timestamp":"2025-10-24 18:20:41"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/getVal","query":{"paramName":"tableName"},"timestamp":"2025-10-24 18:20:41"}
{"level":"http","message":"[getVal.js] GET /api/getVal?paramName=tableName","timestamp":"2025-10-24 18:20:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:20:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:20:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:20:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":219.206721,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:20:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:20:41"}
{"level":"debug","message":"[getVal.js] Retrieved value for tableName: {{pageConfig.props.tableName}}","timestamp":"2025-10-24 18:20:41"}
{"level":"info","message":"[app.js]  Response: GET /api/getVal 200 (221ms)","timestamp":"2025-10-24 18:20:41"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/getVal","query":{"paramName":"dmlData"},"timestamp":"2025-10-24 18:20:41"}
{"level":"http","message":"[getVal.js] GET /api/getVal?paramName=dmlData","timestamp":"2025-10-24 18:20:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:20:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:20:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:20:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":162.27554,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:20:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:20:41"}
{"level":"debug","message":"[getVal.js] Retrieved value for dmlData: [object Object]","timestamp":"2025-10-24 18:20:41"}
{"level":"info","message":"[app.js]  Response: GET /api/getVal 200 (163ms)","timestamp":"2025-10-24 18:20:41"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/getVal","query":{"paramName":"firstName"},"timestamp":"2025-10-24 18:20:41"}
{"level":"http","message":"[getVal.js] GET /api/getVal?paramName=firstName","timestamp":"2025-10-24 18:20:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:20:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:20:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:20:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":44.829895,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:20:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:20:41"}
{"level":"debug","message":"[getVal.js] Retrieved value for firstName: Paul","timestamp":"2025-10-24 18:20:41"}
{"level":"info","message":"[app.js]  Response: GET /api/getVal 200 (47ms)","timestamp":"2025-10-24 18:20:41"}
{"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 18:20:41"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 18:20:41"}
{"level":"debug","message":"[dmlProcessor.js] Processing undefined on undefined","timestamp":"2025-10-24 18:20:41"}
{"code":"MISSING_REQUIRED_FIELDS","level":"error","message":"[execDML.js] DML operation failed: method, table, and data are required","stack":"Error: method, table, and data are required\n    at processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:42:19)\n    at execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:30)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:157:13)\n    at Route.dispatch (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:117:3)\n    at handle (/home/paul/wf-monorepo-new/node_modules/router/index.js:435:11)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at /home/paul/wf-monorepo-new/node_modules/router/index.js:295:15\n    at processParams (/home/paul/wf-monorepo-new/node_modules/router/index.js:582:12)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/index.js:291:5)","status":400,"timestamp":"2025-10-24 18:20:41"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 400 (1ms)","timestamp":"2025-10-24 18:20:41"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.890782,"method":"POST","operation":"http_request","path":"/api/execDML","status":400},"timestamp":"2025-10-24 18:20:41"}
{"body":{"eventSQLId":"{pageName}List","params":{"formData":{"description":"Test Description","name":"Test Type"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:20:41"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:20:41"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 18:20:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:20:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:20:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:20:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":129.434769,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:20:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:20:41"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:20:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:20:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:20:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:20:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":105.04763,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:20:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:20:41"}
{"level":"debug","message":"[execEventType.js] Resolved from context :acctID → 3","timestamp":"2025-10-24 18:20:41"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 18:20:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:20:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:20:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 18:20:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":61.386586,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 18:20:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:20:41"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:20:41"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (298ms)","timestamp":"2025-10-24 18:20:41"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 18:25:33"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 18:25:33"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 18:25:33"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:25:33"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:25:33"}
{"body":{"values":{"0":{"paramName":"tableName","paramVal":"{{pageConfig.props.tableName}}"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 18:25:33"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 18:25:33"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:25:33"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:25:33"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:25:33"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":143.910613,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:25:33"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:25:33"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:25:33"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:25:33"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 25","timestamp":"2025-10-24 18:25:33"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":197.093981,"method":"GET","operation":"database_query","rowCount":25,"success":true},"timestamp":"2025-10-24 18:25:33"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:25:33"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 18:25:33"}
{"level":"info","message":"[getEventTypes.js] Fetched 25 eventTypes","timestamp":"2025-10-24 18:25:33"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (201ms)","timestamp":"2025-10-24 18:25:33"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:25:33"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":47.086971,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:25:33"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:25:33"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:25:33"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:25:33"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":340.03816,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:25:33"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:25:33"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 18:25:33"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (534ms)","timestamp":"2025-10-24 18:25:33"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":533.64597,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 18:25:33"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:25:33"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:25:33"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 18:25:33"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:25:33"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:25:33"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:25:33"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":30.395024,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:25:33"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:25:33"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:25:33"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:25:33"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:25:33"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:25:33"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":29.625277,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:25:33"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:25:33"}
{"level":"debug","message":"[execEventType.js] Resolved from context :acctID → 3","timestamp":"2025-10-24 18:25:33"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 18:25:33"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:25:33"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:25:33"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 18:25:33"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":31.493487,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 18:25:33"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:25:33"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:25:33"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (93ms)","timestamp":"2025-10-24 18:25:33"}
{"body":{"values":{"0":{"paramName":"selectedID","paramVal":null}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 18:26:04"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 18:26:04"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:26:04"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:26:04"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:26:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.322343,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:26:04"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:26:04"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:26:04"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:26:04"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:26:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":160.131322,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:26:04"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:26:04"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:26:04"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:26:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":179.214973,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:26:04"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:26:04"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 18:26:04"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (384ms)","timestamp":"2025-10-24 18:26:04"}
{"body":{"eventSQLId":"{pageName}Dtl","params":{"formData":null}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:26:05"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:26:05"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}Dtl","timestamp":"2025-10-24 18:26:05"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:26:05"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:26:05"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:26:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":49.461247,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:26:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:26:05"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}Dtl (ID: 23)","timestamp":"2025-10-24 18:26:05"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:26:05"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:26:05"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:26:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":74.378374,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:26:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:26:05"}
{"level":"debug","message":"[execEventType.js] Resolved from context :selectedID → 'null'","timestamp":"2025-10-24 18:26:05"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select \r\n\tid, \r\n\tname,\r\n\tdescription,\r\n\taccount_id\r\nfrom whatsfresh.ingredient_types\r\nwhere id = 'null'","timestamp":"2025-10-24 18:26:05"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:26:05"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:26:05"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 18:26:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":78.802613,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 18:26:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:26:05"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}Dtl (ID: 23)","timestamp":"2025-10-24 18:26:05"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (204ms)","timestamp":"2025-10-24 18:26:05"}
{"body":{"values":{"0":{"paramName":"dmlData","paramVal":{"description":"Test Description","name":"Test Type"}}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 18:27:19"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 18:27:19"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:27:19"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:27:19"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:27:19"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":39.261173,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:27:19"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:27:19"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:27:19"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:27:19"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:27:19"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":30.925388,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:27:19"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:27:19"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:27:19"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:27:19"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":111.119057,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 18:27:20"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (183ms)","timestamp":"2025-10-24 18:27:20"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/getVal","query":{"paramName":"method"},"timestamp":"2025-10-24 18:27:20"}
{"level":"http","message":"[getVal.js] GET /api/getVal?paramName=method","timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:27:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 18:27:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":74.776333,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:27:20"}
{"level":"warn","message":"[getVal.js] No value found for parameter: method","timestamp":"2025-10-24 18:27:20"}
{"level":"info","message":"[app.js]  Response: GET /api/getVal 404 (76ms)","timestamp":"2025-10-24 18:27:20"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":76.259892,"method":"GET","operation":"http_request","path":"/api/getVal","status":404},"timestamp":"2025-10-24 18:27:20"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/getVal","query":{"paramName":"tableName"},"timestamp":"2025-10-24 18:27:20"}
{"level":"http","message":"[getVal.js] GET /api/getVal?paramName=tableName","timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:27:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:27:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":73.18083,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[getVal.js] Retrieved value for tableName: {{pageConfig.props.tableName}}","timestamp":"2025-10-24 18:27:20"}
{"level":"info","message":"[app.js]  Response: GET /api/getVal 304 (75ms)","timestamp":"2025-10-24 18:27:20"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/getVal","query":{"paramName":"dmlData"},"timestamp":"2025-10-24 18:27:20"}
{"level":"http","message":"[getVal.js] GET /api/getVal?paramName=dmlData","timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:27:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:27:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.582181,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[getVal.js] Retrieved value for dmlData: [object Object]","timestamp":"2025-10-24 18:27:20"}
{"level":"info","message":"[app.js]  Response: GET /api/getVal 304 (38ms)","timestamp":"2025-10-24 18:27:20"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/getVal","query":{"paramName":"firstName"},"timestamp":"2025-10-24 18:27:20"}
{"level":"http","message":"[getVal.js] GET /api/getVal?paramName=firstName","timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:27:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:27:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":39.270481,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[getVal.js] Retrieved value for firstName: Paul","timestamp":"2025-10-24 18:27:20"}
{"level":"info","message":"[app.js]  Response: GET /api/getVal 304 (40ms)","timestamp":"2025-10-24 18:27:20"}
{"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-24 18:27:20"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[dmlProcessor.js] Processing undefined on undefined","timestamp":"2025-10-24 18:27:20"}
{"code":"MISSING_REQUIRED_FIELDS","level":"error","message":"[execDML.js] DML operation failed: method, table, and data are required","stack":"Error: method, table, and data are required\n    at processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:42:19)\n    at execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:30)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:157:13)\n    at Route.dispatch (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:117:3)\n    at handle (/home/paul/wf-monorepo-new/node_modules/router/index.js:435:11)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at /home/paul/wf-monorepo-new/node_modules/router/index.js:295:15\n    at processParams (/home/paul/wf-monorepo-new/node_modules/router/index.js:582:12)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/index.js:291:5)","status":400,"timestamp":"2025-10-24 18:27:20"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 400 (1ms)","timestamp":"2025-10-24 18:27:20"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.308434,"method":"POST","operation":"http_request","path":"/api/execDML","status":400},"timestamp":"2025-10-24 18:27:20"}
{"body":{"eventSQLId":"{pageName}List","params":{"formData":{"description":"Test Description","name":"Test Type"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:27:20"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:27:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:27:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.895629,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:27:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:27:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":41.802537,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[execEventType.js] Resolved from context :acctID → 3","timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:27:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 18:27:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":31.326268,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 18:27:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:27:20"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:27:20"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (112ms)","timestamp":"2025-10-24 18:27:20"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 18:29:34"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 18:29:34"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 18:29:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:29:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:29:34"}
{"body":{"values":{"0":{"paramName":"tableName","paramVal":"{{pageConfig.props.tableName}}"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 18:29:34"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 18:29:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:29:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:29:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:29:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":65.614973,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:29:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:29:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:29:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:29:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 25","timestamp":"2025-10-24 18:29:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":323.612966,"method":"GET","operation":"database_query","rowCount":25,"success":true},"timestamp":"2025-10-24 18:29:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:29:34"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 18:29:34"}
{"level":"info","message":"[getEventTypes.js] Fetched 25 eventTypes","timestamp":"2025-10-24 18:29:34"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (325ms)","timestamp":"2025-10-24 18:29:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:29:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":254.091005,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:29:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:29:34"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:29:34"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:29:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":271.585156,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:29:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:29:34"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 18:29:34"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (593ms)","timestamp":"2025-10-24 18:29:34"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":592.816408,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 18:29:34"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:29:34"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:29:34"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 18:29:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:29:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:29:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:29:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":85.893815,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:29:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:29:34"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:29:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:29:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:29:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:29:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.176189,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:29:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:29:34"}
{"level":"debug","message":"[execEventType.js] Resolved from context :acctID → 3","timestamp":"2025-10-24 18:29:34"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 18:29:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:29:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:29:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 18:29:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":234.118887,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 18:29:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:29:35"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:29:35"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (355ms)","timestamp":"2025-10-24 18:29:35"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 18:30:16"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 18:30:16"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 18:30:16"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:30:16"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:30:16"}
{"body":{"values":{"0":{"paramName":"tableName","paramVal":"{{pageConfig.props.tableName}}"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 18:30:16"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 18:30:16"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:30:16"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:30:16"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 25","timestamp":"2025-10-24 18:30:16"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":106.171645,"method":"GET","operation":"database_query","rowCount":25,"success":true},"timestamp":"2025-10-24 18:30:16"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:30:16"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 18:30:16"}
{"level":"info","message":"[getEventTypes.js] Fetched 25 eventTypes","timestamp":"2025-10-24 18:30:16"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (108ms)","timestamp":"2025-10-24 18:30:16"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:30:16"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":388.42563,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:30:16"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:30:16"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:30:16"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:30:16"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:30:16"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":95.412066,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:30:16"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:30:16"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:30:16"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:30:16"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":198.359085,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:30:17"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:30:17"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 18:30:17"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (686ms)","timestamp":"2025-10-24 18:30:17"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":685.510755,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 18:30:17"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:30:17"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:30:17"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 18:30:17"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:30:17"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:30:17"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:30:17"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.529448,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:30:17"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:30:17"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:30:17"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:30:17"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:30:17"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:30:17"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":38.325914,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:30:17"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:30:17"}
{"level":"debug","message":"[execEventType.js] Resolved from context :acctID → 3","timestamp":"2025-10-24 18:30:17"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 18:30:17"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:30:17"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:30:17"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 18:30:17"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.971412,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 18:30:17"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:30:17"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:30:17"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (113ms)","timestamp":"2025-10-24 18:30:17"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 18:35:50"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:35:50"}
{"body":{"values":{"0":{"paramName":"tableName","paramVal":"{{pageConfig.props.tableName}}"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 18:35:50"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:35:50"}
{"body":{"values":{"0":{"paramName":"tableName","paramVal":"{{pageConfig.props.tableName}}"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 18:35:50"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.225354,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":39.197333,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 25","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":78.067774,"method":"GET","operation":"database_query","rowCount":25,"success":true},"timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:35:50"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"[getEventTypes.js] Fetched 25 eventTypes","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (80ms)","timestamp":"2025-10-24 18:35:50"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 18:35:50"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":40.202827,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.713958,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 25","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":239.166939,"method":"GET","operation":"database_query","rowCount":25,"success":true},"timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:35:50"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"[getEventTypes.js] Fetched 25 eventTypes","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (241ms)","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":264.751331,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (342ms)","timestamp":"2025-10-24 18:35:50"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:35:50"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":294.904227,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (375ms)","timestamp":"2025-10-24 18:35:50"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:35:50"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":31.137057,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":63.74383,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":68.881202,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[execEventType.js] Resolved from context :acctID → 3","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.518849,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[execEventType.js] Resolved from context :acctID → 3","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":30.51767,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (133ms)","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":51.669916,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 18:35:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:35:50"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (153ms)","timestamp":"2025-10-24 18:35:50"}
{"body":{"values":{"0":{"paramName":"selectedID","paramVal":null}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 18:35:57"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 18:35:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:35:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:35:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:35:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":73.021151,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:35:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:35:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:35:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:35:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:35:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":31.355233,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:35:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:35:57"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:35:57"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:35:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":403.276345,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:35:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:35:57"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 18:35:57"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (509ms)","timestamp":"2025-10-24 18:35:57"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":508.825283,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-10-24 18:35:57"}
{"body":{"eventSQLId":"{pageName}Dtl","params":{"formData":null}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:35:57"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:35:57"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}Dtl","timestamp":"2025-10-24 18:35:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:35:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:35:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:35:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":59.051265,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:35:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:35:57"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}Dtl (ID: 23)","timestamp":"2025-10-24 18:35:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:35:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:35:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:35:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":38.277328,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:35:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:35:57"}
{"level":"debug","message":"[execEventType.js] Resolved from context :selectedID → 'null'","timestamp":"2025-10-24 18:35:57"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select \r\n\tid, \r\n\tname,\r\n\tdescription,\r\n\taccount_id\r\nfrom whatsfresh.ingredient_types\r\nwhere id = 'null'","timestamp":"2025-10-24 18:35:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:35:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:35:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-10-24 18:35:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":133.905599,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-10-24 18:35:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:35:57"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}Dtl (ID: 23)","timestamp":"2025-10-24 18:35:57"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (233ms)","timestamp":"2025-10-24 18:35:57"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 18:38:14"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 18:38:14"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 18:38:14"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:38:14"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:38:14"}
{"body":{"values":{"0":{"paramName":"tableName","paramVal":"{{pageConfig.props.tableName}}"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 18:38:14"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 18:38:14"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:38:14"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:38:14"}
{"body":{"values":{"0":{"paramName":"tableName","paramVal":"{{pageConfig.props.tableName}}"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-24 18:38:14"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-24 18:38:14"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:38:14"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:38:14"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:38:14"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":81.862251,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:38:14"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:38:14"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:38:14"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:38:14"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:38:14"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":78.178841,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:38:14"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:38:14"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:38:14"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:38:14"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":136.360171,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":135.883409,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 25","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":233.881683,"method":"GET","operation":"database_query","rowCount":25,"success":true},"timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:38:15"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"[getEventTypes.js] Fetched 25 eventTypes","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (237ms)","timestamp":"2025-10-24 18:38:15"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-24 18:38:15"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 25","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":39.119887,"method":"GET","operation":"database_query","rowCount":25,"success":true},"timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:38:15"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"[getEventTypes.js] Fetched 25 eventTypes","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (41ms)","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":204.205785,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (425ms)","timestamp":"2025-10-24 18:38:15"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:38:15"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":237.773961,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (454ms)","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":32.144234,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:38:15"}
{"body":{"eventSQLId":"{pageName}List","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-24 18:38:15"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: {pageName}List","timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":51.559279,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[execEventType.js] Resolved from context :acctID → 3","timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":49.55142,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.310206,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[execEventType.js] Resolved from context :acctID → 3","timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id,\r\n name,\r\n description,\r\n account_id\r\nFROM whatsfresh.ingredient_types\r\nWHERE account_id = 3\r\n ","timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.931654,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (123ms)","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 9","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":74.377677,"method":"GET","operation":"database_query","rowCount":9,"success":true},"timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: {pageName}List (ID: 22)","timestamp":"2025-10-24 18:38:15"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (161ms)","timestamp":"2025-10-24 18:38:15"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-24 18:53:26"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-24 19:53:26"}
