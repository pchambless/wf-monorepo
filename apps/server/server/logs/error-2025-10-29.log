{"code":"MISSING_REQUIRED_FIELDS","level":"error","message":"[execDML.js] DML operation failed: method, table, and data are required","stack":"Error: method, table, and data are required\n    at processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:42:19)\n    at execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:30)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:157:13)\n    at Route.dispatch (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:117:3)\n    at handle (/home/paul/wf-monorepo-new/node_modules/router/index.js:435:11)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at /home/paul/wf-monorepo-new/node_modules/router/index.js:295:15\n    at processParams (/home/paul/wf-monorepo-new/node_modules/router/index.js:582:12)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/index.js:291:5)","status":400,"timestamp":"2025-10-29 06:58:58"}
{"code":"MISSING_REQUIRED_FIELDS","level":"error","message":"[execDML.js] DML operation failed: method, table, and data are required","stack":"Error: method, table, and data are required\n    at processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:42:19)\n    at execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:30)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:157:13)\n    at Route.dispatch (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:117:3)\n    at handle (/home/paul/wf-monorepo-new/node_modules/router/index.js:435:11)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at /home/paul/wf-monorepo-new/node_modules/router/index.js:295:15\n    at processParams (/home/paul/wf-monorepo-new/node_modules/router/index.js:582:12)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/index.js:291:5)","status":400,"timestamp":"2025-10-29 06:58:59"}
{"code":"MISSING_REQUIRED_FIELDS","level":"error","message":"[execDML.js] DML operation failed: method, table, and data are required","stack":"Error: method, table, and data are required\n    at processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:42:19)\n    at execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:30)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:157:13)\n    at Route.dispatch (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:117:3)\n    at handle (/home/paul/wf-monorepo-new/node_modules/router/index.js:435:11)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at /home/paul/wf-monorepo-new/node_modules/router/index.js:295:15\n    at processParams (/home/paul/wf-monorepo-new/node_modules/router/index.js:582:12)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/index.js:291:5)","status":400,"timestamp":"2025-10-29 06:58:59"}
{"code":"INVALID_METHOD","level":"error","message":"[execDML.js] DML operation failed: Method must be INSERT, UPDATE, or DELETE. Got: SELECT","stack":"Error: Method must be INSERT, UPDATE, or DELETE. Got: SELECT\n    at processDML (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dml/dmlProcessor.js:50:19)\n    at execDML (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execDML.js:13:30)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:157:13)\n    at Route.dispatch (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:117:3)\n    at handle (/home/paul/wf-monorepo-new/node_modules/router/index.js:435:11)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at /home/paul/wf-monorepo-new/node_modules/router/index.js:295:15\n    at processParams (/home/paul/wf-monorepo-new/node_modules/router/index.js:582:12)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/index.js:291:5)","status":400,"timestamp":"2025-10-29 07:02:43"}
{"body":"{\n  \"method\": \"INSERT\",\n  \"table\": \"api_wf.plan_communications\",\n  \"data\": {\n    \"plan_id\": 51,\n    \"from_agent\": \"claude\",\n    \"to_agent\": \"Paul\",\n    \"type\": \"architecture\",\n    \"subject\": \"CRUD Template Cloning Workflow - Mermaid Diagram\",\n    \"message\": \"```mermaid\\nflowchart TD\\n    Start([User: Clone CRUD Template]) --> DefineTarget[Step 1: Define Target Page<br/>in page_registry]\\n    \\n    DefineTarget --> TargetData[\\\"User Inputs:<br/>• appName: whatsfresh<br/>• pageName: ingrType<br/>• pageTitle: Ingredient Types<br/>• tableName: whatsfresh.ingredient_types<br/>• contextKey: ingredient_type_id<br/>• parentID: [account_id]\\\"]\\n    \\n    TargetData --> InsertRegistry[\\\"INSERT into page_registry<br/>Returns: newPageID = 1\\\"]\\n    \\n    InsertRegistry --> Step2[Step 2: Clone Components]\\n    \\n    Step2 --> LoadTemplate[\\\"Load Template Components<br/>WHERE pageID = 11<br/>(CRUD template)\\\"]\\n    \\n    LoadTemplate --> TemplateComps[\\\"Components:<br/>65-Container (parent_id=65)<br/>77-Title (H3)<br/>66-AddNew (Button)<br/>67-Grid<br/>68-Form<br/>69-Submit (Button)\\\"]\\n    \\n    TemplateComps --> CloneLoop{For Each<br/>Component}\\n    \\n    CloneLoop --> GenerateID[Generate New xref_id<br/>newID = MAX(xref_id) + 1]\\n    \\n    GenerateID --> ReplaceTokens[\\\"Replace Template Tokens:<br/>• pageName → ingrType<br/>• pageTitle → Ingredient Types<br/>• {contextKey} → ingredient_type_id<br/>• {tableName} → ingredient_types\\\"]\\n    \\n    ReplaceTokens --> SetParent{Component<br/>Type?}\\n    \\n    SetParent -->|Container| SelfRef[\\\"parent_id = newID<br/>(self-reference)\\\"]\\n    SetParent -->|Other| ContainerRef[\\\"parent_id = new Container ID\\\"]\\n    \\n    SelfRef --> InsertComp[\\\"INSERT into eventComp_xref<br/>WITH pageID = newPageID\\\"]\\n    ContainerRef --> InsertComp\\n    \\n    InsertComp --> MapID[\\\"Store ID Mapping:<br/>oldID → newID<br/>65 → 100<br/>77 → 101<br/>etc.\\\"]\\n    \\n    MapID --> MoreComps{More<br/>Components?}\\n    MoreComps -->|Yes| CloneLoop\\n    MoreComps -->|No| Step3[Step 3: Clone Props]\\n    \\n    Step3 --> LoadProps[\\\"Load Template Props<br/>WHERE xref_id IN (65,66,67,68,69,77)\\\"]\\n    \\n    LoadProps --> PropsLoop{For Each<br/>Prop}\\n    \\n    PropsLoop --> MapPropID[\\\"Map xref_id:<br/>oldID → newID<br/>(using ID mapping)\\\"]\\n    \\n    MapPropID --> ReplacePropTokens[\\\"Replace Tokens in paramVal:<br/>• {contextKey} → ingredient_type_id<br/>• {pageName} → ingrType<br/>• {{pageConfig.props.title}} stays\\\"]\\n    \\n    ReplacePropTokens --> InsertProp[\\\"INSERT into eventProps<br/>WITH new xref_id\\\"]\\n    \\n    InsertProp --> MoreProps{More<br/>Props?}\\n    MoreProps -->|Yes| PropsLoop\\n    MoreProps -->|No| Step4[Step 4: Clone Triggers]\\n    \\n    Step4 --> LoadTriggers[\\\"Load Template Triggers<br/>WHERE xref_id IN (65,66,67,68,69)\\\"]\\n    \\n    LoadTriggers --> TriggerLoop{For Each<br/>Trigger}\\n    \\n    TriggerLoop --> MapTriggerID[\\\"Map xref_id:<br/>oldID → newID\\\"]\\n    \\n    MapTriggerID --> ReplaceTriggerTokens[\\\"Replace Component References:<br/>• Grid → ingrTypeGrid<br/>• Form → ingrTypeForm<br/>• {contextKey} → ingredient_type_id\\\"]\\n    \\n    ReplaceTriggerTokens --> InsertTrigger[\\\"INSERT into eventTriggers<br/>WITH new xref_id\\\"]\\n    \\n    InsertTrigger --> MoreTriggers{More<br/>Triggers?}\\n    MoreTriggers -->|Yes| TriggerLoop\\n    MoreTriggers -->|No| Step5[Step 5: Create EventSQL Stubs]\\n    \\n    Step5 --> CreateList[\\\"INSERT into eventSQL:<br/>qryName: ingrTypeList<br/>qrySQL: NULL<br/>(developer fills later)\\\"]\\n    \\n    CreateList --> CreateDtl[\\\"INSERT into eventSQL:<br/>qryName: ingrTypeDtl<br/>qrySQL: NULL<br/>(developer fills later)\\\"]\\n    \\n    CreateDtl --> Complete([Clone Complete\\!<br/>Navigate to new page])\\n    \\n    Complete --> DevWork[\\\"Developer Next Steps:<br/>1. Populate ingrTypeList SQL<br/>2. Populate ingrTypeDtl SQL<br/>3. Generate fields in Studio<br/>4. Test CRUD operations\\\"]\\n    \\n    style Start fill:#10b981\\n    style Complete fill:#10b981\\n    style DefineTarget fill:#3b82f6\\n    style Step2 fill:#3b82f6\\n    style Step3 fill:#3b82f6\\n    style Step4 fill:#3b82f6\\n    style Step5 fill:#3b82f6\\n    style DevWork fill:#f59e0b\\n```\\n\\n## Key Implementation Notes\\n\\n### ID Mapping Strategy\\n```javascript\\nconst idMapping = {};\\n// oldID → newID\\nidMapping[65] = 100; // Container\\nidMapping[77] = 101; // Title\\n```\\n\\n### Parent ID Logic\\n```javascript\\nif (component.comp_type === \\\"Container\\\") {\\n  parent_id = xref_id; // Self-reference\\n} else {\\n  parent_id = idMapping[templateContainerID];\\n}\\n```\\n\\n### Token Replacement Patterns\\n- **{contextKey}** → ingredient_type_id\\n- **{tableName}** → whatsfresh.ingredient_types\\n- **{pageName}** → ingrType\\n- **{{pageConfig.props.X}}** → Keep (runtime resolution)\\n\\n## Open Questions\\n1. Component naming: Keep simple (Grid) or prefix (ingrTypeGrid)?\\n2. Deep token search in nested JSON (rowActions)?\\n3. Validation: Check pageName/route conflicts?\\n4. Error handling: Rollback on failure?\",\n    \"userID\": \"claude\"\n  }\n}","expose":true,"level":"error","message":"[app.js]  JSON parsing error: Bad escaped character in JSON at position 3694 (line 10 column 3452)","stack":"SyntaxError: Bad escaped character in JSON at position 3694 (line 10 column 3452)\n    at JSON.parse (<anonymous>)\n    at parse (/home/paul/wf-monorepo-new/node_modules/body-parser/lib/types/json.js:77:19)\n    at /home/paul/wf-monorepo-new/node_modules/body-parser/lib/read.js:123:18\n    at AsyncResource.runInAsyncScope (node:async_hooks:214:14)\n    at invokeCallback (/home/paul/wf-monorepo-new/node_modules/raw-body/index.js:238:16)\n    at done (/home/paul/wf-monorepo-new/node_modules/raw-body/index.js:227:7)\n    at IncomingMessage.onEnd (/home/paul/wf-monorepo-new/node_modules/raw-body/index.js:287:7)\n    at IncomingMessage.emit (node:events:518:28)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)","status":400,"statusCode":400,"timestamp":"2025-10-29 09:33:09","type":"entity.parse.failed"}
{"code":"ER_BAD_FIELD_ERROR","errno":1054,"level":"error","message":"Unknown column 'active' in 'where clause'","sql":"SELECT \n  message as instructions,\n  updated_at as last_updated\nFROM api_wf.plan_communications\nWHERE type = 'instructions' \n  AND subject = 'AI-summary'\n  AND active = 1\nORDER BY created_at DESC\nLIMIT 1","sqlMessage":"Unknown column 'active' in 'where clause'","sqlState":"42S22","stack":"Error: Unknown column 'active' in 'where clause'\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execEventType.js:118:20)","timestamp":"2025-10-29 13:06:41"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-10-29 13:06:41"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execEventType.js:118:20)","timestamp":"2025-10-29 13:06:41"}
{"code":"ER_BAD_FIELD_ERROR","errno":1054,"level":"error","message":"Unknown column 'active' in 'where clause'","sql":"SELECT \n  message as instructions,\n  updated_at as last_updated\nFROM api_wf.plan_communications\nWHERE type = 'instructions' \n  AND subject = 'AI-summary'\n  AND active = 1\nORDER BY created_at DESC\nLIMIT 1","sqlMessage":"Unknown column 'active' in 'where clause'","sqlState":"42S22","stack":"Error: Unknown column 'active' in 'where clause'\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/server/server/controller/execEventType.js:118:20)","timestamp":"2025-10-29 13:06:41"}
