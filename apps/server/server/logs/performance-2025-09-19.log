{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-19 00:10:47"}
{"level":"info","message":"Log file rotated","newFilename":"/home/paul/wf-monorepo-new/apps/wf-server/server/logs/application-2025-09-19.log","oldFilename":"/home/paul/wf-monorepo-new/apps/wf-server/server/logs/application-2025-09-18.log","timestamp":"2025-09-19 00:10:47"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-19 01:10:47"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-19 07:09:50"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-19 08:24:50"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-19 09:24:50"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-19 10:24:50"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-19 11:24:50"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-19 12:24:50"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/studio/genPageConfig","query":{"params":"{\":pageID\": 24}"},"timestamp":"2025-09-19 13:12:01"}
{"level":"debug","message":"[studioDiscovery.js] Generating database-driven pageConfig for page xref ID: 24","timestamp":"2025-09-19 13:12:01"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 24","timestamp":"2025-09-19 13:12:01"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-19 13:12:02"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-19 13:12:02"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-19 13:12:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":683.864865,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-19 13:12:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-19 13:12:02"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-19 13:12:02"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-19 13:12:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":123.469442,"errorCode":"ER_NON_UNIQ_ERROR","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-19 13:12:02"}
{"code":"ER_NON_UNIQ_ERROR","errno":1052,"level":"error","message":"Column 'base_styles' in field list is ambiguous","sql":"CALL api_wf.sp_hier_page(24)","sqlMessage":"Column 'base_styles' in field list is ambiguous","sqlState":"23000","stack":"Error: Column 'base_styles' in field list is ambiguous\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-19 13:12:02"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-19 13:12:02"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-19 13:12:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-19 13:12:02"}
{"code":"ER_NON_UNIQ_ERROR","errno":1052,"level":"error","message":"Column 'base_styles' in field list is ambiguous","sql":"CALL api_wf.sp_hier_page(24)","sqlMessage":"Column 'base_styles' in field list is ambiguous","sqlState":"23000","stack":"Error: Column 'base_styles' in field list is ambiguous\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-19 13:12:02"}
{"code":"ER_NON_UNIQ_ERROR","errno":1052,"level":"error","message":"Column 'base_styles' in field list is ambiguous","sql":"CALL api_wf.sp_hier_page(24)","sqlMessage":"Column 'base_styles' in field list is ambiguous","sqlState":"23000","stack":"Error: Column 'base_styles' in field list is ambiguous\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-19 13:12:02"}
{"level":"info","message":"[app.js]  Response: GET /api/studio/genPageConfig 500 (824ms)","timestamp":"2025-09-19 13:12:02"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":824.461703,"method":"GET","operation":"http_request","path":"/api/studio/genPageConfig","status":500},"timestamp":"2025-09-19 13:12:02"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/studio/genPageConfig","query":{"params":"{\":pageID\": 24}"},"timestamp":"2025-09-19 13:14:21"}
{"level":"debug","message":"[studioDiscovery.js] Generating database-driven pageConfig for page xref ID: 24","timestamp":"2025-09-19 13:14:21"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 24","timestamp":"2025-09-19 13:14:21"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-19 13:14:21"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-19 13:14:21"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-19 13:14:21"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":45.491392,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-19 13:14:21"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-19 13:14:21"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-19 13:14:21"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-19 13:14:21"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-09-19 13:14:21"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":83.618037,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-19 13:14:21"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-19 13:14:21"}
{"level":"debug","message":"[database-genPageConfig.js] Loaded 10 components from database","timestamp":"2025-09-19 13:14:21"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageConfig.json","timestamp":"2025-09-19 13:14:21"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageMermaid.mmd","timestamp":"2025-09-19 13:14:21"}
{"level":"info","message":"[app.js]  Response: GET /api/studio/genPageConfig 200 (139ms)","timestamp":"2025-09-19 13:14:21"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-19 13:24:50"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/studio/genPageConfig","query":{"params":"{\":pageID\": 24}"},"timestamp":"2025-09-19 13:27:27"}
{"level":"debug","message":"[studioDiscovery.js] Generating database-driven pageConfig for page xref ID: 24","timestamp":"2025-09-19 13:27:27"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 24","timestamp":"2025-09-19 13:27:27"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-19 13:27:27"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-19 13:27:27"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-19 13:27:27"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":84.554992,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-19 13:27:27"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-19 13:27:27"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-19 13:27:27"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-19 13:27:27"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":58.847732,"errorCode":"ER_VIEW_INVALID","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-19 13:27:27"}
{"code":"ER_VIEW_INVALID","errno":1356,"level":"error","message":"View 'api_wf.vw_hier_components' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sql":"CALL api_wf.sp_hier_page(24)","sqlMessage":"View 'api_wf.vw_hier_components' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sqlState":"HY000","stack":"Error: View 'api_wf.vw_hier_components' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-19 13:27:27"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-19 13:27:27"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-19 13:27:27"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-19 13:27:27"}
{"code":"ER_VIEW_INVALID","errno":1356,"level":"error","message":"View 'api_wf.vw_hier_components' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sql":"CALL api_wf.sp_hier_page(24)","sqlMessage":"View 'api_wf.vw_hier_components' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sqlState":"HY000","stack":"Error: View 'api_wf.vw_hier_components' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-19 13:27:27"}
{"code":"ER_VIEW_INVALID","errno":1356,"level":"error","message":"View 'api_wf.vw_hier_components' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sql":"CALL api_wf.sp_hier_page(24)","sqlMessage":"View 'api_wf.vw_hier_components' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sqlState":"HY000","stack":"Error: View 'api_wf.vw_hier_components' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-19 13:27:27"}
{"level":"info","message":"[app.js]  Response: GET /api/studio/genPageConfig 500 (150ms)","timestamp":"2025-09-19 13:27:27"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":149.54902,"method":"GET","operation":"http_request","path":"/api/studio/genPageConfig","status":500},"timestamp":"2025-09-19 13:27:27"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/studio/genPageConfig","query":{"params":"{\":pageID\": 24}"},"timestamp":"2025-09-19 13:30:11"}
{"level":"debug","message":"[studioDiscovery.js] Generating database-driven pageConfig for page xref ID: 24","timestamp":"2025-09-19 13:30:11"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 24","timestamp":"2025-09-19 13:30:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-19 13:30:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-19 13:30:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-19 13:30:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":84.419117,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-19 13:30:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-19 13:30:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-19 13:30:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-19 13:30:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-09-19 13:30:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.455812,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-19 13:30:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-19 13:30:11"}
{"level":"debug","message":"[database-genPageConfig.js] Loaded 10 components from database","timestamp":"2025-09-19 13:30:11"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageConfig.json","timestamp":"2025-09-19 13:30:11"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageMermaid.mmd","timestamp":"2025-09-19 13:30:11"}
{"level":"info","message":"[app.js]  Response: GET /api/studio/genPageConfig 200 (130ms)","timestamp":"2025-09-19 13:30:11"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-09-19 13:34:01"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-09-19 13:34:02"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-09-19 13:34:02"}
{"level":"debug","message":"[index.js]  Initializing routes","timestamp":"2025-09-19 13:34:02"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-09-19 13:34:02"}
{"0":"POST /api/execEventType","1":"GET /api/eventType/:xrefId","10":"POST /api/util/restart-server","11":"POST /api/auth/login","2":"POST /api/execDML","3":"POST /api/execCreateDoc","4":"GET /api/getDoc","5":"POST /api/studio/genFields","6":"GET /api/studio/genPageConfig","7":"POST /api/writeFileDirectly","8":"POST /api/initialize","9":"GET /api/util/list-routes","level":"info","message":"[registerRoutes.js] Routes registered:","timestamp":"2025-09-19 13:34:02"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-09-19 13:34:02"}
{"level":"debug","message":"[index.js]  Routes initialized","timestamp":"2025-09-19 13:34:02"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-09-19 13:34:02"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-09-19 13:34:02"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-09-19 13:34:02"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-09-19 13:34:02"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/studio/genPageConfig","query":{"params":"{\":pageID\": 24}"},"timestamp":"2025-09-19 13:34:12"}
{"level":"debug","message":"[studioDiscovery.js] Generating database-driven pageConfig for page xref ID: 24","timestamp":"2025-09-19 13:34:12"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 24","timestamp":"2025-09-19 13:34:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-19 13:34:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-19 13:34:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-19 13:34:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":1049.125215,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-19 13:34:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-19 13:34:13"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-19 13:34:13"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-19 13:34:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-09-19 13:34:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":180.319939,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-19 13:34:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-19 13:34:13"}
{"level":"debug","message":"[database-genPageConfig.js] Loaded 10 components from database","timestamp":"2025-09-19 13:34:13"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageConfig.json","timestamp":"2025-09-19 13:34:13"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageMermaid.mmd","timestamp":"2025-09-19 13:34:13"}
{"level":"info","message":"[app.js]  Response: GET /api/studio/genPageConfig 200 (1247ms)","timestamp":"2025-09-19 13:34:13"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1247.27338,"method":"GET","operation":"http_request","path":"/api/studio/genPageConfig","status":200},"timestamp":"2025-09-19 13:34:13"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventType/39","timestamp":"2025-09-19 13:38:56"}
{"level":"http","message":"[fetchEventType.js] GET /api/eventType/39","timestamp":"2025-09-19 13:38:56"}
{"level":"debug","message":"[fetchEventType.js] Fetching eventType from vw_hier_components with xrefId: 39","timestamp":"2025-09-19 13:38:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-19 13:38:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-19 13:38:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":141.536751,"errorCode":"ER_NO_SUCH_TABLE","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-19 13:38:57"}
{"code":"ER_NO_SUCH_TABLE","errno":1146,"level":"error","message":"Table 'whatsfresh.vw_hier_components' doesn't exist","sql":"\n      SELECT\n        id,\n        comp_name,\n        posOrder,\n        props,\n        tmplt_def\n      FROM vw_hier_components\n      WHERE id = 39\n    ","sqlMessage":"Table 'whatsfresh.vw_hier_components' doesn't exist","sqlState":"42S02","stack":"Error: Table 'whatsfresh.vw_hier_components' doesn't exist\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async fetchEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/fetchEventType.js:37:20)","timestamp":"2025-09-19 13:38:57"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-19 13:38:57"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async fetchEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/fetchEventType.js:37:20)","timestamp":"2025-09-19 13:38:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-19 13:38:57"}
{"code":"ER_NO_SUCH_TABLE","errno":1146,"level":"error","message":"Table 'whatsfresh.vw_hier_components' doesn't exist","sql":"\n      SELECT\n        id,\n        comp_name,\n        posOrder,\n        props,\n        tmplt_def\n      FROM vw_hier_components\n      WHERE id = 39\n    ","sqlMessage":"Table 'whatsfresh.vw_hier_components' doesn't exist","sqlState":"42S02","stack":"Error: Table 'whatsfresh.vw_hier_components' doesn't exist\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async fetchEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/fetchEventType.js:37:20)","timestamp":"2025-09-19 13:38:57"}
{"level":"info","message":"[app.js]  Response: GET /api/eventType/39 500 (145ms)","timestamp":"2025-09-19 13:38:57"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":145.387206,"method":"GET","operation":"http_request","path":"/api/eventType/39","status":500},"timestamp":"2025-09-19 13:38:57"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-19 13:49:01"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-09-19 14:30:19"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-09-19 14:30:19"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-09-19 14:30:19"}
{"level":"debug","message":"[index.js]  Initializing routes","timestamp":"2025-09-19 14:30:19"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-09-19 14:30:19"}
{"0":"POST /api/execEventType","1":"GET /api/eventType/:xrefId","10":"POST /api/util/restart-server","11":"POST /api/auth/login","2":"POST /api/execDML","3":"POST /api/execCreateDoc","4":"GET /api/getDoc","5":"POST /api/studio/genFields","6":"GET /api/studio/genPageConfig","7":"POST /api/writeFileDirectly","8":"POST /api/initialize","9":"GET /api/util/list-routes","level":"info","message":"[registerRoutes.js] Routes registered:","timestamp":"2025-09-19 14:30:19"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-09-19 14:30:19"}
{"level":"debug","message":"[index.js]  Routes initialized","timestamp":"2025-09-19 14:30:19"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-09-19 14:30:19"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-09-19 14:30:19"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-09-19 14:30:19"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-09-19 14:30:19"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventType/39","timestamp":"2025-09-19 14:30:29"}
{"level":"http","message":"[fetchEventType.js] GET /api/eventType/39","timestamp":"2025-09-19 14:30:29"}
{"level":"debug","message":"[fetchEventType.js] Fetching eventType from vw_hier_components with xrefId: 39","timestamp":"2025-09-19 14:30:29"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-19 14:30:29"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-19 14:30:29"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-19 14:30:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":684.419314,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-19 14:30:29"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-19 14:30:29"}
{"level":"warn","message":"[fetchEventType.js] Invalid JSON in props field for xrefId 39: Unexpected token 'C', \"CALL api_w\"... is not valid JSON","timestamp":"2025-09-19 14:30:29"}
{"level":"info","message":"[fetchEventType.js] EventType fetched: pageConfigHier (xrefId: 39)","timestamp":"2025-09-19 14:30:29"}
{"level":"info","message":"[app.js]  Response: GET /api/eventType/39 200 (693ms)","timestamp":"2025-09-19 14:30:29"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":693.064708,"method":"GET","operation":"http_request","path":"/api/eventType/39","status":200},"timestamp":"2025-09-19 14:30:29"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-19 14:45:19"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-19 15:45:19"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-19 16:45:19"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-19 17:45:19"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-19 18:45:19"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-19 19:45:19"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-19 20:45:19"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-19 22:27:46"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-19 23:42:46"}
