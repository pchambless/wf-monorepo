{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-20 00:42:46"}
{"level":"info","message":"Log file rotated","newFilename":"/home/paul/wf-monorepo-new/apps/wf-server/server/logs/application-2025-09-20.log","oldFilename":"/home/paul/wf-monorepo-new/apps/wf-server/server/logs/application-2025-09-19.log","timestamp":"2025-09-20 00:42:46"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-20 01:42:46"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-20 06:31:05"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/studio/genPageConfig","query":{"pageID":"49"},"timestamp":"2025-09-20 07:16:37"}
{"level":"debug","message":"[studioDiscovery.js] Generating database-driven pageConfig for page xref ID: 49","timestamp":"2025-09-20 07:16:37"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 49","timestamp":"2025-09-20 07:16:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 07:16:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 07:16:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 07:16:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":761.575165,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 07:16:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 07:16:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 07:16:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 07:16:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":221.312322,"errorCode":"ER_PARSE_ERROR","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-20 07:16:38"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 07:16:38"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-20 07:16:38"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 07:16:38"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 07:16:38"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 07:16:38"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 07:16:38"}
{"level":"info","message":"[app.js]  Response: GET /api/studio/genPageConfig 500 (1004ms)","timestamp":"2025-09-20 07:16:38"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1004.076469,"method":"GET","operation":"http_request","path":"/api/studio/genPageConfig","status":500},"timestamp":"2025-09-20 07:16:38"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/studio/genPageConfig","query":{"pageID":"49"},"timestamp":"2025-09-20 07:17:45"}
{"level":"debug","message":"[studioDiscovery.js] Generating database-driven pageConfig for page xref ID: 49","timestamp":"2025-09-20 07:17:45"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 49","timestamp":"2025-09-20 07:17:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 07:17:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 07:17:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 07:17:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":238.163198,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 07:17:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 07:17:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 07:17:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 07:17:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":38.96934,"errorCode":"ER_PARSE_ERROR","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-20 07:17:45"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 07:17:45"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-20 07:17:45"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 07:17:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 07:17:45"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 07:17:45"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 07:17:45"}
{"level":"info","message":"[app.js]  Response: GET /api/studio/genPageConfig 500 (283ms)","timestamp":"2025-09-20 07:17:45"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":283.207847,"method":"GET","operation":"http_request","path":"/api/studio/genPageConfig","status":500},"timestamp":"2025-09-20 07:17:45"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/studio/genPageConfig","query":{"pageID":"49"},"timestamp":"2025-09-20 07:30:43"}
{"level":"debug","message":"[studioDiscovery.js] Generating database-driven pageConfig for page xref ID: 49","timestamp":"2025-09-20 07:30:43"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 49","timestamp":"2025-09-20 07:30:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 07:30:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 07:30:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 07:30:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.603541,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 07:30:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 07:30:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 07:30:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 07:30:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.414046,"errorCode":"ER_PARSE_ERROR","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-20 07:30:43"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 07:30:43"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-20 07:30:43"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 07:30:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 07:30:43"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 07:30:43"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 07:30:43"}
{"level":"info","message":"[app.js]  Response: GET /api/studio/genPageConfig 500 (78ms)","timestamp":"2025-09-20 07:30:43"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":78.311174,"method":"GET","operation":"http_request","path":"/api/studio/genPageConfig","status":500},"timestamp":"2025-09-20 07:30:43"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/studio/genPageConfig","query":{"pageID":"49"},"timestamp":"2025-09-20 07:38:17"}
{"level":"debug","message":"[studioDiscovery.js] Generating database-driven pageConfig for page xref ID: 49","timestamp":"2025-09-20 07:38:17"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 49","timestamp":"2025-09-20 07:38:17"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 07:38:17"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 07:38:17"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 07:38:17"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":109.563791,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 07:38:17"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 07:38:17"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 07:38:17"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 07:38:17"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":101.559632,"errorCode":"ER_PARSE_ERROR","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-20 07:38:18"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 07:38:18"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-20 07:38:18"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 07:38:18"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 07:38:18"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 07:38:18"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 07:38:18"}
{"level":"info","message":"[app.js]  Response: GET /api/studio/genPageConfig 500 (219ms)","timestamp":"2025-09-20 07:38:18"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":219.093336,"method":"GET","operation":"http_request","path":"/api/studio/genPageConfig","status":500},"timestamp":"2025-09-20 07:38:18"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/studio/genPageConfig","query":{"pageID":"49"},"timestamp":"2025-09-20 07:41:18"}
{"level":"debug","message":"[studioDiscovery.js] Generating database-driven pageConfig for page xref ID: 49","timestamp":"2025-09-20 07:41:18"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 49","timestamp":"2025-09-20 07:41:18"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 07:41:18"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 07:41:18"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 07:41:18"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":202.216439,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 07:41:18"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 07:41:18"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 07:41:18"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 07:41:18"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":142.861554,"errorCode":"ER_PARSE_ERROR","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-20 07:41:19"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 07:41:19"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-20 07:41:19"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 07:41:19"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 07:41:19"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 07:41:19"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 07:41:19"}
{"level":"info","message":"[app.js]  Response: GET /api/studio/genPageConfig 500 (352ms)","timestamp":"2025-09-20 07:41:19"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":352.297875,"method":"GET","operation":"http_request","path":"/api/studio/genPageConfig","status":500},"timestamp":"2025-09-20 07:41:19"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/studio/genPageConfig","query":{"pageID":"49"},"timestamp":"2025-09-20 07:43:05"}
{"level":"debug","message":"[studioDiscovery.js] Generating database-driven pageConfig for page xref ID: 49","timestamp":"2025-09-20 07:43:05"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 49","timestamp":"2025-09-20 07:43:05"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 07:43:05"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 07:43:05"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 07:43:06"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":89.776144,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 07:43:06"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 07:43:06"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 07:43:06"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 07:43:06"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":102.234664,"errorCode":"ER_PARSE_ERROR","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-20 07:43:06"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 07:43:06"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-20 07:43:06"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 07:43:06"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 07:43:06"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 07:43:06"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 07:43:06"}
{"level":"info","message":"[app.js]  Response: GET /api/studio/genPageConfig 500 (199ms)","timestamp":"2025-09-20 07:43:06"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":199.230867,"method":"GET","operation":"http_request","path":"/api/studio/genPageConfig","status":500},"timestamp":"2025-09-20 07:43:06"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-20 07:46:04"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/studio/genPageConfig","query":{"pageID":"49"},"timestamp":"2025-09-20 07:56:37"}
{"level":"debug","message":"[studioDiscovery.js] Generating database-driven pageConfig for page xref ID: 49","timestamp":"2025-09-20 07:56:37"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 49","timestamp":"2025-09-20 07:56:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 07:56:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 07:56:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 07:56:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":147.536613,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 07:56:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 07:56:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 07:56:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 07:56:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":102.843781,"errorCode":"ER_PARSE_ERROR","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-20 07:56:37"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 07:56:37"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-20 07:56:37"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 07:56:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 07:56:37"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 07:56:37"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 07:56:37"}
{"level":"info","message":"[app.js]  Response: GET /api/studio/genPageConfig 500 (257ms)","timestamp":"2025-09-20 07:56:37"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":256.658272,"method":"GET","operation":"http_request","path":"/api/studio/genPageConfig","status":500},"timestamp":"2025-09-20 07:56:37"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-09-20 07:59:46"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-09-20 07:59:47"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-09-20 07:59:47"}
{"level":"debug","message":"[index.js]  Initializing routes","timestamp":"2025-09-20 07:59:47"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-09-20 07:59:47"}
{"0":"POST /api/execEventType","1":"GET /api/eventType/:xrefId","10":"POST /api/util/restart-server","11":"POST /api/auth/login","2":"POST /api/execDML","3":"POST /api/execCreateDoc","4":"GET /api/getDoc","5":"POST /api/studio/genFields","6":"GET /api/studio/genPageConfig","7":"POST /api/writeFileDirectly","8":"POST /api/initialize","9":"GET /api/util/list-routes","level":"info","message":"[registerRoutes.js] Routes registered:","timestamp":"2025-09-20 07:59:47"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-09-20 07:59:47"}
{"level":"debug","message":"[index.js]  Routes initialized","timestamp":"2025-09-20 07:59:47"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-09-20 07:59:47"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-09-20 07:59:47"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-09-20 07:59:47"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-09-20 07:59:47"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/studio/genPageConfig","query":{":pageID:49":""},"timestamp":"2025-09-20 07:59:54"}
{"level":"info","message":"[app.js]  Response: GET /api/studio/genPageConfig 400 (2ms)","timestamp":"2025-09-20 07:59:54"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.678325,"method":"GET","operation":"http_request","path":"/api/studio/genPageConfig","status":400},"timestamp":"2025-09-20 07:59:54"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/studio/genPageConfig","query":{"pageID":"49"},"timestamp":"2025-09-20 08:02:24"}
{"level":"debug","message":"[studioDiscovery.js] Generating database-driven pageConfig for page xref ID: 49","timestamp":"2025-09-20 08:02:24"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 49","timestamp":"2025-09-20 08:02:24"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:02:25"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:02:25"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 08:02:25"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":315.642535,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 08:02:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:02:25"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:02:25"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:02:25"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":50.437485,"errorCode":"ER_PARSE_ERROR","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-20 08:02:25"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 08:02:25"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-20 08:02:25"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 08:02:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:02:25"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 08:02:25"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 08:02:25"}
{"level":"info","message":"[app.js]  Response: GET /api/studio/genPageConfig 500 (374ms)","timestamp":"2025-09-20 08:02:25"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":374.118337,"method":"GET","operation":"http_request","path":"/api/studio/genPageConfig","status":500},"timestamp":"2025-09-20 08:02:25"}
{"body":{"pageID":49},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/studio/genPageConfig","timestamp":"2025-09-20 08:02:55"}
{"level":"warn","message":"[server.js] Route not found: POST /api/studio/genPageConfig","timestamp":"2025-09-20 08:02:55"}
{"level":"info","message":"[app.js]  Response: POST /api/studio/genPageConfig 404 (1ms)","timestamp":"2025-09-20 08:02:55"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.858351,"method":"POST","operation":"http_request","path":"/api/studio/genPageConfig","status":404},"timestamp":"2025-09-20 08:02:55"}
{"body":{"eventID":39,"pageID":49},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEvent","timestamp":"2025-09-20 08:03:26"}
{"level":"warn","message":"[server.js] Route not found: POST /api/execEvent","timestamp":"2025-09-20 08:03:26"}
{"level":"info","message":"[app.js]  Response: POST /api/execEvent 404 (2ms)","timestamp":"2025-09-20 08:03:26"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.781738,"method":"POST","operation":"http_request","path":"/api/execEvent","status":404},"timestamp":"2025-09-20 08:03:26"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/studio/genPageConfig","query":{"pageID":"49"},"timestamp":"2025-09-20 08:05:53"}
{"level":"debug","message":"[studioDiscovery.js] Generating database-driven pageConfig for page xref ID: 49","timestamp":"2025-09-20 08:05:53"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 49","timestamp":"2025-09-20 08:05:53"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:05:53"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:05:53"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 08:05:53"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.00477,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 08:05:53"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:05:53"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:05:53"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:05:53"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":52.60468,"errorCode":"ER_PARSE_ERROR","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-20 08:05:53"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 08:05:53"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-20 08:05:53"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 08:05:53"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:05:53"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 08:05:53"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 08:05:53"}
{"level":"info","message":"[app.js]  Response: GET /api/studio/genPageConfig 500 (91ms)","timestamp":"2025-09-20 08:05:53"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":91.078339,"method":"GET","operation":"http_request","path":"/api/studio/genPageConfig","status":500},"timestamp":"2025-09-20 08:05:53"}
{"body":{"data":{"id":39},"method":"SELECT","table":"api_wf.eventType_xref"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-09-20 08:06:23"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-09-20 08:06:23"}
{"data":{"id":39},"level":"debug","message":"[dmlProcessor.js] Processing SELECT on api_wf.eventType_xref","timestamp":"2025-09-20 08:06:23"}
{"code":"INVALID_METHOD","level":"error","message":"[execDML.js] DML operation failed: Method must be INSERT, UPDATE, or DELETE. Got: SELECT","stack":"Error: Method must be INSERT, UPDATE, or DELETE. Got: SELECT\n    at processDML (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dml/dmlProcessor.js:50:19)\n    at execDML (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execDML.js:13:30)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:157:13)\n    at Route.dispatch (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:117:3)\n    at handle (/home/paul/wf-monorepo-new/node_modules/router/index.js:435:11)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at /home/paul/wf-monorepo-new/node_modules/router/index.js:295:15\n    at processParams (/home/paul/wf-monorepo-new/node_modules/router/index.js:582:12)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/index.js:291:5)","status":400,"timestamp":"2025-09-20 08:06:23"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 400 (2ms)","timestamp":"2025-09-20 08:06:23"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.681384,"method":"POST","operation":"http_request","path":"/api/execDML","status":400},"timestamp":"2025-09-20 08:06:23"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventType/39","timestamp":"2025-09-20 08:06:32"}
{"level":"http","message":"[fetchEventType.js] GET /api/eventType/39","timestamp":"2025-09-20 08:06:32"}
{"level":"debug","message":"[fetchEventType.js] Fetching eventType from vw_hier_components with xrefId: 39","timestamp":"2025-09-20 08:06:32"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:06:32"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:06:32"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 08:06:32"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":174.051576,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 08:06:32"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:06:32"}
{"level":"warn","message":"[fetchEventType.js] Invalid JSON in props field for xrefId 39: Unexpected token 'C', \"CALL api_w\"... is not valid JSON","timestamp":"2025-09-20 08:06:32"}
{"level":"info","message":"[fetchEventType.js] EventType fetched: pageConfigHier (xrefId: 39)","timestamp":"2025-09-20 08:06:32"}
{"level":"info","message":"[app.js]  Response: GET /api/eventType/39 200 (177ms)","timestamp":"2025-09-20 08:06:32"}
{"body":{"method":"CALL","params":{"0":49},"procedure":"api_wf.sp_hier_page"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-09-20 08:06:51"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-09-20 08:06:51"}
{"level":"debug","message":"[dmlProcessor.js] Processing CALL on undefined","timestamp":"2025-09-20 08:06:51"}
{"code":"MISSING_REQUIRED_FIELDS","level":"error","message":"[execDML.js] DML operation failed: method, table, and data are required","stack":"Error: method, table, and data are required\n    at processDML (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dml/dmlProcessor.js:42:19)\n    at execDML (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execDML.js:13:30)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:157:13)\n    at Route.dispatch (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:117:3)\n    at handle (/home/paul/wf-monorepo-new/node_modules/router/index.js:435:11)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at /home/paul/wf-monorepo-new/node_modules/router/index.js:295:15\n    at processParams (/home/paul/wf-monorepo-new/node_modules/router/index.js:582:12)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/index.js:291:5)","status":400,"timestamp":"2025-09-20 08:06:51"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 400 (1ms)","timestamp":"2025-09-20 08:06:51"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.129969,"method":"POST","operation":"http_request","path":"/api/execDML","status":400},"timestamp":"2025-09-20 08:06:51"}
{"body":{"eventID":39},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 08:10:17"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 08:10:17"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 400 (1ms)","timestamp":"2025-09-20 08:10:17"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.068555,"method":"POST","operation":"http_request","path":"/api/execEventType","status":400},"timestamp":"2025-09-20 08:10:17"}
{"body":{"xrefId":39},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 08:10:28"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 08:10:28"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 39","timestamp":"2025-09-20 08:10:28"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:10:28"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:10:28"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 08:10:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":76.109886,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 08:10:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:10:28"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: pageConfigHier","timestamp":"2025-09-20 08:10:28"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_page(:pageID)","timestamp":"2025-09-20 08:10:28"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:10:28"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:10:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":31.33281,"errorCode":"ER_PARSE_ERROR","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-20 08:10:28"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:75:20)","timestamp":"2025-09-20 08:10:28"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-20 08:10:28"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:75:20)","timestamp":"2025-09-20 08:10:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:10:28"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:75:20)","timestamp":"2025-09-20 08:10:28"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 500 (110ms)","timestamp":"2025-09-20 08:10:28"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":109.911882,"method":"POST","operation":"http_request","path":"/api/execEventType","status":500},"timestamp":"2025-09-20 08:10:28"}
{"body":{"pageID":49,"xrefId":39},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 08:10:57"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 08:10:57"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 39","timestamp":"2025-09-20 08:10:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:10:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:10:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 08:10:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":67.716194,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 08:10:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:10:57"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: pageConfigHier","timestamp":"2025-09-20 08:10:57"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_page(:pageID)","timestamp":"2025-09-20 08:10:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:10:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:10:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":236.776989,"errorCode":"ER_PARSE_ERROR","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-20 08:10:57"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:75:20)","timestamp":"2025-09-20 08:10:57"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-20 08:10:57"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:75:20)","timestamp":"2025-09-20 08:10:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:10:57"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:75:20)","timestamp":"2025-09-20 08:10:57"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 500 (308ms)","timestamp":"2025-09-20 08:10:57"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":308.293412,"method":"POST","operation":"http_request","path":"/api/execEventType","status":500},"timestamp":"2025-09-20 08:10:57"}
{"body":{"xrefId":47},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 08:11:21"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 08:11:21"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 47","timestamp":"2025-09-20 08:11:21"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:11:21"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:11:21"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 08:11:21"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":125.613944,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 08:11:21"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:11:21"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: getVAl","timestamp":"2025-09-20 08:11:21"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT concat(\"{:\", paramName,\",\", paramVal, \"}\")  tuple\r\nFROM api_wf.context_store\r\nWHERE email = :email\r\nAND paramName = :paramName","timestamp":"2025-09-20 08:11:21"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:11:21"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:11:21"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":60.461089,"errorCode":"ER_PARSE_ERROR","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-20 08:11:21"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':email\r\nAND paramName = :paramName' at line 3","sql":"SELECT concat(\"{:\", paramName,\",\", paramVal, \"}\")  tuple\r\nFROM api_wf.context_store\r\nWHERE email = :email\r\nAND paramName = :paramName","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':email\r\nAND paramName = :paramName' at line 3","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':email\r\nAND paramName = :paramName' at line 3\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:75:20)","timestamp":"2025-09-20 08:11:21"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-20 08:11:21"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:75:20)","timestamp":"2025-09-20 08:11:21"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:11:21"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':email\r\nAND paramName = :paramName' at line 3","sql":"SELECT concat(\"{:\", paramName,\",\", paramVal, \"}\")  tuple\r\nFROM api_wf.context_store\r\nWHERE email = :email\r\nAND paramName = :paramName","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':email\r\nAND paramName = :paramName' at line 3","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':email\r\nAND paramName = :paramName' at line 3\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:75:20)","timestamp":"2025-09-20 08:11:21"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 500 (192ms)","timestamp":"2025-09-20 08:11:21"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":191.75965,"method":"POST","operation":"http_request","path":"/api/execEventType","status":500},"timestamp":"2025-09-20 08:11:21"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-20 08:14:46"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventType/47","timestamp":"2025-09-20 08:22:37"}
{"level":"http","message":"[fetchEventType.js] GET /api/eventType/47","timestamp":"2025-09-20 08:22:37"}
{"level":"debug","message":"[fetchEventType.js] Fetching eventType from vw_hier_components with xrefId: 47","timestamp":"2025-09-20 08:22:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:22:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:22:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 08:22:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":105.186748,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 08:22:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:22:37"}
{"level":"warn","message":"[fetchEventType.js] Invalid JSON in props field for xrefId 47: Unexpected token 'S', \"SELECT con\"... is not valid JSON","timestamp":"2025-09-20 08:22:37"}
{"level":"info","message":"[fetchEventType.js] EventType fetched: getVAl (xrefId: 47)","timestamp":"2025-09-20 08:22:37"}
{"level":"info","message":"[app.js]  Response: GET /api/eventType/47 200 (107ms)","timestamp":"2025-09-20 08:22:37"}
{"body":{"email":"pc7900@gmail.com","paramName":"pageID","xrefId":47},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 08:22:51"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 08:22:51"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 47","timestamp":"2025-09-20 08:22:51"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:22:51"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:22:51"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 08:22:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":32.233456,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 08:22:51"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:22:51"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: getVAl","timestamp":"2025-09-20 08:22:51"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT concat(\"{:\", paramName,\",\", paramVal, \"}\")  tuple\r\nFROM api_wf.context_store\r\nWHERE email = :email\r\nAND paramName = :paramName","timestamp":"2025-09-20 08:22:51"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:22:51"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:22:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.490436,"errorCode":"ER_PARSE_ERROR","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-20 08:22:51"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':email\r\nAND paramName = :paramName' at line 3","sql":"SELECT concat(\"{:\", paramName,\",\", paramVal, \"}\")  tuple\r\nFROM api_wf.context_store\r\nWHERE email = :email\r\nAND paramName = :paramName","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':email\r\nAND paramName = :paramName' at line 3","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':email\r\nAND paramName = :paramName' at line 3\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:75:20)","timestamp":"2025-09-20 08:22:51"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-20 08:22:51"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:75:20)","timestamp":"2025-09-20 08:22:51"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:22:51"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':email\r\nAND paramName = :paramName' at line 3","sql":"SELECT concat(\"{:\", paramName,\",\", paramVal, \"}\")  tuple\r\nFROM api_wf.context_store\r\nWHERE email = :email\r\nAND paramName = :paramName","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':email\r\nAND paramName = :paramName' at line 3","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':email\r\nAND paramName = :paramName' at line 3\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:75:20)","timestamp":"2025-09-20 08:22:51"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 500 (71ms)","timestamp":"2025-09-20 08:22:51"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":70.531316,"method":"POST","operation":"http_request","path":"/api/execEventType","status":500},"timestamp":"2025-09-20 08:22:51"}
{"body":{"params":{"email":"pc7900@gmail.com","paramName":"pageID"},"xrefId":47},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 08:23:44"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 08:23:44"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 47","timestamp":"2025-09-20 08:23:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:23:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:23:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 08:23:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.515889,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 08:23:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:23:44"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: getVAl","timestamp":"2025-09-20 08:23:44"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT concat(\"{:\", paramName,\",\", paramVal, \"}\")  tuple\r\nFROM api_wf.context_store\r\nWHERE email = pc7900@gmail.com\r\nAND paramName = pageID","timestamp":"2025-09-20 08:23:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:23:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:23:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":68.364518,"errorCode":"ER_PARSE_ERROR","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-20 08:23:44"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '@gmail.com\r\nAND paramName = pageID' at line 3","sql":"SELECT concat(\"{:\", paramName,\",\", paramVal, \"}\")  tuple\r\nFROM api_wf.context_store\r\nWHERE email = pc7900@gmail.com\r\nAND paramName = pageID","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '@gmail.com\r\nAND paramName = pageID' at line 3","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '@gmail.com\r\nAND paramName = pageID' at line 3\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:75:20)","timestamp":"2025-09-20 08:23:44"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-20 08:23:44"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:75:20)","timestamp":"2025-09-20 08:23:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:23:44"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '@gmail.com\r\nAND paramName = pageID' at line 3","sql":"SELECT concat(\"{:\", paramName,\",\", paramVal, \"}\")  tuple\r\nFROM api_wf.context_store\r\nWHERE email = pc7900@gmail.com\r\nAND paramName = pageID","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '@gmail.com\r\nAND paramName = pageID' at line 3","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '@gmail.com\r\nAND paramName = pageID' at line 3\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:75:20)","timestamp":"2025-09-20 08:23:44"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 500 (109ms)","timestamp":"2025-09-20 08:23:44"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":109.3247,"method":"POST","operation":"http_request","path":"/api/execEventType","status":500},"timestamp":"2025-09-20 08:23:44"}
{"body":{"params":{"email":"'pc7900@gmail.com'","paramName":"'pageID'"},"xrefId":47},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 08:24:15"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 08:24:15"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 47","timestamp":"2025-09-20 08:24:15"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:24:15"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:24:15"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 08:24:16"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":90.688585,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 08:24:16"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:24:16"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: getVAl","timestamp":"2025-09-20 08:24:16"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT concat(\"{:\", paramName,\",\", paramVal, \"}\")  tuple\r\nFROM api_wf.context_store\r\nWHERE email = 'pc7900@gmail.com'\r\nAND paramName = 'pageID'","timestamp":"2025-09-20 08:24:16"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:24:16"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:24:16"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 08:24:16"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":109.247886,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 08:24:16"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:24:16"}
{"level":"info","message":"[execEventType.js] EventType executed successfully: getVAl (xrefId: 47)","timestamp":"2025-09-20 08:24:16"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (203ms)","timestamp":"2025-09-20 08:24:16"}
{"body":{"params":{"email":"'pc7900@gmail.com'","paramName":"'pageID'"},"xrefId":47},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 08:32:40"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 08:32:40"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 47","timestamp":"2025-09-20 08:32:40"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:32:40"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:32:40"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 08:32:40"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":193.927359,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 08:32:40"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:32:40"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: getVal","timestamp":"2025-09-20 08:32:40"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT concat(\"{:\", paramName,\",\",\r\n    IF(paramVal REGEXP '^[0-9]+$', paramVal, CONCAT(\"'\", paramVal, \"'\")),\r\n    \"}\") as tuple\r\n  FROM api_wf.context_store\r\n  WHERE email = 'pc7900@gmail.com'\r\n  AND paramName = 'pageID'","timestamp":"2025-09-20 08:32:40"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:32:40"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:32:40"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 08:32:41"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":341.434949,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 08:32:41"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:32:41"}
{"level":"info","message":"[execEventType.js] EventType executed successfully: getVal (xrefId: 47)","timestamp":"2025-09-20 08:32:41"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (538ms)","timestamp":"2025-09-20 08:32:41"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":538.056646,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-09-20 08:32:41"}
{"body":{"params":{"email":"'pc7900@gmail.com'","paramName":"'userEmail'"},"xrefId":47},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 08:32:44"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 08:32:44"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 47","timestamp":"2025-09-20 08:32:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:32:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:32:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 08:32:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.886329,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 08:32:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:32:44"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: getVal","timestamp":"2025-09-20 08:32:44"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT concat(\"{:\", paramName,\",\",\r\n    IF(paramVal REGEXP '^[0-9]+$', paramVal, CONCAT(\"'\", paramVal, \"'\")),\r\n    \"}\") as tuple\r\n  FROM api_wf.context_store\r\n  WHERE email = 'pc7900@gmail.com'\r\n  AND paramName = 'userEmail'","timestamp":"2025-09-20 08:32:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:32:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:32:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 08:32:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":75.402614,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 08:32:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:32:44"}
{"level":"info","message":"[execEventType.js] EventType executed successfully: getVal (xrefId: 47)","timestamp":"2025-09-20 08:32:44"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (121ms)","timestamp":"2025-09-20 08:32:44"}
{"body":{"params":{"email":"'pc7900@gmail.com'","paramName":"'pageID'"},"xrefId":47},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 08:34:03"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 08:34:03"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 47","timestamp":"2025-09-20 08:34:03"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:34:03"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:34:03"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 08:34:03"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.580267,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 08:34:03"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:34:03"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: getVal","timestamp":"2025-09-20 08:34:03"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT concat(\"{:\", paramName,\",\",\r\n    IF(paramVal REGEXP '^[0-9]+$', paramVal, CONCAT(\"'\", paramVal, \"'\")),\r\n    \"}\") as tuple\r\n  FROM api_wf.context_store\r\n  WHERE email = 'pc7900@gmail.com'\r\n  AND paramName = 'pageID'","timestamp":"2025-09-20 08:34:03"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:34:03"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:34:03"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 08:34:03"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.529784,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 08:34:03"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:34:03"}
{"level":"info","message":"[execEventType.js] EventType executed successfully: getVal (xrefId: 47)","timestamp":"2025-09-20 08:34:03"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (74ms)","timestamp":"2025-09-20 08:34:03"}
{"body":{"params":{"email":"'pc7900@gmail.com'","paramName":"'userEmail'"},"xrefId":47},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 08:34:12"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 08:34:12"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 47","timestamp":"2025-09-20 08:34:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:34:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:34:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 08:34:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":118.740143,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 08:34:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:34:12"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: getVal","timestamp":"2025-09-20 08:34:12"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT concat(\"{:\", paramName,\",\",\r\n    IF(paramVal REGEXP '^[0-9]+$', paramVal, CONCAT(\"'\", paramVal, \"'\")),\r\n    \"}\") as tuple\r\n  FROM api_wf.context_store\r\n  WHERE email = 'pc7900@gmail.com'\r\n  AND paramName = 'userEmail'","timestamp":"2025-09-20 08:34:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:34:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:34:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 08:34:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":48.877256,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 08:34:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:34:12"}
{"level":"info","message":"[execEventType.js] EventType executed successfully: getVal (xrefId: 47)","timestamp":"2025-09-20 08:34:12"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (170ms)","timestamp":"2025-09-20 08:34:12"}
{"body":{"params":{"email":"'pc7900@gmail.com'","paramName":"'pageID'"},"xrefId":47},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 08:44:57"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 08:44:57"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 47","timestamp":"2025-09-20 08:44:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:44:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:44:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 08:44:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.370899,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 08:44:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:44:57"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: getVal","timestamp":"2025-09-20 08:44:57"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT IF(paramVal REGEXP '^[0-9]+$', paramVal, CONCAT(\"'\", paramVal, \"'\")) as resolvedValue\r\n  FROM api_wf.context_store\r\n  WHERE email = 'pc7900@gmail.com'\r\n  AND paramName = 'pageID'","timestamp":"2025-09-20 08:44:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:44:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:44:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 08:44:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":65.653798,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 08:44:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:44:57"}
{"level":"info","message":"[execEventType.js] EventType executed successfully: getVal (xrefId: 47)","timestamp":"2025-09-20 08:44:57"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (104ms)","timestamp":"2025-09-20 08:44:57"}
{"body":{"params":{"email":"'pc7900@gmail.com'","paramName":"'userEmail'"},"xrefId":47},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 08:45:01"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 08:45:01"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 47","timestamp":"2025-09-20 08:45:01"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:45:01"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:45:01"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 08:45:01"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":97.807644,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 08:45:01"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:45:01"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: getVal","timestamp":"2025-09-20 08:45:01"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT IF(paramVal REGEXP '^[0-9]+$', paramVal, CONCAT(\"'\", paramVal, \"'\")) as resolvedValue\r\n  FROM api_wf.context_store\r\n  WHERE email = 'pc7900@gmail.com'\r\n  AND paramName = 'userEmail'","timestamp":"2025-09-20 08:45:01"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:45:01"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:45:01"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 08:45:01"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":103.653592,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 08:45:01"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:45:01"}
{"level":"info","message":"[execEventType.js] EventType executed successfully: getVal (xrefId: 47)","timestamp":"2025-09-20 08:45:01"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (205ms)","timestamp":"2025-09-20 08:45:01"}
{"body":{"xrefId":39},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 08:53:27"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 08:53:27"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 39","timestamp":"2025-09-20 08:53:27"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:53:27"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:53:27"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 08:53:27"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":146.827682,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 08:53:27"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:53:27"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: pageConfigHier","timestamp":"2025-09-20 08:53:27"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_page(:pageID)","timestamp":"2025-09-20 08:53:27"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:53:27"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:53:27"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":43.703797,"errorCode":"ER_PARSE_ERROR","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-20 08:53:27"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:75:20)","timestamp":"2025-09-20 08:53:27"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-20 08:53:27"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:75:20)","timestamp":"2025-09-20 08:53:27"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:53:27"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:75:20)","timestamp":"2025-09-20 08:53:27"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 500 (193ms)","timestamp":"2025-09-20 08:53:27"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":193.407714,"method":"POST","operation":"http_request","path":"/api/execEventType","status":500},"timestamp":"2025-09-20 08:53:27"}
{"body":{"xrefId":47},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 08:53:43"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 08:53:43"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 47","timestamp":"2025-09-20 08:53:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:53:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:53:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 08:53:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":46.954682,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 08:53:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:53:43"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: getVal","timestamp":"2025-09-20 08:53:43"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT IF(paramVal REGEXP '^[0-9]+$', paramVal, CONCAT(\"'\", paramVal, \"'\")) as resolvedValue\r\n  FROM api_wf.context_store\r\n  WHERE email = :email\r\n  AND paramName = :paramName","timestamp":"2025-09-20 08:53:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 08:53:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 08:53:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":68.067822,"errorCode":"ER_PARSE_ERROR","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-20 08:53:43"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':email\r\n  AND paramName = :paramName' at line 3","sql":"SELECT IF(paramVal REGEXP '^[0-9]+$', paramVal, CONCAT(\"'\", paramVal, \"'\")) as resolvedValue\r\n  FROM api_wf.context_store\r\n  WHERE email = :email\r\n  AND paramName = :paramName","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':email\r\n  AND paramName = :paramName' at line 3","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':email\r\n  AND paramName = :paramName' at line 3\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:75:20)","timestamp":"2025-09-20 08:53:43"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-20 08:53:43"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:75:20)","timestamp":"2025-09-20 08:53:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 08:53:43"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':email\r\n  AND paramName = :paramName' at line 3","sql":"SELECT IF(paramVal REGEXP '^[0-9]+$', paramVal, CONCAT(\"'\", paramVal, \"'\")) as resolvedValue\r\n  FROM api_wf.context_store\r\n  WHERE email = :email\r\n  AND paramName = :paramName","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':email\r\n  AND paramName = :paramName' at line 3","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':email\r\n  AND paramName = :paramName' at line 3\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:75:20)","timestamp":"2025-09-20 08:53:43"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 500 (119ms)","timestamp":"2025-09-20 08:53:43"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":118.726564,"method":"POST","operation":"http_request","path":"/api/execEventType","status":500},"timestamp":"2025-09-20 08:53:43"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-20 09:14:46"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/getVal","query":{"paramName":"pageID"},"timestamp":"2025-09-20 09:51:08"}
{"level":"warn","message":"[server.js] Route not found: GET /api/getVal","timestamp":"2025-09-20 09:51:08"}
{"level":"info","message":"[app.js]  Response: GET /api/getVal 404 (1ms)","timestamp":"2025-09-20 09:51:08"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.154865,"method":"GET","operation":"http_request","path":"/api/getVal","status":404},"timestamp":"2025-09-20 09:51:08"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/getVal","query":{"paramName":"userEmail"},"timestamp":"2025-09-20 09:51:11"}
{"level":"warn","message":"[server.js] Route not found: GET /api/getVal","timestamp":"2025-09-20 09:51:11"}
{"level":"info","message":"[app.js]  Response: GET /api/getVal 404 (1ms)","timestamp":"2025-09-20 09:51:11"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.517361,"method":"GET","operation":"http_request","path":"/api/getVal","status":404},"timestamp":"2025-09-20 09:51:11"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-09-20 09:51:42"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-09-20 09:51:43"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-09-20 09:51:43"}
{"level":"debug","message":"[index.js]  Initializing routes","timestamp":"2025-09-20 09:51:43"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-09-20 09:51:43"}
{"0":"POST /api/execEventType","1":"GET /api/eventType/:xrefId","10":"GET /api/util/list-routes","11":"POST /api/util/restart-server","12":"POST /api/auth/login","2":"POST /api/execDML","3":"POST /api/execCreateDoc","4":"GET /api/getDoc","5":"POST /api/studio/genFields","6":"GET /api/getVal","7":"GET /api/studio/genPageConfig","8":"POST /api/writeFileDirectly","9":"POST /api/initialize","level":"info","message":"[registerRoutes.js] Routes registered:","timestamp":"2025-09-20 09:51:43"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-09-20 09:51:43"}
{"level":"debug","message":"[index.js]  Routes initialized","timestamp":"2025-09-20 09:51:43"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-09-20 09:51:43"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-09-20 09:51:43"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-09-20 09:51:43"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-09-20 09:51:43"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/getVal","query":{"paramName":"pageID"},"timestamp":"2025-09-20 09:52:32"}
{"level":"http","message":"[getVal.js] GET /api/getVal?paramName=pageID","timestamp":"2025-09-20 09:52:32"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 09:52:33"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 09:52:33"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 09:52:33"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":301.515334,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 09:52:33"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 09:52:33"}
{"level":"debug","message":"[getVal.js] Retrieved value for pageID: 49","timestamp":"2025-09-20 09:52:33"}
{"level":"info","message":"[app.js]  Response: GET /api/getVal 200 (305ms)","timestamp":"2025-09-20 09:52:33"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/getVal","query":{"paramName":"userEmail"},"timestamp":"2025-09-20 09:52:36"}
{"level":"http","message":"[getVal.js] GET /api/getVal?paramName=userEmail","timestamp":"2025-09-20 09:52:36"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 09:52:36"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 09:52:36"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 09:52:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":117.24996,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 09:52:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 09:52:37"}
{"level":"debug","message":"[getVal.js] Retrieved value for userEmail: pc7900@gmail.com","timestamp":"2025-09-20 09:52:37"}
{"level":"info","message":"[app.js]  Response: GET /api/getVal 200 (119ms)","timestamp":"2025-09-20 09:52:37"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/getVal","query":{"format":"sql","paramName":"pageID"},"timestamp":"2025-09-20 09:52:47"}
{"level":"http","message":"[getVal.js] GET /api/getVal?paramName=pageID&format=sql","timestamp":"2025-09-20 09:52:47"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 09:52:47"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 09:52:47"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 09:52:47"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":116.449034,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 09:52:47"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 09:52:47"}
{"level":"debug","message":"[getVal.js] Retrieved value for pageID: 49","timestamp":"2025-09-20 09:52:47"}
{"level":"info","message":"[app.js]  Response: GET /api/getVal 200 (118ms)","timestamp":"2025-09-20 09:52:47"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/getVal","query":{"format":"sql","paramName":"userEmail"},"timestamp":"2025-09-20 09:52:52"}
{"level":"http","message":"[getVal.js] GET /api/getVal?paramName=userEmail&format=sql","timestamp":"2025-09-20 09:52:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 09:52:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 09:52:52"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 09:52:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.536668,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 09:52:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 09:52:52"}
{"level":"debug","message":"[getVal.js] Retrieved value for userEmail: 'pc7900@gmail.com'","timestamp":"2025-09-20 09:52:52"}
{"level":"info","message":"[app.js]  Response: GET /api/getVal 200 (38ms)","timestamp":"2025-09-20 09:52:52"}
{"body":{"xrefId":39},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 09:53:43"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 09:53:43"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 39","timestamp":"2025-09-20 09:53:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 09:53:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 09:53:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 09:53:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":198.244375,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 09:53:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 09:53:43"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: pageConfigHier","timestamp":"2025-09-20 09:53:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 09:53:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 09:53:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 09:53:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":143.853998,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 09:53:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 09:53:43"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_page(49)","timestamp":"2025-09-20 09:53:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 09:53:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 09:53:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-09-20 09:53:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":70.41317,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 09:53:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 09:53:43"}
{"level":"info","message":"[execEventType.js] EventType executed successfully: pageConfigHier (xrefId: 39)","timestamp":"2025-09-20 09:53:43"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (417ms)","timestamp":"2025-09-20 09:53:43"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-09-20 10:06:22"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-09-20 10:06:23"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-09-20 10:06:23"}
{"level":"debug","message":"[index.js]  Initializing routes","timestamp":"2025-09-20 10:06:23"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-09-20 10:06:23"}
{"0":"POST /api/execEventType","1":"GET /api/eventType/:xrefId","10":"POST /api/writeFileDirectly","11":"POST /api/initialize","12":"GET /api/util/list-routes","13":"POST /api/util/restart-server","14":"POST /api/auth/login","2":"POST /api/execDML","3":"POST /api/execCreateDoc","4":"GET /api/getDoc","5":"POST /api/studio/genFields","6":"GET /api/getVal","7":"POST /api/setVals","8":"POST /api/clearVals","9":"GET /api/studio/genPageConfig","level":"info","message":"[registerRoutes.js] Routes registered:","timestamp":"2025-09-20 10:06:23"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-09-20 10:06:23"}
{"level":"debug","message":"[index.js]  Routes initialized","timestamp":"2025-09-20 10:06:23"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-09-20 10:06:23"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-09-20 10:06:23"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-09-20 10:06:23"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-09-20 10:06:23"}
{"body":{"values":{"0":{"paramName":"theme","paramVal":"dark"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-09-20 10:07:00"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-09-20 10:07:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:07:01"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:07:01"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:07:01"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":368.399504,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:07:01"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:07:01"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-09-20 10:07:01"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-09-20 10:07:01"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":378.51705,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 10:07:01"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:07:01"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-09-20 10:07:01"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (753ms)","timestamp":"2025-09-20 10:07:01"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":752.535998,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-09-20 10:07:01"}
{"body":{"values":{"0":{"paramName":"language","paramVal":"en"},"1":{"paramName":"pageSize","paramVal":"25"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-09-20 10:07:04"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-09-20 10:07:04"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:07:04"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:07:04"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:07:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":38.536934,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:07:04"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:07:04"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-09-20 10:07:04"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-09-20 10:07:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":153.955122,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 10:07:04"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:07:04"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-09-20 10:07:04"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-09-20 10:07:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":333.626195,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 10:07:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:07:05"}
{"level":"debug","message":"[setVals.js] Set 2 values for pc7900@gmail.com","timestamp":"2025-09-20 10:07:05"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (529ms)","timestamp":"2025-09-20 10:07:05"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":529.401293,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-09-20 10:07:05"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/getVal","query":{"paramName":"theme"},"timestamp":"2025-09-20 10:07:21"}
{"level":"http","message":"[getVal.js] GET /api/getVal?paramName=theme","timestamp":"2025-09-20 10:07:21"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:07:21"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:07:21"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:07:21"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":96.746063,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:07:21"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:07:21"}
{"level":"debug","message":"[getVal.js] Retrieved value for theme: dark","timestamp":"2025-09-20 10:07:21"}
{"level":"info","message":"[app.js]  Response: GET /api/getVal 200 (98ms)","timestamp":"2025-09-20 10:07:21"}
{"body":{"paramNames":{"0":"theme","1":"language"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-09-20 10:07:24"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-09-20 10:07:24"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:07:24"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:07:24"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:07:24"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":32.955718,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:07:24"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:07:24"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-09-20 10:07:24"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-09-20 10:07:24"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":139.827783,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 10:07:24"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:07:24"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-09-20 10:07:24"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-09-20 10:07:24"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":149.22366,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 10:07:24"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:07:24"}
{"level":"debug","message":"[clearVals.js] Cleared 2 values for pc7900@gmail.com","timestamp":"2025-09-20 10:07:24"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (326ms)","timestamp":"2025-09-20 10:07:24"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/getVal","query":{"paramName":"theme"},"timestamp":"2025-09-20 10:07:31"}
{"level":"http","message":"[getVal.js] GET /api/getVal?paramName=theme","timestamp":"2025-09-20 10:07:31"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:07:31"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:07:31"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:07:32"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":32.983038,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:07:32"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:07:32"}
{"level":"info","message":"[app.js]  Response: GET /api/getVal 404 (34ms)","timestamp":"2025-09-20 10:07:32"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":33.981738,"method":"GET","operation":"http_request","path":"/api/getVal","status":404},"timestamp":"2025-09-20 10:07:32"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/getVal","query":{"paramName":"pageSize"},"timestamp":"2025-09-20 10:07:34"}
{"level":"http","message":"[getVal.js] GET /api/getVal?paramName=pageSize","timestamp":"2025-09-20 10:07:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:07:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:07:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:07:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":65.117364,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:07:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:07:34"}
{"level":"debug","message":"[getVal.js] Retrieved value for pageSize: 25","timestamp":"2025-09-20 10:07:34"}
{"level":"info","message":"[app.js]  Response: GET /api/getVal 200 (66ms)","timestamp":"2025-09-20 10:07:34"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/studio/genPageConfig","query":{":pageID:49":""},"timestamp":"2025-09-20 10:09:35"}
{"level":"info","message":"[app.js]  Response: GET /api/studio/genPageConfig 400 (2ms)","timestamp":"2025-09-20 10:09:35"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.140627,"method":"GET","operation":"http_request","path":"/api/studio/genPageConfig","status":400},"timestamp":"2025-09-20 10:09:35"}
{"body":{"values":{"0":{"paramName":"acctID","paramVal":"1"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-09-20 10:09:42"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-09-20 10:09:42"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:09:42"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:09:42"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:09:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":121.594101,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:09:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:09:42"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-09-20 10:09:42"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-09-20 10:09:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":394.169192,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 10:09:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:09:43"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-09-20 10:09:43"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (519ms)","timestamp":"2025-09-20 10:09:43"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":518.824951,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-09-20 10:09:43"}
{"body":{"values":{"0":{"paramName":"acctID","paramVal":"1"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-09-20 10:11:58"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-09-20 10:11:58"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:11:58"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:11:58"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:11:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":40.51921,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:11:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:11:58"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-09-20 10:11:58"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-09-20 10:11:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":110.136274,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 10:11:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:11:58"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-09-20 10:11:58"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (153ms)","timestamp":"2025-09-20 10:11:58"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/getVal","query":{"paramName":"firstName"},"timestamp":"2025-09-20 10:13:13"}
{"level":"http","message":"[getVal.js] GET /api/getVal?paramName=firstName","timestamp":"2025-09-20 10:13:13"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:13:13"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:13:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:13:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":97.411323,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:13:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:13:13"}
{"level":"debug","message":"[getVal.js] Retrieved value for firstName: Paul","timestamp":"2025-09-20 10:13:13"}
{"level":"info","message":"[app.js]  Response: GET /api/getVal 200 (99ms)","timestamp":"2025-09-20 10:13:13"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-09-20 10:13:52"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-09-20 10:13:53"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-09-20 10:13:53"}
{"level":"debug","message":"[index.js]  Initializing routes","timestamp":"2025-09-20 10:13:53"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-09-20 10:13:53"}
{"0":"POST /api/execEventType","1":"GET /api/eventType/:xrefId","10":"POST /api/writeFileDirectly","11":"POST /api/initialize","12":"GET /api/util/list-routes","13":"POST /api/util/restart-server","14":"POST /api/auth/login","2":"POST /api/execDML","3":"POST /api/execCreateDoc","4":"GET /api/getDoc","5":"POST /api/studio/genFields","6":"GET /api/getVal","7":"POST /api/setVals","8":"POST /api/clearVals","9":"GET /api/studio/genPageConfig","level":"info","message":"[registerRoutes.js] Routes registered:","timestamp":"2025-09-20 10:13:53"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-09-20 10:13:53"}
{"level":"debug","message":"[index.js]  Routes initialized","timestamp":"2025-09-20 10:13:53"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-09-20 10:13:53"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-09-20 10:13:53"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-09-20 10:13:53"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-09-20 10:13:53"}
{"body":{"values":{"0":{"paramName":"testParam","paramVal":"testValue"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-09-20 10:14:22"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-09-20 10:14:22"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:14:22"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:14:22"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:14:22"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":470.441239,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:14:22"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:14:22"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:14:22"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:14:22"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:14:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":200.784612,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:14:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:14:23"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-09-20 10:14:23"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-09-20 10:14:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":406.636026,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 10:14:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:14:23"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-09-20 10:14:23"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (1084ms)","timestamp":"2025-09-20 10:14:23"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1083.612508,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-09-20 10:14:23"}
{"body":{"xrefId":39},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 10:16:01"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 10:16:01"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 39","timestamp":"2025-09-20 10:16:01"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:16:01"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:16:01"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:16:01"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":76.737525,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:16:01"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:16:01"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: pageConfigHier","timestamp":"2025-09-20 10:16:01"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:16:01"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:16:01"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:16:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":67.823238,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:16:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:16:02"}
{"level":"debug","message":"[execEventType.js] Resolved :pageID → 49","timestamp":"2025-09-20 10:16:02"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_page(49)","timestamp":"2025-09-20 10:16:02"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:16:02"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:16:02"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-09-20 10:16:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":78.63337,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 10:16:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:16:02"}
{"level":"info","message":"[execEventType.js] EventType executed successfully: pageConfigHier (xrefId: 39)","timestamp":"2025-09-20 10:16:02"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (226ms)","timestamp":"2025-09-20 10:16:02"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-20 10:28:52"}
{"body":{"values":{"0":{"paramName":"pageID","paramVal":"41"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-09-20 10:31:21"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-09-20 10:31:21"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:31:21"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:31:21"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:31:21"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":102.926166,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:31:21"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:31:21"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:31:21"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:31:21"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:31:22"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":51.317983,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:31:22"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:31:22"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-09-20 10:31:22"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-09-20 10:31:22"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":220.983123,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 10:31:22"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:31:22"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-09-20 10:31:22"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (378ms)","timestamp":"2025-09-20 10:31:22"}
{"body":{"xrefId":39},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 10:31:28"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 10:31:28"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 39","timestamp":"2025-09-20 10:31:28"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:31:28"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:31:28"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:31:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.726975,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:31:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:31:28"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: pageConfigHier","timestamp":"2025-09-20 10:31:28"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:31:28"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:31:28"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:31:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.971124,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:31:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:31:28"}
{"level":"debug","message":"[execEventType.js] Resolved :pageID → 41","timestamp":"2025-09-20 10:31:28"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_page(41)","timestamp":"2025-09-20 10:31:28"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:31:28"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:31:28"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-09-20 10:31:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":74.56138,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 10:31:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:31:28"}
{"level":"info","message":"[execEventType.js] EventType executed successfully: pageConfigHier (xrefId: 39)","timestamp":"2025-09-20 10:31:28"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (145ms)","timestamp":"2025-09-20 10:31:28"}
{"body":{"values":{"0":{"paramName":"pageID","paramVal":"49"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-09-20 10:39:36"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-09-20 10:39:36"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:39:36"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:39:36"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:39:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.852412,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:39:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:39:36"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:39:36"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:39:36"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:39:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.49315,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:39:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:39:36"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-09-20 10:39:36"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-09-20 10:39:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":147.394754,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 10:39:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:39:36"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-09-20 10:39:36"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (222ms)","timestamp":"2025-09-20 10:39:36"}
{"body":{"xrefId":39},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 10:39:43"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 10:39:43"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 39","timestamp":"2025-09-20 10:39:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:39:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:39:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:39:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.054757,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:39:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:39:43"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: pageConfigHier","timestamp":"2025-09-20 10:39:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:39:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:39:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:39:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.847786,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:39:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:39:43"}
{"level":"debug","message":"[execEventType.js] Resolved :pageID → 49","timestamp":"2025-09-20 10:39:43"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_page(49)","timestamp":"2025-09-20 10:39:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:39:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:39:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-09-20 10:39:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":43.320108,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 10:39:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:39:43"}
{"level":"info","message":"[execEventType.js] EventType executed successfully: pageConfigHier (xrefId: 39)","timestamp":"2025-09-20 10:39:43"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (115ms)","timestamp":"2025-09-20 10:39:43"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/studio/genPageConfig","query":{"pageID":"49"},"timestamp":"2025-09-20 10:43:32"}
{"level":"debug","message":"[studioDiscovery.js] Generating database-driven pageConfig for page xref ID: 49","timestamp":"2025-09-20 10:43:32"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 49","timestamp":"2025-09-20 10:43:32"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:43:32"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:43:32"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:43:32"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":66.492792,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:43:32"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:43:32"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:43:32"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:43:32"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.33334,"errorCode":"ER_PARSE_ERROR","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-20 10:43:32"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 10:43:32"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-20 10:43:32"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 10:43:32"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:43:32"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 10:43:32"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 10:43:32"}
{"level":"info","message":"[app.js]  Response: GET /api/studio/genPageConfig 500 (108ms)","timestamp":"2025-09-20 10:43:32"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":108.434294,"method":"GET","operation":"http_request","path":"/api/studio/genPageConfig","status":500},"timestamp":"2025-09-20 10:43:32"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-09-20 10:44:10"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-09-20 10:44:11"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-09-20 10:44:11"}
{"level":"debug","message":"[index.js]  Initializing routes","timestamp":"2025-09-20 10:44:11"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-09-20 10:44:11"}
{"0":"POST /api/execEventType","1":"GET /api/eventType/:xrefId","10":"POST /api/writeFileDirectly","11":"POST /api/initialize","12":"GET /api/util/list-routes","13":"POST /api/util/restart-server","14":"POST /api/auth/login","2":"POST /api/execDML","3":"POST /api/execCreateDoc","4":"GET /api/getDoc","5":"POST /api/studio/genFields","6":"GET /api/getVal","7":"POST /api/setVals","8":"POST /api/clearVals","9":"GET /api/studio/genPageConfig","level":"info","message":"[registerRoutes.js] Routes registered:","timestamp":"2025-09-20 10:44:11"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-09-20 10:44:11"}
{"level":"debug","message":"[index.js]  Routes initialized","timestamp":"2025-09-20 10:44:11"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-09-20 10:44:11"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-09-20 10:44:11"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-09-20 10:44:11"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-09-20 10:44:11"}
{"body":{"xrefId":39},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 10:44:35"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 10:44:35"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 39","timestamp":"2025-09-20 10:44:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:44:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:44:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:44:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":220.246975,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:44:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:44:35"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: pageConfigHier","timestamp":"2025-09-20 10:44:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:44:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:44:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:44:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":75.504495,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:44:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:44:35"}
{"level":"debug","message":"[execEventType.js] Resolved :pageID → 49","timestamp":"2025-09-20 10:44:35"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_page(49)","timestamp":"2025-09-20 10:44:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:44:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:44:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-09-20 10:44:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":77.198578,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 10:44:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:44:35"}
{"level":"info","message":"[execEventType.js] EventType executed successfully: pageConfigHier (xrefId: 39)","timestamp":"2025-09-20 10:44:35"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (377ms)","timestamp":"2025-09-20 10:44:35"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/studio/genPageConfig","query":{"pageID":"49"},"timestamp":"2025-09-20 10:45:04"}
{"level":"debug","message":"[studioDiscovery.js] Generating database-driven pageConfig for page xref ID: 49","timestamp":"2025-09-20 10:45:04"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 49","timestamp":"2025-09-20 10:45:04"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:45:04"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:45:04"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:45:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":113.348795,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:45:04"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:45:04"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:45:04"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:45:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":58.021647,"errorCode":"ER_PARSE_ERROR","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-20 10:45:04"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 10:45:04"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-20 10:45:04"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 10:45:04"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:45:04"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 10:45:04"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:348:20)","timestamp":"2025-09-20 10:45:04"}
{"level":"info","message":"[app.js]  Response: GET /api/studio/genPageConfig 500 (178ms)","timestamp":"2025-09-20 10:45:04"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":178.346996,"method":"GET","operation":"http_request","path":"/api/studio/genPageConfig","status":500},"timestamp":"2025-09-20 10:45:04"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-09-20 10:47:03"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-09-20 10:47:04"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-09-20 10:47:04"}
{"level":"debug","message":"[index.js]  Initializing routes","timestamp":"2025-09-20 10:47:04"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-09-20 10:47:04"}
{"0":"POST /api/execEventType","1":"GET /api/eventType/:xrefId","10":"POST /api/writeFileDirectly","11":"POST /api/initialize","12":"GET /api/util/list-routes","13":"POST /api/util/restart-server","14":"POST /api/auth/login","2":"POST /api/execDML","3":"POST /api/execCreateDoc","4":"GET /api/getDoc","5":"POST /api/studio/genFields","6":"GET /api/getVal","7":"POST /api/setVals","8":"POST /api/clearVals","9":"GET /api/studio/genPageConfig","level":"info","message":"[registerRoutes.js] Routes registered:","timestamp":"2025-09-20 10:47:04"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-09-20 10:47:04"}
{"level":"debug","message":"[index.js]  Routes initialized","timestamp":"2025-09-20 10:47:04"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-09-20 10:47:04"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-09-20 10:47:04"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-09-20 10:47:04"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-09-20 10:47:04"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/studio/genPageConfig","timestamp":"2025-09-20 10:47:06"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:47:07"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:47:07"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:47:07"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":601.876967,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:47:07"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:47:07"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:47:07"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:47:07"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:47:07"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":223.322702,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:47:07"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:47:07"}
{"level":"debug","message":"[studioDiscovery.js] Generating database-driven pageConfig for page xref ID: 49","timestamp":"2025-09-20 10:47:07"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 49","timestamp":"2025-09-20 10:47:07"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:47:07"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:47:07"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:47:07"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":210.492003,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:47:07"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:47:07"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:47:07"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:47:07"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.011324,"errorCode":"ER_PARSE_ERROR","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-20 10:47:07"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:349:20)","timestamp":"2025-09-20 10:47:07"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-20 10:47:07"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:349:20)","timestamp":"2025-09-20 10:47:07"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:47:07"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:349:20)","timestamp":"2025-09-20 10:47:07"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:349:20)","timestamp":"2025-09-20 10:47:07"}
{"level":"info","message":"[app.js]  Response: GET /api/studio/genPageConfig 500 (1081ms)","timestamp":"2025-09-20 10:47:07"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1080.548744,"method":"GET","operation":"http_request","path":"/api/studio/genPageConfig","status":500},"timestamp":"2025-09-20 10:47:07"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-09-20 10:47:54"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-09-20 10:47:55"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-09-20 10:47:55"}
{"level":"debug","message":"[index.js]  Initializing routes","timestamp":"2025-09-20 10:47:55"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-09-20 10:47:55"}
{"0":"POST /api/execEventType","1":"GET /api/eventType/:xrefId","10":"POST /api/writeFileDirectly","11":"POST /api/initialize","12":"GET /api/util/list-routes","13":"POST /api/util/restart-server","14":"POST /api/auth/login","2":"POST /api/execDML","3":"POST /api/execCreateDoc","4":"GET /api/getDoc","5":"POST /api/studio/genFields","6":"GET /api/getVal","7":"POST /api/setVals","8":"POST /api/clearVals","9":"GET /api/studio/genPageConfig","level":"info","message":"[registerRoutes.js] Routes registered:","timestamp":"2025-09-20 10:47:55"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-09-20 10:47:55"}
{"level":"debug","message":"[index.js]  Routes initialized","timestamp":"2025-09-20 10:47:55"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-09-20 10:47:55"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-09-20 10:47:55"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-09-20 10:47:55"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-09-20 10:47:55"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/getVal","query":{"paramName":"pageID"},"timestamp":"2025-09-20 10:48:13"}
{"level":"http","message":"[getVal.js] GET /api/getVal?paramName=pageID","timestamp":"2025-09-20 10:48:13"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:48:13"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:48:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:48:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":356.055049,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:48:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:48:13"}
{"level":"debug","message":"[getVal.js] Retrieved value for pageID: 49","timestamp":"2025-09-20 10:48:13"}
{"level":"info","message":"[app.js]  Response: GET /api/getVal 200 (363ms)","timestamp":"2025-09-20 10:48:13"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/studio/genPageConfig","timestamp":"2025-09-20 10:48:23"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:48:23"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:48:23"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:48:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":92.776416,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:48:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:48:23"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:48:23"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:48:23"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:48:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":46.836526,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:48:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:48:23"}
{"level":"debug","message":"[studioDiscovery.js] Generating database-driven pageConfig for page xref ID: 49","timestamp":"2025-09-20 10:48:23"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 49","timestamp":"2025-09-20 10:48:23"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:48:23"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:48:23"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:48:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":86.520012,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:48:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:48:23"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:48:23"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:48:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.452022,"errorCode":"ER_PARSE_ERROR","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-20 10:48:23"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:349:20)","timestamp":"2025-09-20 10:48:23"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-20 10:48:23"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:349:20)","timestamp":"2025-09-20 10:48:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:48:23"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:349:20)","timestamp":"2025-09-20 10:48:23"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sql":"CALL api_wf.sp_hier_page(:pageID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':pageID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:114:29)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/studioDiscovery.js:349:20)","timestamp":"2025-09-20 10:48:23"}
{"level":"info","message":"[app.js]  Response: GET /api/studio/genPageConfig 500 (272ms)","timestamp":"2025-09-20 10:48:23"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":272.393114,"method":"GET","operation":"http_request","path":"/api/studio/genPageConfig","status":500},"timestamp":"2025-09-20 10:48:23"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-09-20 10:49:17"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-09-20 10:49:18"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-09-20 10:49:18"}
{"level":"debug","message":"[index.js]  Initializing routes","timestamp":"2025-09-20 10:49:18"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-09-20 10:49:18"}
{"0":"POST /api/execEventType","1":"GET /api/eventType/:xrefId","10":"POST /api/writeFileDirectly","11":"POST /api/initialize","12":"GET /api/util/list-routes","13":"POST /api/util/restart-server","14":"POST /api/auth/login","2":"POST /api/execDML","3":"POST /api/execCreateDoc","4":"GET /api/getDoc","5":"POST /api/studio/genFields","6":"GET /api/getVal","7":"POST /api/setVals","8":"POST /api/clearVals","9":"GET /api/studio/genPageConfig","level":"info","message":"[registerRoutes.js] Routes registered:","timestamp":"2025-09-20 10:49:18"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-09-20 10:49:18"}
{"level":"debug","message":"[index.js]  Routes initialized","timestamp":"2025-09-20 10:49:18"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-09-20 10:49:18"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-09-20 10:49:18"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-09-20 10:49:18"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-09-20 10:49:18"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/studio/genPageConfig","timestamp":"2025-09-20 10:49:22"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:49:23"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:49:23"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:49:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":350.677717,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:49:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:49:23"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:49:23"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:49:23"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:49:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":100.376041,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:49:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:49:23"}
{"level":"debug","message":"[studioDiscovery.js] Generating database-driven pageConfig for page xref ID: 49","timestamp":"2025-09-20 10:49:23"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 49","timestamp":"2025-09-20 10:49:23"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:49:23"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:49:23"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 10:49:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":124.643124,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 10:49:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:49:23"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 10:49:23"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 10:49:23"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-09-20 10:49:23"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":205.273954,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 10:49:23"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 10:49:23"}
{"level":"debug","message":"[database-genPageConfig.js] Loaded 6 components from database","timestamp":"2025-09-20 10:49:23"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageConfig.json to /home/paul/wf-monorepo-new/apps/wf-studio/src/apps/wf-login/loginPage/pageConfig.json","timestamp":"2025-09-20 10:49:23"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageMermaid.mmd to /home/paul/wf-monorepo-new/apps/wf-studio/src/apps/wf-login/loginPage/pageMermaid.mmd","timestamp":"2025-09-20 10:49:23"}
{"level":"info","message":"[app.js]  Response: GET /api/studio/genPageConfig 200 (796ms)","timestamp":"2025-09-20 10:49:23"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":795.819257,"method":"GET","operation":"http_request","path":"/api/studio/genPageConfig","status":200},"timestamp":"2025-09-20 10:49:23"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-20 11:04:17"}
{"body":{"data":{"created_by":"Paul","description":"Customer-facing client application","eventType_id":2,"name":"wf-client","parent_id":1,"props":"{\"port\": 3000, \"routePath\": \"/client\", \"allowedRoles\": [2]}","title":"Client Application"},"method":"INSERT","table":"api_wf.eventType_xref"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-09-20 11:23:21"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-09-20 11:23:21"}
{"data":{"created_by":"Paul","description":"Customer-facing client application","eventType_id":2,"name":"wf-client","parent_id":1,"props":"{\"port\": 3000, \"routePath\": \"/client\", \"allowedRoles\": [2]}","title":"Client Application"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.eventType_xref","timestamp":"2025-09-20 11:23:21"}
{"code":"MISSING_USER_ID","level":"error","message":"[execDML.js] DML operation failed: userID is required for audit trail","stack":"Error: userID is required for audit trail\n    at processDML (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dml/dmlProcessor.js:61:19)\n    at execDML (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execDML.js:13:30)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:157:13)\n    at Route.dispatch (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:117:3)\n    at handle (/home/paul/wf-monorepo-new/node_modules/router/index.js:435:11)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at /home/paul/wf-monorepo-new/node_modules/router/index.js:295:15\n    at processParams (/home/paul/wf-monorepo-new/node_modules/router/index.js:582:12)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/index.js:291:5)","status":400,"timestamp":"2025-09-20 11:23:21"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 400 (3ms)","timestamp":"2025-09-20 11:23:21"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.612896,"method":"POST","operation":"http_request","path":"/api/execDML","status":400},"timestamp":"2025-09-20 11:23:21"}
{"body":{"data":{"created_by":"Paul","description":"Customer-facing client application","eventType_id":2,"name":"wf-client","parent_id":1,"props":"{\"port\": 3000, \"routePath\": \"/client\", \"allowedRoles\": [2]}","title":"Client Application"},"method":"INSERT","table":"api_wf.eventType_xref","userID":"Paul"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-09-20 11:24:42"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-09-20 11:24:42"}
{"data":{"created_by":"Paul","description":"Customer-facing client application","eventType_id":2,"name":"wf-client","parent_id":1,"props":"{\"port\": 3000, \"routePath\": \"/client\", \"allowedRoles\": [2]}","title":"Client Application"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.eventType_xref","timestamp":"2025-09-20 11:24:42"}
{"code":"MISSING_USER_ID","level":"error","message":"[execDML.js] DML operation failed: userID is required for audit trail","stack":"Error: userID is required for audit trail\n    at processDML (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dml/dmlProcessor.js:61:19)\n    at execDML (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execDML.js:13:30)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:157:13)\n    at Route.dispatch (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:117:3)\n    at handle (/home/paul/wf-monorepo-new/node_modules/router/index.js:435:11)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at /home/paul/wf-monorepo-new/node_modules/router/index.js:295:15\n    at processParams (/home/paul/wf-monorepo-new/node_modules/router/index.js:582:12)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/index.js:291:5)","status":400,"timestamp":"2025-09-20 11:24:42"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 400 (1ms)","timestamp":"2025-09-20 11:24:42"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.304072,"method":"POST","operation":"http_request","path":"/api/execDML","status":400},"timestamp":"2025-09-20 11:24:42"}
{"body":{"data":{"description":"Customer-facing client application","eventType_id":2,"name":"wf-client","parent_id":1,"props":"{\"port\": 3000, \"routePath\": \"/client\", \"allowedRoles\": [2]}","title":"Client Application"},"method":"INSERT","table":"api_wf.eventType_xref"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-09-20 11:26:20"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-09-20 11:26:20"}
{"data":{"description":"Customer-facing client application","eventType_id":2,"name":"wf-client","parent_id":1,"props":"{\"port\": 3000, \"routePath\": \"/client\", \"allowedRoles\": [2]}","title":"Client Application"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.eventType_xref","timestamp":"2025-09-20 11:26:20"}
{"code":"MISSING_USER_ID","level":"error","message":"[execDML.js] DML operation failed: userID is required for audit trail","stack":"Error: userID is required for audit trail\n    at processDML (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dml/dmlProcessor.js:61:19)\n    at execDML (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execDML.js:13:30)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:157:13)\n    at Route.dispatch (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:117:3)\n    at handle (/home/paul/wf-monorepo-new/node_modules/router/index.js:435:11)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at /home/paul/wf-monorepo-new/node_modules/router/index.js:295:15\n    at processParams (/home/paul/wf-monorepo-new/node_modules/router/index.js:582:12)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/index.js:291:5)","status":400,"timestamp":"2025-09-20 11:26:20"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 400 (2ms)","timestamp":"2025-09-20 11:26:20"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.64733,"method":"POST","operation":"http_request","path":"/api/execDML","status":400},"timestamp":"2025-09-20 11:26:20"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-09-20 11:26:50"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-09-20 11:26:51"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-09-20 11:26:51"}
{"level":"debug","message":"[index.js]  Initializing routes","timestamp":"2025-09-20 11:26:51"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-09-20 11:26:51"}
{"0":"POST /api/execEventType","1":"GET /api/eventType/:xrefId","10":"POST /api/writeFileDirectly","11":"POST /api/initialize","12":"GET /api/util/list-routes","13":"POST /api/util/restart-server","14":"POST /api/auth/login","2":"POST /api/execDML","3":"POST /api/execCreateDoc","4":"GET /api/getDoc","5":"POST /api/studio/genFields","6":"GET /api/getVal","7":"POST /api/setVals","8":"POST /api/clearVals","9":"GET /api/studio/genPageConfig","level":"info","message":"[registerRoutes.js] Routes registered:","timestamp":"2025-09-20 11:26:51"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-09-20 11:26:51"}
{"level":"debug","message":"[index.js]  Routes initialized","timestamp":"2025-09-20 11:26:51"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-09-20 11:26:51"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-09-20 11:26:51"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-09-20 11:26:51"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-09-20 11:26:51"}
{"body":{"data":{"description":"Customer-facing client application","eventType_id":2,"name":"wf-client","parent_id":1,"props":"{\"port\": 3000, \"routePath\": \"/client\", \"allowedRoles\": [2]}","title":"Client Application"},"method":"INSERT","table":"api_wf.eventType_xref"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-09-20 11:27:11"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-09-20 11:27:11"}
{"data":{"description":"Customer-facing client application","eventType_id":2,"name":"wf-client","parent_id":1,"props":"{\"port\": 3000, \"routePath\": \"/client\", \"allowedRoles\": [2]}","title":"Client Application"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.eventType_xref","timestamp":"2025-09-20 11:27:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 11:27:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 11:27:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 11:27:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":276.500313,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 11:27:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 11:27:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 11:27:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 11:27:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 11:27:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":76.231383,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 11:27:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 11:27:12"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.eventType_xref (name, parent_id, eventType_id, title, description, props, created_at, created_by) VALUES ('wf-client', 1, 2, 'Client Application', 'Customer-facing client application', '{\"port\": 3000, \"routePath\": \"/client\", \"allowedRoles\": [2]}', NOW(), 'Paul')","timestamp":"2025-09-20 11:27:12"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-09-20 11:27:12"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-09-20 11:27:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":166.186892,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 11:27:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 11:27:12"}
{"level":"info","message":"[dmlProcessor.js] INSERT executed successfully on api_wf.eventType_xref","timestamp":"2025-09-20 11:27:12"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-09-20 11:27:12"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (525ms)","timestamp":"2025-09-20 11:27:12"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":524.932172,"method":"POST","operation":"http_request","path":"/api/execDML","status":200},"timestamp":"2025-09-20 11:27:12"}
{"body":{"data":{"description":"Administrative management application","eventType_id":2,"name":"wf-admin","parent_id":1,"props":"{\"port\": 3006, \"routePath\": \"/admin\", \"allowedRoles\": [1]}","title":"Admin Application"},"method":"INSERT","table":"api_wf.eventType_xref"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-09-20 11:27:20"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-09-20 11:27:20"}
{"data":{"description":"Administrative management application","eventType_id":2,"name":"wf-admin","parent_id":1,"props":"{\"port\": 3006, \"routePath\": \"/admin\", \"allowedRoles\": [1]}","title":"Admin Application"},"level":"debug","message":"[dmlProcessor.js] Processing INSERT on api_wf.eventType_xref","timestamp":"2025-09-20 11:27:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 11:27:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 11:27:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 11:27:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":81.166139,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 11:27:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 11:27:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 11:27:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 11:27:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 11:27:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":53.110653,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 11:27:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 11:27:20"}
{"level":"info","message":"[dmlProcessor.js] Executing INSERT SQL:","sql":"INSERT INTO api_wf.eventType_xref (name, parent_id, eventType_id, title, description, props, created_at, created_by) VALUES ('wf-admin', 1, 2, 'Admin Application', 'Administrative management application', '{\"port\": 3006, \"routePath\": \"/admin\", \"allowedRoles\": [1]}', NOW(), 'Paul')","timestamp":"2025-09-20 11:27:20"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-09-20 11:27:20"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-09-20 11:27:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":293.527588,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 11:27:21"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 11:27:21"}
{"level":"info","message":"[dmlProcessor.js] INSERT executed successfully on api_wf.eventType_xref","timestamp":"2025-09-20 11:27:21"}
{"level":"info","message":"[execDML.js] DML operation completed successfully","timestamp":"2025-09-20 11:27:21"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 200 (431ms)","timestamp":"2025-09-20 11:27:21"}
{"body":{"xrefId":45},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 11:27:37"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 11:27:37"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 45","timestamp":"2025-09-20 11:27:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 11:27:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 11:27:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 11:27:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":171.603068,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 11:27:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 11:27:37"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: AuthAppList","timestamp":"2025-09-20 11:27:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 11:27:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 11:27:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 11:27:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":65.742688,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 11:27:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 11:27:37"}
{"level":"debug","message":"[execEventType.js] Resolved :roleID → 1","timestamp":"2025-09-20 11:27:37"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT\r\n    comp_name,\r\n    JSON_UNQUOTE(JSON_EXTRACT(props, '$.routePath')) as routePath\r\n  FROM api_wf.vw_hier_components\r\n  WHERE parent_id = 1\r\n    AND template = 'App'\r\n    AND JSON_UNQUOTE(JSON_EXTRACT(props, '$.routePath')) IS NOT NULL\r\n    AND JSON_CONTAINS(JSON_EXTRACT(props, '$.allowedRoles'), CAST(1 AS JSON))\r\n  ORDER BY comp_name","timestamp":"2025-09-20 11:27:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 11:27:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 11:27:37"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 4","timestamp":"2025-09-20 11:27:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":104.737132,"method":"GET","operation":"database_query","rowCount":4,"success":true},"timestamp":"2025-09-20 11:27:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 11:27:37"}
{"level":"info","message":"[execEventType.js] EventType executed successfully: AuthAppList (xrefId: 45)","timestamp":"2025-09-20 11:27:37"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (346ms)","timestamp":"2025-09-20 11:27:37"}
{"body":{"values":{"0":{"paramName":"roleID","paramVal":"2"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-09-20 11:28:18"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-09-20 11:28:18"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 11:28:18"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 11:28:18"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 11:28:18"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":71.207508,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 11:28:18"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 11:28:18"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 11:28:18"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 11:28:18"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 11:28:18"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":39.10868,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 11:28:18"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 11:28:18"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-09-20 11:28:18"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-09-20 11:28:18"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":219.205667,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 11:28:19"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 11:28:19"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-09-20 11:28:19"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (332ms)","timestamp":"2025-09-20 11:28:19"}
{"body":{"xrefId":45},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 11:28:20"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 11:28:20"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 45","timestamp":"2025-09-20 11:28:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 11:28:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 11:28:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 11:28:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.691752,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 11:28:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 11:28:20"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: AuthAppList","timestamp":"2025-09-20 11:28:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 11:28:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 11:28:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 11:28:20"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":31.544916,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 11:28:20"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 11:28:20"}
{"level":"debug","message":"[execEventType.js] Resolved :roleID → 2","timestamp":"2025-09-20 11:28:20"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT\r\n    comp_name,\r\n    JSON_UNQUOTE(JSON_EXTRACT(props, '$.routePath')) as routePath\r\n  FROM api_wf.vw_hier_components\r\n  WHERE parent_id = 1\r\n    AND template = 'App'\r\n    AND JSON_UNQUOTE(JSON_EXTRACT(props, '$.routePath')) IS NOT NULL\r\n    AND JSON_CONTAINS(JSON_EXTRACT(props, '$.allowedRoles'), CAST(2 AS JSON))\r\n  ORDER BY comp_name","timestamp":"2025-09-20 11:28:20"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 11:28:20"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 11:28:20"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-09-20 11:28:21"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":132.955174,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 11:28:21"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 11:28:21"}
{"level":"info","message":"[execEventType.js] EventType executed successfully: AuthAppList (xrefId: 45)","timestamp":"2025-09-20 11:28:21"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (201ms)","timestamp":"2025-09-20 11:28:21"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-20 11:41:50"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/getVal","query":{"format":"raw","paramName":"*"},"timestamp":"2025-09-20 12:02:03"}
{"level":"http","message":"[getVal.js] GET /api/getVal?paramName=*&format=raw","timestamp":"2025-09-20 12:02:03"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 12:02:03"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 12:02:03"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-09-20 12:02:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":90.138657,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-09-20 12:02:04"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 12:02:04"}
{"level":"warn","message":"[getVal.js] No value found for parameter: *","timestamp":"2025-09-20 12:02:04"}
{"level":"info","message":"[app.js]  Response: GET /api/getVal 404 (92ms)","timestamp":"2025-09-20 12:02:04"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":92.23875,"method":"GET","operation":"http_request","path":"/api/getVal","status":404},"timestamp":"2025-09-20 12:02:04"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/getVal","query":{"paramName":"*"},"timestamp":"2025-09-20 12:02:10"}
{"level":"http","message":"[getVal.js] GET /api/getVal?paramName=*","timestamp":"2025-09-20 12:02:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 12:02:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 12:02:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-09-20 12:02:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.048295,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-09-20 12:02:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 12:02:10"}
{"level":"warn","message":"[getVal.js] No value found for parameter: *","timestamp":"2025-09-20 12:02:10"}
{"level":"info","message":"[app.js]  Response: GET /api/getVal 404 (38ms)","timestamp":"2025-09-20 12:02:10"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":38.219582,"method":"GET","operation":"http_request","path":"/api/getVal","status":404},"timestamp":"2025-09-20 12:02:10"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/getVal","timestamp":"2025-09-20 12:02:25"}
{"level":"http","message":"[getVal.js] GET /api/getVal","timestamp":"2025-09-20 12:02:25"}
{"level":"info","message":"[app.js]  Response: GET /api/getVal 400 (1ms)","timestamp":"2025-09-20 12:02:25"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.241703,"method":"GET","operation":"http_request","path":"/api/getVal","status":400},"timestamp":"2025-09-20 12:02:25"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/getVal","query":{"format":"raw","paramName":"*"},"timestamp":"2025-09-20 12:04:55"}
{"level":"http","message":"[getVal.js] GET /api/getVal?paramName=*&format=raw","timestamp":"2025-09-20 12:04:55"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 12:04:55"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 12:04:55"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-09-20 12:04:55"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":133.338013,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-09-20 12:04:55"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 12:04:55"}
{"level":"warn","message":"[getVal.js] No value found for parameter: *","timestamp":"2025-09-20 12:04:55"}
{"level":"info","message":"[app.js]  Response: GET /api/getVal 404 (135ms)","timestamp":"2025-09-20 12:04:55"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":135.205014,"method":"GET","operation":"http_request","path":"/api/getVal","status":404},"timestamp":"2025-09-20 12:04:55"}
{"body":{"eventTypeID":49},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 12:07:54"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 12:07:54"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 400 (1ms)","timestamp":"2025-09-20 12:07:54"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.805163,"method":"POST","operation":"http_request","path":"/api/execEventType","status":400},"timestamp":"2025-09-20 12:07:54"}
{"body":{"eventTypeID":23},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 12:08:40"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 12:08:40"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 400 (1ms)","timestamp":"2025-09-20 12:08:40"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.017884,"method":"POST","operation":"http_request","path":"/api/execEventType","status":400},"timestamp":"2025-09-20 12:08:40"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-20 12:41:50"}
{"body":{"method":"CALL","procedure":"api_wf.sp_hier_page(23)"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-09-20 12:53:35"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-09-20 12:53:35"}
{"level":"debug","message":"[dmlProcessor.js] Processing CALL on undefined","timestamp":"2025-09-20 12:53:35"}
{"code":"MISSING_REQUIRED_FIELDS","level":"error","message":"[execDML.js] DML operation failed: method, table, and data are required","stack":"Error: method, table, and data are required\n    at processDML (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dml/dmlProcessor.js:42:19)\n    at execDML (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execDML.js:13:30)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:157:13)\n    at Route.dispatch (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:117:3)\n    at handle (/home/paul/wf-monorepo-new/node_modules/router/index.js:435:11)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at /home/paul/wf-monorepo-new/node_modules/router/index.js:295:15\n    at processParams (/home/paul/wf-monorepo-new/node_modules/router/index.js:582:12)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/index.js:291:5)","status":400,"timestamp":"2025-09-20 12:53:35"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 400 (1ms)","timestamp":"2025-09-20 12:53:35"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.267698,"method":"POST","operation":"http_request","path":"/api/execDML","status":400},"timestamp":"2025-09-20 12:53:35"}
{"body":{"data":{},"method":"SELECT","table":"api_wf.sp_hier_page(23)"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-09-20 12:53:39"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-09-20 12:53:39"}
{"data":{},"level":"debug","message":"[dmlProcessor.js] Processing SELECT on api_wf.sp_hier_page(23)","timestamp":"2025-09-20 12:53:39"}
{"code":"INVALID_METHOD","level":"error","message":"[execDML.js] DML operation failed: Method must be INSERT, UPDATE, or DELETE. Got: SELECT","stack":"Error: Method must be INSERT, UPDATE, or DELETE. Got: SELECT\n    at processDML (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dml/dmlProcessor.js:50:19)\n    at execDML (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execDML.js:13:30)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:157:13)\n    at Route.dispatch (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:117:3)\n    at handle (/home/paul/wf-monorepo-new/node_modules/router/index.js:435:11)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at /home/paul/wf-monorepo-new/node_modules/router/index.js:295:15\n    at processParams (/home/paul/wf-monorepo-new/node_modules/router/index.js:582:12)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/index.js:291:5)","status":400,"timestamp":"2025-09-20 12:53:39"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 400 (1ms)","timestamp":"2025-09-20 12:53:39"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.189329,"method":"POST","operation":"http_request","path":"/api/execDML","status":400},"timestamp":"2025-09-20 12:53:39"}
{"body":{"sql":"CALL api_wf.sp_hier_page(23)"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/query","timestamp":"2025-09-20 12:53:47"}
{"level":"warn","message":"[server.js] Route not found: POST /api/query","timestamp":"2025-09-20 12:53:47"}
{"level":"info","message":"[app.js]  Response: POST /api/query 404 (1ms)","timestamp":"2025-09-20 12:53:47"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.166412,"method":"POST","operation":"http_request","path":"/api/query","status":404},"timestamp":"2025-09-20 12:53:47"}
{"body":{"query":"CALL api_wf.sp_hier_page(23)"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/db","timestamp":"2025-09-20 12:53:53"}
{"level":"warn","message":"[server.js] Route not found: POST /api/db","timestamp":"2025-09-20 12:53:53"}
{"level":"info","message":"[app.js]  Response: POST /api/db 404 (1ms)","timestamp":"2025-09-20 12:53:53"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.828218,"method":"POST","operation":"http_request","path":"/api/db","status":404},"timestamp":"2025-09-20 12:53:53"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/","timestamp":"2025-09-20 12:54:00"}
{"contentType":"application/json","eventType":"query","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 13:02:02"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 13:02:02"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 400 (1ms)","timestamp":"2025-09-20 13:02:02"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.985162,"method":"POST","operation":"http_request","path":"/api/execEventType","status":400},"timestamp":"2025-09-20 13:02:02"}
{"body":{"params":{},"xrefId":39},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 13:03:11"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 13:03:11"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 39","timestamp":"2025-09-20 13:03:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:03:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:03:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 13:03:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":112.015687,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 13:03:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:03:11"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: pageConfigHier","timestamp":"2025-09-20 13:03:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:03:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:03:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 13:03:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":67.826118,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 13:03:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:03:11"}
{"level":"debug","message":"[execEventType.js] Resolved :pageID → 49","timestamp":"2025-09-20 13:03:11"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_page(49)","timestamp":"2025-09-20 13:03:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:03:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:03:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-09-20 13:03:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":106.416104,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 13:03:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:03:12"}
{"level":"info","message":"[execEventType.js] EventType executed successfully: pageConfigHier (xrefId: 39)","timestamp":"2025-09-20 13:03:12"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (289ms)","timestamp":"2025-09-20 13:03:12"}
{"body":{"params":{"xrefID":"23"},"xrefId":52},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 13:07:51"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 13:07:51"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 52","timestamp":"2025-09-20 13:07:51"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:07:51"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:07:51"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 13:07:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":180.196404,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 13:07:51"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:07:51"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: hierReturn","timestamp":"2025-09-20 13:07:51"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:07:51"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:07:51"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-09-20 13:07:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":154.447939,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-09-20 13:07:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:07:52"}
{"level":"warn","message":"[getVal.js] No value found for parameter: xrefID","timestamp":"2025-09-20 13:07:52"}
{"level":"warn","message":"[execEventType.js] No context value found for parameter: xrefID","timestamp":"2025-09-20 13:07:52"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_page(:xrefID)","timestamp":"2025-09-20 13:07:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:07:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:07:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":157.023705,"errorCode":"ER_PARSE_ERROR","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-20 13:07:52"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':xrefID)' at line 1","sql":"CALL api_wf.sp_hier_page(:xrefID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':xrefID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':xrefID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:93:20)","timestamp":"2025-09-20 13:07:52"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-20 13:07:52"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:93:20)","timestamp":"2025-09-20 13:07:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:07:52"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':xrefID)' at line 1","sql":"CALL api_wf.sp_hier_page(:xrefID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':xrefID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':xrefID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:93:20)","timestamp":"2025-09-20 13:07:52"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 500 (495ms)","timestamp":"2025-09-20 13:07:52"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":495.434151,"method":"POST","operation":"http_request","path":"/api/execEventType","status":500},"timestamp":"2025-09-20 13:07:52"}
{"body":{"params":{":xrefID":"23"},"xrefId":52},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 13:07:58"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 13:07:58"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 52","timestamp":"2025-09-20 13:07:58"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:07:58"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:07:58"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 13:07:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":119.813009,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 13:07:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:07:59"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: hierReturn","timestamp":"2025-09-20 13:07:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:07:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:07:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-09-20 13:07:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":29.615118,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-09-20 13:07:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:07:59"}
{"level":"warn","message":"[getVal.js] No value found for parameter: xrefID","timestamp":"2025-09-20 13:07:59"}
{"level":"warn","message":"[execEventType.js] No context value found for parameter: xrefID","timestamp":"2025-09-20 13:07:59"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_page(:xrefID)","timestamp":"2025-09-20 13:07:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:07:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:07:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":166.414678,"errorCode":"ER_PARSE_ERROR","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-20 13:07:59"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':xrefID)' at line 1","sql":"CALL api_wf.sp_hier_page(:xrefID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':xrefID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':xrefID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:93:20)","timestamp":"2025-09-20 13:07:59"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-20 13:07:59"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:93:20)","timestamp":"2025-09-20 13:07:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:07:59"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':xrefID)' at line 1","sql":"CALL api_wf.sp_hier_page(:xrefID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':xrefID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':xrefID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:93:20)","timestamp":"2025-09-20 13:07:59"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 500 (319ms)","timestamp":"2025-09-20 13:07:59"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":319.439462,"method":"POST","operation":"http_request","path":"/api/execEventType","status":500},"timestamp":"2025-09-20 13:07:59"}
{"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventType/52","timestamp":"2025-09-20 13:08:05"}
{"level":"http","message":"[fetchEventType.js] GET /api/eventType/52","timestamp":"2025-09-20 13:08:05"}
{"level":"debug","message":"[fetchEventType.js] Fetching eventType from vw_hier_components with xrefId: 52","timestamp":"2025-09-20 13:08:05"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:08:05"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:08:05"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 13:08:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":141.975821,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 13:08:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:08:05"}
{"level":"warn","message":"[fetchEventType.js] Invalid JSON in props field for xrefId 52: Unexpected token 'C', \"CALL api_w\"... is not valid JSON","timestamp":"2025-09-20 13:08:05"}
{"level":"info","message":"[fetchEventType.js] EventType fetched: hierReturn (xrefId: 52)","timestamp":"2025-09-20 13:08:05"}
{"level":"info","message":"[app.js]  Response: GET /api/eventType/52 200 (144ms)","timestamp":"2025-09-20 13:08:05"}
{"body":{"params":{"xrefID":23},"xrefId":52},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 13:08:16"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 13:08:16"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 52","timestamp":"2025-09-20 13:08:16"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:08:16"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:08:16"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 13:08:16"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":88.98288,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 13:08:16"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:08:16"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: hierReturn","timestamp":"2025-09-20 13:08:16"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:08:16"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:08:16"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 0","timestamp":"2025-09-20 13:08:16"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":32.47774,"method":"GET","operation":"database_query","rowCount":0,"success":true},"timestamp":"2025-09-20 13:08:16"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:08:16"}
{"level":"warn","message":"[getVal.js] No value found for parameter: xrefID","timestamp":"2025-09-20 13:08:16"}
{"level":"warn","message":"[execEventType.js] No context value found for parameter: xrefID","timestamp":"2025-09-20 13:08:16"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_page(:xrefID)","timestamp":"2025-09-20 13:08:16"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:08:16"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:08:16"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":31.285705,"errorCode":"ER_PARSE_ERROR","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-20 13:08:17"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':xrefID)' at line 1","sql":"CALL api_wf.sp_hier_page(:xrefID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':xrefID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':xrefID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:93:20)","timestamp":"2025-09-20 13:08:17"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-20 13:08:17"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:93:20)","timestamp":"2025-09-20 13:08:17"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:08:17"}
{"code":"ER_PARSE_ERROR","errno":1064,"level":"error","message":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':xrefID)' at line 1","sql":"CALL api_wf.sp_hier_page(:xrefID)","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':xrefID)' at line 1","sqlState":"42000","stack":"Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':xrefID)' at line 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:93:20)","timestamp":"2025-09-20 13:08:17"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 500 (155ms)","timestamp":"2025-09-20 13:08:17"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":155.371858,"method":"POST","operation":"http_request","path":"/api/execEventType","status":500},"timestamp":"2025-09-20 13:08:17"}
{"body":{"keyValuePairs":{"xrefID":"23"},"userEmail":"pc7900@gmail.com"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-09-20 13:10:22"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-09-20 13:10:22"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 400 (1ms)","timestamp":"2025-09-20 13:10:22"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.905625,"method":"POST","operation":"http_request","path":"/api/setVals","status":400},"timestamp":"2025-09-20 13:10:22"}
{"body":{"userEmail":"pc7900@gmail.com","values":{"0":{"key":"xrefID","value":"23"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-09-20 13:10:32"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-09-20 13:10:32"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:10:32"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:10:32"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 13:10:32"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":32.657529,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 13:10:32"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:10:32"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:10:32"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:10:32"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 13:10:32"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":62.6991,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 13:10:32"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:10:32"}
{"level":"error","message":"[setVals.js] Error in setValsDirect: Each value must have a paramName","stack":"Error: Each value must have a paramName\n    at setValsDirect (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/setVals.js:20:15)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async setVals (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/setVals.js:68:21)","timestamp":"2025-09-20 13:10:32"}
{"level":"error","message":"[setVals.js] Error in setVals controller: Each value must have a paramName","stack":"Error: Each value must have a paramName\n    at setValsDirect (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/setVals.js:20:15)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async setVals (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/setVals.js:68:21)","timestamp":"2025-09-20 13:10:32"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 500 (98ms)","timestamp":"2025-09-20 13:10:32"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":98.233294,"method":"POST","operation":"http_request","path":"/api/setVals","status":500},"timestamp":"2025-09-20 13:10:32"}
{"body":{"userEmail":"pc7900@gmail.com","values":{"0":{"paramName":"xrefID","value":"23"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-09-20 13:10:48"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-09-20 13:10:48"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:10:48"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:10:48"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 13:10:48"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.097438,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 13:10:48"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:10:48"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:10:48"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:10:48"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 13:10:48"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":31.275762,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 13:10:48"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:10:48"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-09-20 13:10:48"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-09-20 13:10:48"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":187.972692,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 13:10:48"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:10:48"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-09-20 13:10:48"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (257ms)","timestamp":"2025-09-20 13:10:48"}
{"body":{"params":{},"xrefId":52},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 13:10:54"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 13:10:54"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 52","timestamp":"2025-09-20 13:10:54"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:10:54"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:10:54"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 13:10:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.641413,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 13:10:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:10:54"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: hierReturn","timestamp":"2025-09-20 13:10:54"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:10:54"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:10:54"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 13:10:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":71.147348,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 13:10:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:10:54"}
{"level":"debug","message":"[execEventType.js] Resolved :xrefID → 'undefined'","timestamp":"2025-09-20 13:10:54"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_page('undefined')","timestamp":"2025-09-20 13:10:54"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:10:54"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:10:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":67.526788,"errorCode":"ER_TRUNCATED_WRONG_VALUE_FOR_FIELD","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-20 13:10:54"}
{"code":"ER_TRUNCATED_WRONG_VALUE_FOR_FIELD","errno":1366,"level":"error","message":"Incorrect integer value: 'undefined' for column 'pageID' at row 1","sql":"CALL api_wf.sp_hier_page('undefined')","sqlMessage":"Incorrect integer value: 'undefined' for column 'pageID' at row 1","sqlState":"HY000","stack":"Error: Incorrect integer value: 'undefined' for column 'pageID' at row 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:93:20)","timestamp":"2025-09-20 13:10:54"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-20 13:10:54"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:93:20)","timestamp":"2025-09-20 13:10:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:10:54"}
{"code":"ER_TRUNCATED_WRONG_VALUE_FOR_FIELD","errno":1366,"level":"error","message":"Incorrect integer value: 'undefined' for column 'pageID' at row 1","sql":"CALL api_wf.sp_hier_page('undefined')","sqlMessage":"Incorrect integer value: 'undefined' for column 'pageID' at row 1","sqlState":"HY000","stack":"Error: Incorrect integer value: 'undefined' for column 'pageID' at row 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:93:20)","timestamp":"2025-09-20 13:10:54"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 500 (178ms)","timestamp":"2025-09-20 13:10:54"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":178.391447,"method":"POST","operation":"http_request","path":"/api/execEventType","status":500},"timestamp":"2025-09-20 13:10:54"}
{"body":{"userEmail":"pc7900@gmail.com","values":{"0":{"paramName":"pageID","value":"23"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-09-20 13:11:42"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-09-20 13:11:42"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:11:42"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:11:42"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 13:11:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":30.581604,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 13:11:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:11:42"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:11:42"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:11:42"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 13:11:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":55.801463,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 13:11:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:11:42"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-09-20 13:11:42"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-09-20 13:11:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":270.770856,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 13:11:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:11:42"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-09-20 13:11:42"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (361ms)","timestamp":"2025-09-20 13:11:42"}
{"body":{"params":{},"xrefId":52},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 13:11:46"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 13:11:46"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 52","timestamp":"2025-09-20 13:11:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:11:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:11:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 13:11:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":54.256504,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 13:11:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:11:46"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: hierReturn","timestamp":"2025-09-20 13:11:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:11:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:11:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 13:11:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":138.83723,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 13:11:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:11:46"}
{"level":"debug","message":"[execEventType.js] Resolved :xrefID → 'undefined'","timestamp":"2025-09-20 13:11:46"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_page('undefined')","timestamp":"2025-09-20 13:11:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:11:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:11:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":66.53964,"errorCode":"ER_TRUNCATED_WRONG_VALUE_FOR_FIELD","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-20 13:11:46"}
{"code":"ER_TRUNCATED_WRONG_VALUE_FOR_FIELD","errno":1366,"level":"error","message":"Incorrect integer value: 'undefined' for column 'pageID' at row 1","sql":"CALL api_wf.sp_hier_page('undefined')","sqlMessage":"Incorrect integer value: 'undefined' for column 'pageID' at row 1","sqlState":"HY000","stack":"Error: Incorrect integer value: 'undefined' for column 'pageID' at row 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:93:20)","timestamp":"2025-09-20 13:11:46"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-20 13:11:46"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:93:20)","timestamp":"2025-09-20 13:11:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:11:46"}
{"code":"ER_TRUNCATED_WRONG_VALUE_FOR_FIELD","errno":1366,"level":"error","message":"Incorrect integer value: 'undefined' for column 'pageID' at row 1","sql":"CALL api_wf.sp_hier_page('undefined')","sqlMessage":"Incorrect integer value: 'undefined' for column 'pageID' at row 1","sqlState":"HY000","stack":"Error: Incorrect integer value: 'undefined' for column 'pageID' at row 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:93:20)","timestamp":"2025-09-20 13:11:46"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 500 (264ms)","timestamp":"2025-09-20 13:11:46"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":263.923666,"method":"POST","operation":"http_request","path":"/api/execEventType","status":500},"timestamp":"2025-09-20 13:11:46"}
{"body":{"params":{},"xrefId":52},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 13:19:25"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 13:19:25"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 52","timestamp":"2025-09-20 13:19:25"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:19:25"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:19:25"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 13:19:25"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.881986,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 13:19:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:19:25"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: hierReturn","timestamp":"2025-09-20 13:19:25"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:19:25"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:19:25"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 13:19:25"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":45.173792,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 13:19:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:19:25"}
{"level":"debug","message":"[execEventType.js] Resolved :xrefID → 31","timestamp":"2025-09-20 13:19:25"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_page(31)","timestamp":"2025-09-20 13:19:25"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:19:25"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:19:25"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-09-20 13:19:25"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":147.378296,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 13:19:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:19:25"}
{"level":"info","message":"[execEventType.js] EventType executed successfully: hierReturn (xrefId: 52)","timestamp":"2025-09-20 13:19:25"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (239ms)","timestamp":"2025-09-20 13:19:25"}
{"body":{"userEmail":"pc7900@gmail.com","values":{"0":{"paramName":"xrefID","value":"23"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-09-20 13:19:31"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-09-20 13:19:31"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:19:31"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:19:31"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 13:19:31"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":65.130506,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 13:19:31"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:19:31"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:19:31"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:19:31"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 13:19:31"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.134408,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 13:19:31"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:19:31"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-09-20 13:19:31"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-09-20 13:19:31"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":207.376392,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 13:19:31"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:19:31"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-09-20 13:19:31"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (312ms)","timestamp":"2025-09-20 13:19:31"}
{"body":{"params":{},"xrefId":52},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 13:19:34"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 13:19:34"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 52","timestamp":"2025-09-20 13:19:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:19:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:19:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 13:19:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.381454,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 13:19:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:19:34"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: hierReturn","timestamp":"2025-09-20 13:19:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:19:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:19:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 13:19:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":32.755198,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 13:19:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:19:34"}
{"level":"debug","message":"[execEventType.js] Resolved :xrefID → 'undefined'","timestamp":"2025-09-20 13:19:34"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_page('undefined')","timestamp":"2025-09-20 13:19:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 13:19:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 13:19:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.199942,"errorCode":"ER_TRUNCATED_WRONG_VALUE_FOR_FIELD","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-20 13:19:34"}
{"code":"ER_TRUNCATED_WRONG_VALUE_FOR_FIELD","errno":1366,"level":"error","message":"Incorrect integer value: 'undefined' for column 'pageID' at row 1","sql":"CALL api_wf.sp_hier_page('undefined')","sqlMessage":"Incorrect integer value: 'undefined' for column 'pageID' at row 1","sqlState":"HY000","stack":"Error: Incorrect integer value: 'undefined' for column 'pageID' at row 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:93:20)","timestamp":"2025-09-20 13:19:34"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-20 13:19:34"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:93:20)","timestamp":"2025-09-20 13:19:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 13:19:34"}
{"code":"ER_TRUNCATED_WRONG_VALUE_FOR_FIELD","errno":1366,"level":"error","message":"Incorrect integer value: 'undefined' for column 'pageID' at row 1","sql":"CALL api_wf.sp_hier_page('undefined')","sqlMessage":"Incorrect integer value: 'undefined' for column 'pageID' at row 1","sqlState":"HY000","stack":"Error: Incorrect integer value: 'undefined' for column 'pageID' at row 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:93:20)","timestamp":"2025-09-20 13:19:34"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 500 (104ms)","timestamp":"2025-09-20 13:19:34"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":103.785745,"method":"POST","operation":"http_request","path":"/api/execEventType","status":500},"timestamp":"2025-09-20 13:19:34"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-20 13:41:50"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-20 14:41:50"}
{"body":{"userEmail":"pc7900@gmail.com","values":{"0":{"paramName":"xrefID","value":"23"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-09-20 15:10:44"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-09-20 15:10:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 15:10:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 15:10:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 15:10:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":68.488077,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 15:10:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 15:10:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 15:10:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 15:10:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 15:10:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":125.630818,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 15:10:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 15:10:44"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-09-20 15:10:44"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-09-20 15:10:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":307.05042,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 15:10:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 15:10:44"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-09-20 15:10:44"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (504ms)","timestamp":"2025-09-20 15:10:44"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":503.746965,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-09-20 15:10:44"}
{"body":{"params":{},"xrefId":52},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 15:10:45"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 15:10:45"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 52","timestamp":"2025-09-20 15:10:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 15:10:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 15:10:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 15:10:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":85.091919,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 15:10:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 15:10:45"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: hierReturn","timestamp":"2025-09-20 15:10:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 15:10:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 15:10:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 15:10:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":55.406302,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 15:10:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 15:10:45"}
{"level":"debug","message":"[execEventType.js] Resolved :xrefID → 'undefined'","timestamp":"2025-09-20 15:10:45"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_page('undefined')","timestamp":"2025-09-20 15:10:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 15:10:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 15:10:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":149.996292,"errorCode":"ER_TRUNCATED_WRONG_VALUE_FOR_FIELD","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-20 15:10:45"}
{"code":"ER_TRUNCATED_WRONG_VALUE_FOR_FIELD","errno":1366,"level":"error","message":"Incorrect integer value: 'undefined' for column 'pageID' at row 1","sql":"CALL api_wf.sp_hier_page('undefined')","sqlMessage":"Incorrect integer value: 'undefined' for column 'pageID' at row 1","sqlState":"HY000","stack":"Error: Incorrect integer value: 'undefined' for column 'pageID' at row 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:93:20)","timestamp":"2025-09-20 15:10:45"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-20 15:10:45"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:93:20)","timestamp":"2025-09-20 15:10:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 15:10:45"}
{"code":"ER_TRUNCATED_WRONG_VALUE_FOR_FIELD","errno":1366,"level":"error","message":"Incorrect integer value: 'undefined' for column 'pageID' at row 1","sql":"CALL api_wf.sp_hier_page('undefined')","sqlMessage":"Incorrect integer value: 'undefined' for column 'pageID' at row 1","sqlState":"HY000","stack":"Error: Incorrect integer value: 'undefined' for column 'pageID' at row 1\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:93:20)","timestamp":"2025-09-20 15:10:45"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 500 (296ms)","timestamp":"2025-09-20 15:10:45"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":295.52177,"method":"POST","operation":"http_request","path":"/api/execEventType","status":500},"timestamp":"2025-09-20 15:10:45"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-09-20 15:13:15"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-09-20 15:13:15"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-09-20 15:13:15"}
{"level":"debug","message":"[index.js]  Initializing routes","timestamp":"2025-09-20 15:13:15"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-09-20 15:13:15"}
{"0":"POST /api/execEventType","1":"GET /api/eventType/:xrefId","10":"POST /api/writeFileDirectly","11":"POST /api/initialize","12":"GET /api/util/list-routes","13":"POST /api/util/restart-server","14":"POST /api/auth/login","2":"POST /api/execDML","3":"POST /api/execCreateDoc","4":"GET /api/getDoc","5":"POST /api/studio/genFields","6":"GET /api/getVal","7":"POST /api/setVals","8":"POST /api/clearVals","9":"GET /api/studio/genPageConfig","level":"info","message":"[registerRoutes.js] Routes registered:","timestamp":"2025-09-20 15:13:15"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-09-20 15:13:15"}
{"level":"debug","message":"[index.js]  Routes initialized","timestamp":"2025-09-20 15:13:15"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-09-20 15:13:15"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-09-20 15:13:15"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-09-20 15:13:15"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-09-20 15:13:15"}
{"body":{"userEmail":"pc7900@gmail.com","values":{"0":{"paramName":"xrefID","value":"23"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-09-20 15:13:46"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-09-20 15:13:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 15:13:47"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 15:13:47"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 15:13:47"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":213.697135,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 15:13:47"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 15:13:47"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 15:13:47"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 15:13:47"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 15:13:47"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":77.986379,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 15:13:47"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 15:13:47"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-09-20 15:13:47"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-09-20 15:13:47"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":156.333749,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 15:13:47"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 15:13:47"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-09-20 15:13:47"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (452ms)","timestamp":"2025-09-20 15:13:47"}
{"body":{"userEmail":"pc7900@gmail.com","values":{"0":{"paramName":"xrefID","paramVal":"23"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-09-20 15:17:28"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-09-20 15:17:28"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 15:17:28"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 15:17:28"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 15:17:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":129.004904,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 15:17:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 15:17:28"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 15:17:28"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 15:17:28"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 15:17:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":75.409616,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 15:17:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 15:17:28"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-09-20 15:17:28"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-09-20 15:17:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":329.6991,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 15:17:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 15:17:28"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-09-20 15:17:28"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (537ms)","timestamp":"2025-09-20 15:17:28"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":537.417341,"method":"POST","operation":"http_request","path":"/api/setVals","status":200},"timestamp":"2025-09-20 15:17:28"}
{"body":{"params":{},"xrefId":52},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 15:17:33"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 15:17:33"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 52","timestamp":"2025-09-20 15:17:33"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 15:17:33"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 15:17:33"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 15:17:33"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":213.321889,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 15:17:33"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 15:17:33"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: hierReturn","timestamp":"2025-09-20 15:17:33"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 15:17:33"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 15:17:33"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 15:17:33"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":201.42553,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 15:17:33"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 15:17:33"}
{"level":"debug","message":"[execEventType.js] Resolved :xrefID → 23","timestamp":"2025-09-20 15:17:33"}
{"level":"debug","message":"[execEventType.js] Executing SQL: CALL api_wf.sp_hier_page(23)","timestamp":"2025-09-20 15:17:33"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 15:17:33"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 15:17:33"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":101.564359,"errorCode":"ER_BAD_FIELD_ERROR","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-09-20 15:17:33"}
{"code":"ER_BAD_FIELD_ERROR","errno":1054,"level":"error","message":"Unknown column 'xrefID' in 'where clause'","sql":"CALL api_wf.sp_hier_page(23)","sqlMessage":"Unknown column 'xrefID' in 'where clause'","sqlState":"42S22","stack":"Error: Unknown column 'xrefID' in 'where clause'\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:93:20)","timestamp":"2025-09-20 15:17:33"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-09-20 15:17:33"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:93:20)","timestamp":"2025-09-20 15:17:33"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 15:17:33"}
{"code":"ER_BAD_FIELD_ERROR","errno":1054,"level":"error","message":"Unknown column 'xrefID' in 'where clause'","sql":"CALL api_wf.sp_hier_page(23)","sqlMessage":"Unknown column 'xrefID' in 'where clause'","sqlState":"42S22","stack":"Error: Unknown column 'xrefID' in 'where clause'\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async execEventType (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execEventType.js:93:20)","timestamp":"2025-09-20 15:17:33"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 500 (524ms)","timestamp":"2025-09-20 15:17:33"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":524.119087,"method":"POST","operation":"http_request","path":"/api/execEventType","status":500},"timestamp":"2025-09-20 15:17:33"}
{"body":{"params":{},"xrefId":39},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 15:20:19"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 15:20:19"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 39","timestamp":"2025-09-20 15:20:19"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 15:20:19"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 15:20:19"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 15:20:19"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":257.486894,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 15:20:19"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 15:20:19"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: pageConfigHier","timestamp":"2025-09-20 15:20:19"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 15:20:19"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 15:20:19"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 15:20:19"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":103.748392,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 15:20:19"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 15:20:19"}
{"level":"debug","message":"[execEventType.js] Resolved :xrefID → 23","timestamp":"2025-09-20 15:20:19"}
{"level":"debug","message":"[execEventType.js] Executing SQL: -- set xrefID to the page first\r\nCALL api_wf.sp_hier_structure(23) ","timestamp":"2025-09-20 15:20:19"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 15:20:19"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 15:20:19"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-09-20 15:20:19"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":211.268529,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 15:20:19"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 15:20:19"}
{"level":"info","message":"[execEventType.js] EventType executed successfully: pageConfigHier (xrefId: 39)","timestamp":"2025-09-20 15:20:19"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (576ms)","timestamp":"2025-09-20 15:20:19"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":576.280925,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-09-20 15:20:19"}
{"body":{"userEmail":"pc7900@gmail.com","values":{"0":{"paramName":"xrefID","paramVal":"24"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-09-20 15:21:44"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-09-20 15:21:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 15:21:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 15:21:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 15:21:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.859854,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 15:21:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 15:21:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 15:21:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 15:21:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 15:21:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.640057,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 15:21:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 15:21:44"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-09-20 15:21:44"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-09-20 15:21:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":198.768558,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 15:21:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 15:21:44"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-09-20 15:21:44"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (273ms)","timestamp":"2025-09-20 15:21:44"}
{"body":{"params":{},"xrefId":39},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 15:21:47"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 15:21:47"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 39","timestamp":"2025-09-20 15:21:47"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 15:21:47"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 15:21:47"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 15:21:48"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":76.318403,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 15:21:48"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 15:21:48"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: pageConfigHier","timestamp":"2025-09-20 15:21:48"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 15:21:48"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 15:21:48"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 15:21:48"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":102.322247,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 15:21:48"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 15:21:48"}
{"level":"debug","message":"[execEventType.js] Resolved :xrefID → 24","timestamp":"2025-09-20 15:21:48"}
{"level":"debug","message":"[execEventType.js] Executing SQL: -- set xrefID to the page first\r\nCALL api_wf.sp_hier_structure(24) ","timestamp":"2025-09-20 15:21:48"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 15:21:48"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 15:21:48"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-09-20 15:21:48"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":203.433743,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 15:21:48"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 15:21:48"}
{"level":"info","message":"[execEventType.js] EventType executed successfully: pageConfigHier (xrefId: 39)","timestamp":"2025-09-20 15:21:48"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (385ms)","timestamp":"2025-09-20 15:21:48"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-20 15:28:15"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-20 16:28:15"}
{"body":{"userEmail":"pc7900@gmail.com","values":{"0":{"paramName":"xrefID","paramVal":"40"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-09-20 17:07:50"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-09-20 17:07:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 17:07:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 17:07:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 17:07:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.126163,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 17:07:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 17:07:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 17:07:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 17:07:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 17:07:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":110.975168,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 17:07:51"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 17:07:51"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-09-20 17:07:51"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-09-20 17:07:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":305.285122,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 17:07:51"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 17:07:51"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-09-20 17:07:51"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (462ms)","timestamp":"2025-09-20 17:07:51"}
{"body":{"params":{},"xrefId":39},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 17:07:54"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 17:07:54"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 39","timestamp":"2025-09-20 17:07:54"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 17:07:54"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 17:07:54"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 17:07:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.049335,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 17:07:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 17:07:54"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: pageConfigHier","timestamp":"2025-09-20 17:07:54"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 17:07:54"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 17:07:54"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 17:07:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.902892,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 17:07:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 17:07:54"}
{"level":"debug","message":"[execEventType.js] Resolved :xrefID → 40","timestamp":"2025-09-20 17:07:54"}
{"level":"debug","message":"[execEventType.js] Executing SQL: -- set xrefID to the page first\r\nCALL api_wf.sp_hier_structure(40) ","timestamp":"2025-09-20 17:07:54"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 17:07:54"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 17:07:54"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-09-20 17:07:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":75.120688,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 17:07:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 17:07:54"}
{"level":"info","message":"[execEventType.js] EventType executed successfully: pageConfigHier (xrefId: 39)","timestamp":"2025-09-20 17:07:54"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (153ms)","timestamp":"2025-09-20 17:07:54"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-20 17:28:15"}
{"body":{"userEmail":"pc7900@gmail.com","values":{"0":{"paramName":"xrefID","paramVal":"23"}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-09-20 17:53:29"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-09-20 17:53:29"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 17:53:29"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 17:53:29"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 17:53:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":41.192134,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 17:53:29"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 17:53:29"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 17:53:29"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 17:53:29"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 17:53:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.920952,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 17:53:29"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 17:53:29"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-09-20 17:53:29"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-09-20 17:53:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":294.391455,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 17:53:29"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 17:53:29"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-09-20 17:53:29"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (374ms)","timestamp":"2025-09-20 17:53:29"}
{"body":{"params":{},"xrefId":39},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-09-20 17:53:32"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-09-20 17:53:32"}
{"level":"debug","message":"[execEventType.js] Fetching eventType with xrefId: 39","timestamp":"2025-09-20 17:53:32"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 17:53:32"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 17:53:32"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 17:53:32"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":51.050937,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 17:53:32"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 17:53:32"}
{"level":"debug","message":"[execEventType.js] Found ServerQuery: pageConfigHier","timestamp":"2025-09-20 17:53:32"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 17:53:32"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 17:53:32"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-09-20 17:53:32"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.274338,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-09-20 17:53:32"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 17:53:32"}
{"level":"debug","message":"[execEventType.js] Resolved :xrefID → 23","timestamp":"2025-09-20 17:53:32"}
{"level":"debug","message":"[execEventType.js] Executing SQL: -- set xrefID to the page first\r\nCALL api_wf.sp_hier_structure(23) ","timestamp":"2025-09-20 17:53:32"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-09-20 17:53:32"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-09-20 17:53:32"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-09-20 17:53:33"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":45.751998,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-09-20 17:53:33"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-09-20 17:53:33"}
{"level":"info","message":"[execEventType.js] EventType executed successfully: pageConfigHier (xrefId: 39)","timestamp":"2025-09-20 17:53:33"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (135ms)","timestamp":"2025-09-20 17:53:33"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-20 18:28:15"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-09-20 19:28:15"}
