{"body":{"values":{"0":{"paramName":"ingrTypeID","paramVal":25}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-03 00:00:00"}
{"level":"info","message":"Log file rotated","newFilename":"/home/paul/wf-monorepo-new/apps/wf-server/server/logs/application-2025-10-03.log","oldFilename":"/home/paul/wf-monorepo-new/apps/wf-server/server/logs/application-2025-10-02.log","timestamp":"2025-10-03 00:00:00"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-03 00:00:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 00:00:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 00:00:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 00:00:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":40.28874,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 00:00:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 00:00:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 00:00:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 00:00:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 00:00:01"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.813419,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 00:00:01"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 00:00:01"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 00:00:01"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 00:00:01"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":123.227778,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 00:00:01"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 00:00:01"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-03 00:00:01"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (221ms)","timestamp":"2025-10-03 00:00:01"}
{"body":{"eventSQLId":"ingrTypeDtl","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 00:00:01"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 00:00:01"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeDtl","timestamp":"2025-10-03 00:00:01"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 00:00:01"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 00:00:01"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 00:00:01"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":41.434668,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 00:00:01"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 00:00:01"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeDtl (ID: 12)","timestamp":"2025-10-03 00:00:01"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 00:00:01"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 00:00:01"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 00:00:01"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":40.553387,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 00:00:01"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 00:00:01"}
{"level":"debug","message":"[execEventType.js] Resolved :ingrTypeID → 25","timestamp":"2025-10-03 00:00:01"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select \r\n\tid, \r\n\tname,\r\n\tdescription,\r\n\taccount_id\r\nfrom whatsfresh.ingredient_types\r\nwhere id = 25","timestamp":"2025-10-03 00:00:01"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 00:00:01"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 00:00:01"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 00:00:01"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":66.372007,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 00:00:01"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 00:00:01"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeDtl (ID: 12)","timestamp":"2025-10-03 00:00:01"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (154ms)","timestamp":"2025-10-03 00:00:01"}
{"body":{"values":{"0":{"paramName":"ingrTypeID","paramVal":3}}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/setVals","timestamp":"2025-10-03 00:00:03"}
{"level":"http","message":"[setVals.js] POST /api/setVals","timestamp":"2025-10-03 00:00:03"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 00:00:03"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 00:00:03"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 00:00:03"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":55.872112,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 00:00:03"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 00:00:03"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 00:00:03"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 00:00:03"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 00:00:03"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.910162,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 00:00:03"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 00:00:03"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 00:00:03"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 00:00:03"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":117.386092,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 00:00:03"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 00:00:03"}
{"level":"debug","message":"[setVals.js] Set 1 values for pc7900@gmail.com","timestamp":"2025-10-03 00:00:03"}
{"level":"info","message":"[app.js]  Response: POST /api/setVals 200 (212ms)","timestamp":"2025-10-03 00:00:03"}
{"body":{"eventSQLId":"ingrTypeDtl","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 00:00:03"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 00:00:03"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeDtl","timestamp":"2025-10-03 00:00:03"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 00:00:03"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 00:00:03"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 00:00:03"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.426675,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 00:00:03"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 00:00:03"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeDtl (ID: 12)","timestamp":"2025-10-03 00:00:03"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 00:00:03"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 00:00:03"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 00:00:03"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.886025,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 00:00:03"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 00:00:03"}
{"level":"debug","message":"[execEventType.js] Resolved :ingrTypeID → 3","timestamp":"2025-10-03 00:00:03"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select \r\n\tid, \r\n\tname,\r\n\tdescription,\r\n\taccount_id\r\nfrom whatsfresh.ingredient_types\r\nwhere id = 3","timestamp":"2025-10-03 00:00:03"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 00:00:03"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 00:00:03"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 00:00:03"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":63.585615,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 00:00:03"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 00:00:03"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeDtl (ID: 12)","timestamp":"2025-10-03 00:00:03"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (148ms)","timestamp":"2025-10-03 00:00:03"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-03 00:46:55"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-03 01:46:55"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-03 03:16:01"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-03 04:16:01"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-03 05:16:01"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-03 06:16:01"}
{"body":{"pageID":57},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/genPageConfig","timestamp":"2025-10-03 07:06:56"}
{"level":"http","message":"[genPageConfigController.js] POST /api/genPageConfig","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[genPageConfigController.js] Generating pageConfig for pageID: 57","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 57","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:56"}
{"body":{"pageID":57},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/genPageConfig","timestamp":"2025-10-03 07:06:56"}
{"level":"http","message":"[genPageConfigController.js] POST /api/genPageConfig","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[genPageConfigController.js] Generating pageConfig for pageID: 57","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 57","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-03 07:06:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":60.421331,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Loaded 4 components from database","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Processing 4 components from database","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for wf-client: 3 props","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypePage: 1 trigger classes","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for ingrTypeGrid: 3 props","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypeGrid: 2 trigger classes","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for ingrTypeForm: 2 props","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypeForm: 3 trigger classes","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Expanding grid ingrTypeGrid with 1 columns into component tree","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Expanding form ingrTypeForm with 4 fields into component tree","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageConfig.json to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-client/ingrTypePage/pageConfig.json","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageMermaid.mmd to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-client/ingrTypePage/pageMermaid.mmd","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Saved index.jsx to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-client/ingrTypePage/index.jsx","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview-routes.js with 2 routes","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview routes manifest","timestamp":"2025-10-03 07:06:56"}
{"level":"info","message":"[genPageConfigController.js] PageConfig generated successfully for pageID: 57","timestamp":"2025-10-03 07:06:56"}
{"level":"info","message":"[app.js]  Response: POST /api/genPageConfig 200 (77ms)","timestamp":"2025-10-03 07:06:56"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 07:06:56"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-03 07:06:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":109.055208,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Loaded 4 components from database","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Processing 4 components from database","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for wf-client: 3 props","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypePage: 1 trigger classes","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for ingrTypeGrid: 3 props","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypeGrid: 2 trigger classes","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for ingrTypeForm: 2 props","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypeForm: 3 trigger classes","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Expanding grid ingrTypeGrid with 1 columns into component tree","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Expanding form ingrTypeForm with 4 fields into component tree","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageConfig.json to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-client/ingrTypePage/pageConfig.json","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageMermaid.mmd to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-client/ingrTypePage/pageMermaid.mmd","timestamp":"2025-10-03 07:06:56"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 07:06:56"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Saved index.jsx to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-client/ingrTypePage/index.jsx","timestamp":"2025-10-03 07:06:56"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 07:06:56"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview-routes.js with 2 routes","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview routes manifest","timestamp":"2025-10-03 07:06:56"}
{"level":"info","message":"[genPageConfigController.js] PageConfig generated successfully for pageID: 57","timestamp":"2025-10-03 07:06:56"}
{"level":"info","message":"[app.js]  Response: POST /api/genPageConfig 200 (134ms)","timestamp":"2025-10-03 07:06:56"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 07:06:56"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:06:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.972104,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:06:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.124972,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 15","timestamp":"2025-10-03 07:06:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":85.208399,"method":"GET","operation":"database_query","rowCount":15,"success":true},"timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:56"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 07:06:56"}
{"level":"info","message":"[getEventTypes.js] Fetched 15 eventTypes","timestamp":"2025-10-03 07:06:56"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 200 (89ms)","timestamp":"2025-10-03 07:06:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:06:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.826016,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:56"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 07:06:56"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:06:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.241645,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:06:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:06:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":32.583943,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:06:56"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:06:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":157.314458,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 15","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":188.28778,"method":"GET","operation":"database_query","rowCount":15,"success":true},"timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:57"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[getEventTypes.js] Fetched 15 eventTypes","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (191ms)","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":262.326314,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":170.334068,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":363.535047,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":133.451145,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":144.861774,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":170.837644,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":183.669912,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (651ms)","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":650.649153,"method":"POST","operation":"http_request","path":"/api/clearVals","status":200},"timestamp":"2025-10-03 07:06:57"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 07:06:57"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":176.068435,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (687ms)","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":687.02696,"method":"POST","operation":"http_request","path":"/api/clearVals","status":200},"timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":44.69025,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:57"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 07:06:57"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.100253,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":145.922655,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (750ms)","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":749.676765,"method":"POST","operation":"http_request","path":"/api/clearVals","status":200},"timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":32.744097,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:57"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 07:06:57"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.846655,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.863925,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (127ms)","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.642237,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.347546,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (106ms)","timestamp":"2025-10-03 07:06:57"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 07:06:57"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":32.722277,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:57"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 07:06:57"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:57"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 07:06:57"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.026655,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (111ms)","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":91.637414,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":93.087465,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 15","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":174.748845,"method":"GET","operation":"database_query","rowCount":15,"success":true},"timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:57"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[getEventTypes.js] Fetched 15 eventTypes","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (177ms)","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":80.473521,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":84.844406,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:06:57"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 07:06:57"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 15","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.970117,"method":"GET","operation":"database_query","rowCount":15,"success":true},"timestamp":"2025-10-03 07:06:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:57"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[getEventTypes.js] Fetched 15 eventTypes","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (40ms)","timestamp":"2025-10-03 07:06:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":368.502607,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:06:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":405.970943,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:06:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":107.144488,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:06:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":104.526707,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:06:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":102.164314,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 07:06:58"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (756ms)","timestamp":"2025-10-03 07:06:58"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":756.459041,"method":"POST","operation":"http_request","path":"/api/clearVals","status":200},"timestamp":"2025-10-03 07:06:58"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 07:06:58"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":105.34033,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 07:06:58"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (797ms)","timestamp":"2025-10-03 07:06:58"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":796.837154,"method":"POST","operation":"http_request","path":"/api/clearVals","status":200},"timestamp":"2025-10-03 07:06:58"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 07:06:58"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:58"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:06:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.466263,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:58"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:06:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":32.412619,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:58"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:06:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":31.354075,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:58"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:06:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":40.144324,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:06:58"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 07:06:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":39.022906,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:58"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:06:58"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (109ms)","timestamp":"2025-10-03 07:06:58"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 07:06:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":46.26823,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:06:58"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:06:58"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (121ms)","timestamp":"2025-10-03 07:06:58"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-03 07:20:32"}
{"body":{"pageID":57},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/genPageConfig","timestamp":"2025-10-03 07:26:43"}
{"level":"http","message":"[genPageConfigController.js] POST /api/genPageConfig","timestamp":"2025-10-03 07:26:43"}
{"level":"debug","message":"[genPageConfigController.js] Generating pageConfig for pageID: 57","timestamp":"2025-10-03 07:26:43"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 57","timestamp":"2025-10-03 07:26:43"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:26:43"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:26:43"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-03 07:26:43"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":98.133585,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:26:43"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:26:43"}
{"level":"debug","message":"[database-genPageConfig.js] Loaded 5 components from database","timestamp":"2025-10-03 07:26:43"}
{"level":"debug","message":"[database-genPageConfig.js] Processing 5 components from database","timestamp":"2025-10-03 07:26:43"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for wf-client: 3 props","timestamp":"2025-10-03 07:26:43"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypePage: 1 trigger classes","timestamp":"2025-10-03 07:26:43"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for ingrTypeGrid: 3 props","timestamp":"2025-10-03 07:26:43"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypeGrid: 2 trigger classes","timestamp":"2025-10-03 07:26:43"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for ingrTypeForm: 2 props","timestamp":"2025-10-03 07:26:43"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypeForm: 3 trigger classes","timestamp":"2025-10-03 07:26:43"}
{"level":"debug","message":"[database-genPageConfig.js] Expanding grid ingrTypeGrid with 1 columns into component tree","timestamp":"2025-10-03 07:26:43"}
{"level":"debug","message":"[database-genPageConfig.js] Expanding form ingrTypeForm with 4 fields into component tree","timestamp":"2025-10-03 07:26:43"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageConfig.json to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-client/ingrTypePage/pageConfig.json","timestamp":"2025-10-03 07:26:43"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageMermaid.mmd to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-client/ingrTypePage/pageMermaid.mmd","timestamp":"2025-10-03 07:26:43"}
{"level":"debug","message":"[database-genPageConfig.js] Saved index.jsx to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-client/ingrTypePage/index.jsx","timestamp":"2025-10-03 07:26:43"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview-routes.js with 2 routes","timestamp":"2025-10-03 07:26:43"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview routes manifest","timestamp":"2025-10-03 07:26:43"}
{"level":"info","message":"[genPageConfigController.js] PageConfig generated successfully for pageID: 57","timestamp":"2025-10-03 07:26:43"}
{"level":"info","message":"[app.js]  Response: POST /api/genPageConfig 200 (129ms)","timestamp":"2025-10-03 07:26:43"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 07:26:44"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:26:44"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 07:26:44"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:26:44"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 07:26:44"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:26:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:26:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":41.530177,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:26:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:26:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":39.942499,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:26:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 07:26:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":94.110102,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:26:44"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 07:26:44"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 07:26:44"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 200 (96ms)","timestamp":"2025-10-03 07:26:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:26:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.798047,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:26:44"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 07:26:44"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:26:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:26:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":53.49999,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:26:44"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 07:26:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":109.813033,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:26:44"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 07:26:44"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 07:26:44"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (113ms)","timestamp":"2025-10-03 07:26:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":168.249372,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:26:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":180.502269,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:26:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":118.194957,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:26:44"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:26:44"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":133.633819,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:26:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":114.162094,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 07:26:45"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (489ms)","timestamp":"2025-10-03 07:26:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":111.78158,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 07:26:45"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (523ms)","timestamp":"2025-10-03 07:26:45"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":523.363288,"method":"POST","operation":"http_request","path":"/api/clearVals","status":200},"timestamp":"2025-10-03 07:26:45"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 07:26:45"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:26:45"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 07:26:45"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:26:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:26:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":32.843895,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:26:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:26:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.327473,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:26:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:26:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":45.784418,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:26:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 07:26:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.353629,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:26:45"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:26:45"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (110ms)","timestamp":"2025-10-03 07:26:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:26:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.149378,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:26:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 07:26:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":32.956626,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 07:26:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:26:45"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:26:45"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (118ms)","timestamp":"2025-10-03 07:26:45"}
{"body":{"pageID":57},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/genPageConfig","timestamp":"2025-10-03 07:31:27"}
{"level":"http","message":"[genPageConfigController.js] POST /api/genPageConfig","timestamp":"2025-10-03 07:31:27"}
{"level":"debug","message":"[genPageConfigController.js] Generating pageConfig for pageID: 57","timestamp":"2025-10-03 07:31:27"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 57","timestamp":"2025-10-03 07:31:27"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:31:27"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:31:27"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-03 07:31:27"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":207.232326,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:31:27"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:31:27"}
{"level":"debug","message":"[database-genPageConfig.js] Loaded 5 components from database","timestamp":"2025-10-03 07:31:27"}
{"level":"debug","message":"[database-genPageConfig.js] Processing 5 components from database","timestamp":"2025-10-03 07:31:27"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for wf-client: 3 props","timestamp":"2025-10-03 07:31:27"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypePage: 1 trigger classes","timestamp":"2025-10-03 07:31:27"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for ingrTypeGrid: 3 props","timestamp":"2025-10-03 07:31:27"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypeGrid: 2 trigger classes","timestamp":"2025-10-03 07:31:27"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for ingrTypeForm: 2 props","timestamp":"2025-10-03 07:31:27"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypeForm: 3 trigger classes","timestamp":"2025-10-03 07:31:27"}
{"level":"debug","message":"[database-genPageConfig.js] Expanding grid ingrTypeGrid with 1 columns into component tree","timestamp":"2025-10-03 07:31:27"}
{"level":"debug","message":"[database-genPageConfig.js] Expanding form ingrTypeForm with 4 fields into component tree","timestamp":"2025-10-03 07:31:27"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageConfig.json to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-client/ingrTypePage/pageConfig.json","timestamp":"2025-10-03 07:31:27"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageMermaid.mmd to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-client/ingrTypePage/pageMermaid.mmd","timestamp":"2025-10-03 07:31:27"}
{"level":"debug","message":"[database-genPageConfig.js] Saved index.jsx to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-client/ingrTypePage/index.jsx","timestamp":"2025-10-03 07:31:27"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview-routes.js with 2 routes","timestamp":"2025-10-03 07:31:27"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview routes manifest","timestamp":"2025-10-03 07:31:27"}
{"level":"info","message":"[genPageConfigController.js] PageConfig generated successfully for pageID: 57","timestamp":"2025-10-03 07:31:27"}
{"level":"info","message":"[app.js]  Response: POST /api/genPageConfig 200 (220ms)","timestamp":"2025-10-03 07:31:27"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 07:31:34"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 07:31:34"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 07:31:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:31:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:31:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 07:31:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":191.224442,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 07:31:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:31:34"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 07:31:34"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 07:31:34"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 200 (195ms)","timestamp":"2025-10-03 07:31:34"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 07:31:34"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 07:31:34"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 07:31:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:31:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:31:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 07:31:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":191.114675,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 07:31:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:31:35"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 07:31:35"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 07:31:35"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (195ms)","timestamp":"2025-10-03 07:31:35"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 07:31:35"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 07:31:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:31:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:31:35"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 07:31:35"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 07:31:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:31:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:31:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:31:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":74.717203,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:31:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:31:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:31:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:31:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:31:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":59.217016,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:31:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:31:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:31:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:31:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:31:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":103.110107,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:31:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:31:35"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:31:35"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:31:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:31:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":108.240242,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:31:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:31:35"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:31:35"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:31:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":344.009166,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:31:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:31:35"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:31:35"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:31:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":370.321076,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:31:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:31:35"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:31:35"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:31:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":101.67218,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:31:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:31:35"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:31:35"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:31:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":135.271168,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:31:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:31:35"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:31:35"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:31:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":196.449555,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:31:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:31:36"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 07:31:36"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (810ms)","timestamp":"2025-10-03 07:31:36"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":809.528262,"method":"POST","operation":"http_request","path":"/api/clearVals","status":200},"timestamp":"2025-10-03 07:31:36"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 07:31:36"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 07:31:36"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 07:31:36"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:31:36"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:31:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":177.406385,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:31:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:31:36"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 07:31:36"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (873ms)","timestamp":"2025-10-03 07:31:36"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":872.988461,"method":"POST","operation":"http_request","path":"/api/clearVals","status":200},"timestamp":"2025-10-03 07:31:36"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 07:31:36"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 07:31:36"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 07:31:36"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:31:36"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:31:36"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:31:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.617964,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:31:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:31:36"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:31:36"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:31:36"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:31:36"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:31:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":70.718037,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:31:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:31:36"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:31:36"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:31:36"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:31:36"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:31:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":55.484083,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:31:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:31:36"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 07:31:36"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 07:31:36"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:31:36"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:31:36"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:31:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":143.291224,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:31:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:31:36"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 07:31:36"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 07:31:36"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:31:36"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:31:36"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 07:31:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":141.849442,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 07:31:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:31:36"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:31:36"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (236ms)","timestamp":"2025-10-03 07:31:36"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 07:31:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":101.66609,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 07:31:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:31:36"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:31:36"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (320ms)","timestamp":"2025-10-03 07:31:36"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 07:36:24"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 07:36:24"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 07:36:24"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:36:24"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:36:24"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 07:36:24"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":304.284756,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 07:36:24"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:36:24"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 07:36:24"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 07:36:24"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (308ms)","timestamp":"2025-10-03 07:36:24"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 07:36:24"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 07:36:24"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 07:36:24"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:36:24"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:36:24"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 07:36:24"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":140.456987,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 07:36:24"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:36:24"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 07:36:24"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 07:36:24"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (144ms)","timestamp":"2025-10-03 07:36:24"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 07:36:25"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:36:25"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 07:36:25"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:36:25"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:36:25"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":46.365271,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:36:25"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:36:25"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":61.164386,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:36:25"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:36:25"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":38.84356,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:36:25"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:36:25"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.995342,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:36:25"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":118.995663,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:36:25"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":169.046322,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:36:25"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":207.067863,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:36:25"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":178.902574,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:36:25"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":101.444118,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 07:36:25"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (518ms)","timestamp":"2025-10-03 07:36:25"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":518.414605,"method":"POST","operation":"http_request","path":"/api/clearVals","status":200},"timestamp":"2025-10-03 07:36:25"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 07:36:25"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:36:25"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:36:25"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":110.869124,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:36:25"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":214.34557,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 07:36:25"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (667ms)","timestamp":"2025-10-03 07:36:25"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":666.606596,"method":"POST","operation":"http_request","path":"/api/clearVals","status":200},"timestamp":"2025-10-03 07:36:25"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 07:36:25"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:36:25"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:36:25"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":199.290951,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:36:25"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:36:25"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":185.43612,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:36:25"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:36:25"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 07:36:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":116.687388,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 07:36:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:36:26"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:36:26"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (431ms)","timestamp":"2025-10-03 07:36:26"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:36:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":117.163655,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:36:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:36:26"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 07:36:26"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 07:36:26"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:36:26"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:36:26"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 07:36:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":43.802318,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 07:36:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:36:26"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:36:26"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (350ms)","timestamp":"2025-10-03 07:36:26"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 07:40:38"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 07:40:38"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 07:40:38"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:40:38"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:40:38"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 07:40:38"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":71.199096,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 07:40:38"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:40:38"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 07:40:38"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 07:40:38"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 200 (74ms)","timestamp":"2025-10-03 07:40:38"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 07:40:49"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 07:40:49"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 07:40:49"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:40:49"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:40:49"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 07:40:49"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 07:40:49"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:40:49"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:40:49"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:40:49"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.34126,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:40:49"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:40:49"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:40:49"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:40:49"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 07:40:49"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":65.595106,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 07:40:49"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:40:49"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 07:40:49"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 07:40:49"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (69ms)","timestamp":"2025-10-03 07:40:49"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:40:49"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":43.85214,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:40:49"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:40:49"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:40:49"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:40:49"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":113.351563,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:40:49"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:40:49"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:40:49"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:40:49"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":101.539362,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:40:49"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:40:49"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:40:49"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:40:49"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":103.139221,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:40:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:40:50"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 07:40:50"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (404ms)","timestamp":"2025-10-03 07:40:50"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 07:40:50"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 07:40:50"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 07:40:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:40:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:40:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:40:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.567632,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:40:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:40:50"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:40:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:40:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:40:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:40:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.033602,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:40:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:40:50"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 07:40:50"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 07:40:50"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:40:50"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:40:50"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 07:40:50"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.905934,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 07:40:50"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:40:50"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:40:50"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (109ms)","timestamp":"2025-10-03 07:40:50"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 07:41:08"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 07:41:08"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 07:41:08"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:41:08"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:41:08"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 07:41:08"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 07:41:08"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:41:08"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:41:08"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 07:41:08"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 07:41:08"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:41:08"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:41:08"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 07:41:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":433.039581,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 07:41:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:41:08"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 07:41:08"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 07:41:08"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (448ms)","timestamp":"2025-10-03 07:41:08"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 07:41:08"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 07:41:08"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 07:41:08"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:41:08"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:41:08"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:41:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":43.762055,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:41:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:41:08"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:41:08"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:41:08"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:41:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":40.660737,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:41:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:41:08"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:41:08"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:41:08"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:41:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":267.596724,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:41:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:41:08"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:41:08"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:41:08"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:41:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":265.535103,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:41:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:41:08"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:41:08"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:41:08"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 07:41:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":303.597186,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 07:41:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:41:08"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 07:41:08"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 07:41:08"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (314ms)","timestamp":"2025-10-03 07:41:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":128.233248,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:41:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:41:08"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:41:08"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:41:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":186.725076,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:41:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:41:08"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:41:08"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:41:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":268.856065,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:41:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":245.32824,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:41:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":112.198971,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 07:41:09"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (826ms)","timestamp":"2025-10-03 07:41:09"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":826.308357,"method":"POST","operation":"http_request","path":"/api/clearVals","status":200},"timestamp":"2025-10-03 07:41:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":103.076264,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 07:41:09"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (849ms)","timestamp":"2025-10-03 07:41:09"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":848.860447,"method":"POST","operation":"http_request","path":"/api/clearVals","status":200},"timestamp":"2025-10-03 07:41:09"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 07:41:09"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:41:09"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 07:41:09"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:41:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:41:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.489227,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:41:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:41:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.081416,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:41:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:41:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":32.083876,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:41:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:41:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.980302,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:41:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 07:41:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.009416,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:41:09"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:41:09"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (105ms)","timestamp":"2025-10-03 07:41:09"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 07:41:09"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.892977,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 07:41:09"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:41:09"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:41:09"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (113ms)","timestamp":"2025-10-03 07:41:09"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 07:44:11"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 07:44:11"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 07:44:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:44:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:44:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 07:44:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":90.268446,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 07:44:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:44:11"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 07:44:11"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 07:44:11"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 200 (101ms)","timestamp":"2025-10-03 07:44:11"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 07:44:11"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 07:44:11"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 07:44:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:44:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:44:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 07:44:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":401.913122,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 07:44:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:44:12"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 07:44:12"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 07:44:12"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (410ms)","timestamp":"2025-10-03 07:44:12"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 07:44:12"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 07:44:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:44:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:44:12"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 07:44:12"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 07:44:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:44:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:44:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:44:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":82.023351,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:44:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:44:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:44:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:44:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:44:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":97.043931,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:44:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:44:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:44:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:44:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:44:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":51.858433,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:44:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:44:12"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:44:12"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:44:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:44:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":50.623484,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:44:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:44:12"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:44:12"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:44:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":197.042861,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:44:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:44:12"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:44:12"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:44:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":380.029549,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:44:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":187.34614,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:44:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":125.26747,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:44:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":139.915969,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 07:44:13"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (669ms)","timestamp":"2025-10-03 07:44:13"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":669.063249,"method":"POST","operation":"http_request","path":"/api/clearVals","status":200},"timestamp":"2025-10-03 07:44:13"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 07:44:13"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:44:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:44:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":46.394343,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:44:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":127.763237,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 07:44:13"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (791ms)","timestamp":"2025-10-03 07:44:13"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":790.705921,"method":"POST","operation":"http_request","path":"/api/clearVals","status":200},"timestamp":"2025-10-03 07:44:13"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 07:44:13"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:44:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:44:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":38.869831,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:44:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:44:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":39.111787,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:44:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 07:44:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.090524,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:44:13"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:44:13"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (125ms)","timestamp":"2025-10-03 07:44:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:44:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.247097,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:44:13"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 07:44:13"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.221693,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 07:44:13"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:44:13"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:44:13"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (113ms)","timestamp":"2025-10-03 07:44:13"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-10-03 07:47:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-10-03 07:47:59"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-10-03 07:47:59"}
{"level":"debug","message":"[index.js]  Initializing routes","timestamp":"2025-10-03 07:47:59"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-10-03 07:47:59"}
{"0":"POST /api/execEventType","1":"GET /api/eventType/:xrefId","10":"POST /api/clearVals","11":"GET /api/studio/genPageConfig","12":"POST /api/genPageConfig","13":"POST /api/initialize","14":"GET /api/util/list-routes","15":"POST /api/util/restart-server","16":"POST /api/auth/login","2":"GET /api/eventTypes","3":"GET /api/triggers","4":"POST /api/execDML","5":"POST /api/execCreateDoc","6":"GET /api/getDoc","7":"POST /api/studio/genFields","8":"GET /api/getVal","9":"POST /api/setVals","level":"info","message":"[registerRoutes.js] Routes registered:","timestamp":"2025-10-03 07:47:59"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-10-03 07:47:59"}
{"level":"debug","message":"[index.js]  Routes initialized","timestamp":"2025-10-03 07:47:59"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-10-03 07:47:59"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-10-03 07:47:59"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-10-03 07:47:59"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-10-03 07:47:59"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 07:48:10"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 07:48:10"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 07:48:10"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 07:48:10"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 07:48:10"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 07:48:10"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 07:48:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:48:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:48:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 07:48:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":739.513082,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:48:11"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 07:48:11"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 07:48:11"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (756ms)","timestamp":"2025-10-03 07:48:11"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":756.049919,"method":"GET","operation":"http_request","path":"/api/eventTypes","status":304},"timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:48:11"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 07:48:11"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:48:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 07:48:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.03123,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:48:11"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 07:48:11"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 07:48:11"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (49ms)","timestamp":"2025-10-03 07:48:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:48:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":501.369676,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:48:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:48:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":525.011658,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:48:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:48:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":70.054823,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:48:11"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:48:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":110.863873,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:48:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":248.164507,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:48:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":223.717711,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:48:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":230.064253,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:48:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":252.533931,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:48:11"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:48:11"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":305.55202,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:48:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:48:12"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 07:48:12"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (1367ms)","timestamp":"2025-10-03 07:48:12"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1367.099231,"method":"POST","operation":"http_request","path":"/api/clearVals","status":200},"timestamp":"2025-10-03 07:48:12"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 07:48:12"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 07:48:12"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 07:48:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:48:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:48:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":317.823253,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:48:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:48:12"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 07:48:12"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (1453ms)","timestamp":"2025-10-03 07:48:12"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1452.816847,"method":"POST","operation":"http_request","path":"/api/clearVals","status":200},"timestamp":"2025-10-03 07:48:12"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 07:48:12"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 07:48:12"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 07:48:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:48:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:48:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:48:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":79.172721,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:48:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:48:12"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:48:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:48:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:48:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:48:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":111.222252,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:48:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:48:12"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:48:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:48:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:48:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:48:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":122.989758,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:48:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:48:12"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 07:48:12"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 07:48:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:48:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:48:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:48:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":113.439188,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:48:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:48:12"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 07:48:12"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 07:48:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:48:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:48:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 07:48:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":105.699474,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 07:48:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:48:12"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:48:12"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (316ms)","timestamp":"2025-10-03 07:48:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 07:48:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":116.737789,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 07:48:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:48:12"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:48:12"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (347ms)","timestamp":"2025-10-03 07:48:12"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 07:57:59"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 07:57:59"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 07:57:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:57:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:57:59"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 07:57:59"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 07:57:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:57:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:57:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:57:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":69.561561,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:57:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:57:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:57:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:57:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 07:57:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":143.553493,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 07:57:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:57:59"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 07:57:59"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 07:57:59"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (154ms)","timestamp":"2025-10-03 07:57:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:57:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":76.875037,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:57:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:57:59"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:57:59"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:57:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":283.811242,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:58:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:58:00"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:58:00"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:58:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":242.919354,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:58:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:58:00"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 07:58:00"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 07:58:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":129.611356,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 07:58:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:58:00"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 07:58:00"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (814ms)","timestamp":"2025-10-03 07:58:00"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":814.034641,"method":"POST","operation":"http_request","path":"/api/clearVals","status":200},"timestamp":"2025-10-03 07:58:00"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 07:58:00"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 07:58:00"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 07:58:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:58:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:58:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:58:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":40.880365,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:58:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:58:00"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:58:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:58:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:58:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 07:58:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":70.103646,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 07:58:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:58:00"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 07:58:00"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 07:58:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 07:58:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 07:58:00"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 07:58:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.023711,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 07:58:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 07:58:00"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 07:58:00"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (180ms)","timestamp":"2025-10-03 07:58:00"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 08:00:05"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 08:00:05"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 08:00:05"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:00:05"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:00:05"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 08:00:05"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 08:00:05"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:00:05"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:00:05"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:00:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.074145,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:00:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:00:05"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:00:05"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:00:05"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 08:00:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":72.663529,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 08:00:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:00:05"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 08:00:05"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 08:00:05"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (77ms)","timestamp":"2025-10-03 08:00:05"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:00:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":39.729564,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:00:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:00:05"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 08:00:05"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 08:00:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":110.473359,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 08:00:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:00:05"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 08:00:05"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 08:00:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":159.4054,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 08:00:06"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:00:06"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 08:00:06"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 08:00:06"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":110.58056,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 08:00:06"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:00:06"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 08:00:06"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (461ms)","timestamp":"2025-10-03 08:00:06"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 08:00:06"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 08:00:06"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 08:00:06"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:00:06"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:00:06"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:00:06"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.634278,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:00:06"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:00:06"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 08:00:06"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:00:06"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:00:06"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:00:06"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":66.959265,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:00:06"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:00:06"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 08:00:06"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 08:00:06"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:00:06"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:00:06"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 08:00:06"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.78279,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 08:00:06"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:00:06"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 08:00:06"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (140ms)","timestamp":"2025-10-03 08:00:06"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-03 08:02:59"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 08:52:35"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 08:52:35"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 08:52:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:52:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:52:35"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 08:52:35"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 08:52:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:52:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:52:35"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 08:52:35"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 08:52:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:52:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:52:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:52:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":39.189354,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:52:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:52:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:52:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:52:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:52:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":38.437244,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:52:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:52:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:52:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:52:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 08:52:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":73.316329,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 08:52:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:52:35"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 08:52:35"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 08:52:35"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (77ms)","timestamp":"2025-10-03 08:52:35"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 08:52:35"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 08:52:35"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 08:52:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:52:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:52:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:52:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":83.269395,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:52:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:52:35"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 08:52:35"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 08:52:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 08:52:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":62.351027,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 08:52:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:52:35"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 08:52:35"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 08:52:35"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (66ms)","timestamp":"2025-10-03 08:52:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:52:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":82.36689,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:52:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:52:35"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 08:52:35"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 08:52:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":111.634428,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 08:52:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":133.999862,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 08:52:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":113.031071,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 08:52:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":127.187383,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 08:52:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":104.269833,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 08:52:36"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (493ms)","timestamp":"2025-10-03 08:52:36"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 08:52:36"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:52:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":183.32302,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 08:52:36"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (535ms)","timestamp":"2025-10-03 08:52:36"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":535.213728,"method":"POST","operation":"http_request","path":"/api/clearVals","status":200},"timestamp":"2025-10-03 08:52:36"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 08:52:36"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:52:36"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:52:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.99693,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:52:36"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:52:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":46.368924,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:52:36"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:52:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":76.18245,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:52:36"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 08:52:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":44.99362,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:52:36"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 08:52:36"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (130ms)","timestamp":"2025-10-03 08:52:36"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:52:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.679544,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:52:36"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 08:52:36"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.157039,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 08:52:36"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:52:36"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 08:52:36"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (147ms)","timestamp":"2025-10-03 08:52:36"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 08:53:01"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 08:53:01"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 08:53:01"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:53:01"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:53:01"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 08:53:01"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 08:53:01"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:53:01"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:53:01"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 08:53:01"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 08:53:01"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:53:01"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:53:01"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:53:01"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":215.640307,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:53:01"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:53:01"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:53:01"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:53:01"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:53:01"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":214.160074,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:53:01"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:53:01"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:53:01"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:53:01"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:53:01"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":87.945977,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:53:01"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:53:01"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 08:53:01"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 08:53:01"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 08:53:01"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":317.109903,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 08:53:01"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:53:01"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 08:53:01"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 08:53:01"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (319ms)","timestamp":"2025-10-03 08:53:01"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 08:53:01"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 08:53:01"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 08:53:01"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:53:01"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:53:01"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:53:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":206.732556,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:53:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:53:02"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 08:53:02"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 08:53:02"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 08:53:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":111.165036,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 08:53:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:53:02"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 08:53:02"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 08:53:02"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (114ms)","timestamp":"2025-10-03 08:53:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":407.87263,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 08:53:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:53:02"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 08:53:02"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 08:53:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":364.51172,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 08:53:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:53:02"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 08:53:02"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 08:53:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":238.075995,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 08:53:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:53:02"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 08:53:02"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 08:53:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":224.865958,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 08:53:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:53:02"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 08:53:02"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 08:53:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":202.58858,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 08:53:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:53:02"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 08:53:02"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (1155ms)","timestamp":"2025-10-03 08:53:02"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1154.5543,"method":"POST","operation":"http_request","path":"/api/clearVals","status":200},"timestamp":"2025-10-03 08:53:02"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 08:53:02"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 08:53:02"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 08:53:02"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:53:02"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:53:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":197.601024,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 08:53:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:53:02"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 08:53:02"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (1214ms)","timestamp":"2025-10-03 08:53:02"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1214.273446,"method":"POST","operation":"http_request","path":"/api/clearVals","status":200},"timestamp":"2025-10-03 08:53:02"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:53:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":41.978408,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:53:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:53:02"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 08:53:02"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:53:02"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:53:02"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 08:53:02"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 08:53:02"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 08:53:02"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:53:02"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:53:02"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:53:03"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":127.59093,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:53:03"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:53:03"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 08:53:03"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 08:53:03"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:53:03"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:53:03"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:53:03"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":120.488494,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:53:03"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:53:03"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 08:53:03"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:53:03"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:53:03"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:53:03"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":63.219673,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:53:03"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:53:03"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 08:53:03"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 08:53:03"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:53:03"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:53:03"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 08:53:03"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":69.123075,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 08:53:03"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:53:03"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 08:53:03"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (243ms)","timestamp":"2025-10-03 08:53:03"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 08:53:03"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":55.982672,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 08:53:03"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:53:03"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 08:53:03"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (243ms)","timestamp":"2025-10-03 08:53:03"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 08:53:45"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 08:53:45"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 08:53:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:53:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:53:45"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 08:53:45"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 08:53:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:53:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:53:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:53:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.97329,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:53:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:53:45"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:53:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:53:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 08:53:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":73.797959,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 08:53:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:53:45"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 08:53:45"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 08:53:45"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (78ms)","timestamp":"2025-10-03 08:53:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:53:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.619648,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:53:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:53:45"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 08:53:45"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 08:53:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":110.68967,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 08:53:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:53:45"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 08:53:45"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 08:53:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":126.568121,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 08:53:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:53:45"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 08:53:45"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 08:53:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":120.573993,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 08:53:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:53:46"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 08:53:46"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (437ms)","timestamp":"2025-10-03 08:53:46"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 08:53:46"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 08:53:46"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 08:53:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:53:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:53:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:53:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.112073,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:53:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:53:46"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 08:53:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:53:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:53:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:53:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.101392,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:53:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:53:46"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 08:53:46"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 08:53:46"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:53:46"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:53:46"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 08:53:46"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.895095,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 08:53:46"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:53:46"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 08:53:46"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (114ms)","timestamp":"2025-10-03 08:53:46"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 08:57:57"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:57:57"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 08:57:57"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:57:57"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 08:57:57"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:57:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:57:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.158139,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:57:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:57:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.674688,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:57:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:57:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":38.532416,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 08:57:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 08:57:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":135.094907,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:57:57"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 08:57:57"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 08:57:57"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (139ms)","timestamp":"2025-10-03 08:57:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:57:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":43.757708,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 08:57:57"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 08:57:57"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:57:57"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 08:57:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":134.025225,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:57:57"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 08:57:57"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 08:57:57"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (138ms)","timestamp":"2025-10-03 08:57:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":158.563276,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 08:57:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":210.918033,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 08:57:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":149.248447,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 08:57:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":134.905794,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 08:57:57"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 08:57:57"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":189.761741,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 08:57:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:57:58"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 08:57:58"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (588ms)","timestamp":"2025-10-03 08:57:58"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":587.710368,"method":"POST","operation":"http_request","path":"/api/clearVals","status":200},"timestamp":"2025-10-03 08:57:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":190.681448,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 08:57:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:57:58"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 08:57:58"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (637ms)","timestamp":"2025-10-03 08:57:58"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":636.794117,"method":"POST","operation":"http_request","path":"/api/clearVals","status":200},"timestamp":"2025-10-03 08:57:58"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 08:57:58"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 08:57:58"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 08:57:58"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:57:58"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:57:58"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 08:57:58"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 08:57:58"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 08:57:58"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:57:58"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:57:58"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:57:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":40.001364,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:57:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:57:58"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 08:57:58"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:57:58"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:57:58"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:57:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.92538,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:57:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:57:58"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 08:57:58"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:57:58"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:57:58"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:57:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":117.923589,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:57:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:57:58"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 08:57:58"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 08:57:58"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:57:58"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:57:58"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 08:57:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":132.386754,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 08:57:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:57:58"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 08:57:58"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 08:57:58"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:57:58"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:57:58"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 08:57:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":100.375853,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 08:57:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:57:58"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 08:57:58"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (257ms)","timestamp":"2025-10-03 08:57:58"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 08:57:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":140.520217,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 08:57:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:57:58"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 08:57:58"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (321ms)","timestamp":"2025-10-03 08:57:58"}
{"body":{"pageID":23},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/genPageConfig","timestamp":"2025-10-03 08:59:16"}
{"level":"http","message":"[genPageConfigController.js] POST /api/genPageConfig","timestamp":"2025-10-03 08:59:16"}
{"level":"debug","message":"[genPageConfigController.js] Generating pageConfig for pageID: 23","timestamp":"2025-10-03 08:59:16"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 23","timestamp":"2025-10-03 08:59:16"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 08:59:16"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 08:59:16"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-03 08:59:17"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":231.327732,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 08:59:17"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 08:59:17"}
{"level":"debug","message":"[database-genPageConfig.js] Loaded 10 components from database","timestamp":"2025-10-03 08:59:17"}
{"level":"debug","message":"[database-genPageConfig.js] Processing 10 components from database","timestamp":"2025-10-03 08:59:17"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for wf-studio: 3 props","timestamp":"2025-10-03 08:59:17"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for studio: 1 trigger classes","timestamp":"2025-10-03 08:59:17"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for selectApp: 2 trigger classes","timestamp":"2025-10-03 08:59:17"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for selectPage: 2 trigger classes","timestamp":"2025-10-03 08:59:17"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for previewPage: 1 trigger classes","timestamp":"2025-10-03 08:59:17"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioSidebar: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:177:11\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-10-03 08:59:17"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for selectApp: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:177:11\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:177:11\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)","timestamp":"2025-10-03 08:59:17"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioComponent: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:177:11\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-10-03 08:59:17"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioWorkArea: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:177:11\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-10-03 08:59:17"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageConfig.json to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-monorepo/wf-studio/pageConfig.json","timestamp":"2025-10-03 08:59:17"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageMermaid.mmd to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-monorepo/wf-studio/pageMermaid.mmd","timestamp":"2025-10-03 08:59:17"}
{"level":"debug","message":"[database-genPageConfig.js] Saved index.jsx to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-monorepo/wf-studio/index.jsx","timestamp":"2025-10-03 08:59:17"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview-routes.js with 3 routes","timestamp":"2025-10-03 08:59:17"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview routes manifest","timestamp":"2025-10-03 08:59:17"}
{"level":"info","message":"[genPageConfigController.js] PageConfig generated successfully for pageID: 23","timestamp":"2025-10-03 08:59:17"}
{"level":"info","message":"[app.js]  Response: POST /api/genPageConfig 200 (274ms)","timestamp":"2025-10-03 08:59:17"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-10-03 09:01:34"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-10-03 09:01:34"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-10-03 09:01:34"}
{"level":"debug","message":"[index.js]  Initializing routes","timestamp":"2025-10-03 09:01:34"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-10-03 09:01:34"}
{"0":"POST /api/execEventType","1":"GET /api/eventType/:xrefId","10":"POST /api/clearVals","11":"GET /api/studio/genPageConfig","12":"POST /api/genPageConfig","13":"POST /api/initialize","14":"GET /api/util/list-routes","15":"POST /api/util/restart-server","16":"POST /api/auth/login","2":"GET /api/eventTypes","3":"GET /api/triggers","4":"POST /api/execDML","5":"POST /api/execCreateDoc","6":"GET /api/getDoc","7":"POST /api/studio/genFields","8":"GET /api/getVal","9":"POST /api/setVals","level":"info","message":"[registerRoutes.js] Routes registered:","timestamp":"2025-10-03 09:01:34"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-10-03 09:01:34"}
{"level":"debug","message":"[index.js]  Routes initialized","timestamp":"2025-10-03 09:01:34"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-10-03 09:01:34"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-10-03 09:01:34"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-10-03 09:01:34"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-10-03 09:01:34"}
{"body":{"pageID":23},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/genPageConfig","timestamp":"2025-10-03 09:01:44"}
{"level":"http","message":"[genPageConfigController.js] POST /api/genPageConfig","timestamp":"2025-10-03 09:01:44"}
{"level":"debug","message":"[genPageConfigController.js] Generating pageConfig for pageID: 23","timestamp":"2025-10-03 09:01:44"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 23","timestamp":"2025-10-03 09:01:44"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 09:01:45"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 09:01:45"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-03 09:01:45"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":1007.824847,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 09:01:45"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:01:45"}
{"level":"debug","message":"[database-genPageConfig.js] Loaded 10 components from database","timestamp":"2025-10-03 09:01:45"}
{"level":"debug","message":"[database-genPageConfig.js] Processing 10 components from database","timestamp":"2025-10-03 09:01:45"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for wf-studio: 3 props","timestamp":"2025-10-03 09:01:45"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for studio: 1 trigger classes","timestamp":"2025-10-03 09:01:45"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for selectApp: 2 trigger classes","timestamp":"2025-10-03 09:01:45"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for selectPage: 2 trigger classes","timestamp":"2025-10-03 09:01:45"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for previewPage: 1 trigger classes","timestamp":"2025-10-03 09:01:45"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioSidebar: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:177:11\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-10-03 09:01:45"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for selectApp: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:177:11\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:177:11\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)","timestamp":"2025-10-03 09:01:45"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioComponent: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:177:11\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-10-03 09:01:45"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioWorkArea: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:177:11\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-10-03 09:01:45"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageConfig.json to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-monorepo/wf-studio/pageConfig.json","timestamp":"2025-10-03 09:01:45"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageMermaid.mmd to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-monorepo/wf-studio/pageMermaid.mmd","timestamp":"2025-10-03 09:01:45"}
{"level":"debug","message":"[database-genPageConfig.js] Saved index.jsx to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-monorepo/wf-studio/index.jsx","timestamp":"2025-10-03 09:01:45"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview-routes.js with 3 routes","timestamp":"2025-10-03 09:01:45"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview routes manifest","timestamp":"2025-10-03 09:01:45"}
{"level":"info","message":"[genPageConfigController.js] PageConfig generated successfully for pageID: 23","timestamp":"2025-10-03 09:01:45"}
{"level":"info","message":"[app.js]  Response: POST /api/genPageConfig 200 (1041ms)","timestamp":"2025-10-03 09:01:45"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1040.889892,"method":"POST","operation":"http_request","path":"/api/genPageConfig","status":200},"timestamp":"2025-10-03 09:01:45"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 09:02:14"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 09:02:14"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 09:02:14"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 09:02:14"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 09:02:14"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 09:02:15"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":501.321249,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 09:02:15"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:02:15"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 09:02:15"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 09:02:15"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (507ms)","timestamp":"2025-10-03 09:02:15"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":506.914659,"method":"GET","operation":"http_request","path":"/api/eventTypes","status":304},"timestamp":"2025-10-03 09:02:15"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 09:02:15"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 09:02:15"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 09:02:15"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 09:02:15"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 09:02:15"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 09:02:15"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":92.218194,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 09:02:15"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:02:15"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 09:02:15"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 09:02:15"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (95ms)","timestamp":"2025-10-03 09:02:15"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 09:02:27"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 09:02:27"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 09:02:27"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 09:02:27"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 09:02:27"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 09:02:27"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 09:02:27"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":437.531296,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 09:02:27"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:02:27"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 09:02:27"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 09:02:27"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 09:02:27"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 09:02:27"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 09:02:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":95.930327,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 09:02:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:02:28"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 09:02:28"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 09:02:28"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 09:02:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":843.354305,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 09:02:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:02:28"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 09:02:28"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 09:02:28"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 09:02:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":440.89519,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 09:02:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:02:28"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 09:02:28"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 09:02:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":898.097994,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 09:02:28"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:02:28"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 09:02:28"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 09:02:28"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":519.931539,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 09:02:29"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:02:29"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 09:02:29"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 09:02:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":620.210365,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 09:02:29"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:02:29"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 09:02:29"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 09:02:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":592.723228,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 09:02:29"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:02:29"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 09:02:29"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 09:02:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":387.386329,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 09:02:29"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:02:29"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 09:02:29"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (2453ms)","timestamp":"2025-10-03 09:02:29"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2452.622616,"method":"POST","operation":"http_request","path":"/api/clearVals","status":200},"timestamp":"2025-10-03 09:02:29"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 09:02:29"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 09:02:29"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 09:02:29"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 09:02:29"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 09:02:29"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 09:02:30"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":316.873224,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 09:02:30"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:02:30"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 09:02:30"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 09:02:30"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 09:02:30"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":403.378641,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 09:02:30"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:02:30"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 09:02:30"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (2806ms)","timestamp":"2025-10-03 09:02:30"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2805.670169,"method":"POST","operation":"http_request","path":"/api/clearVals","status":200},"timestamp":"2025-10-03 09:02:30"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 09:02:30"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 09:02:30"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 09:02:30"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 09:02:30"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 09:02:30"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 09:02:30"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":305.250115,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 09:02:30"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:02:30"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 09:02:30"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 09:02:30"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 09:02:30"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 09:02:30"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 09:02:30"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":292.2343,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 09:02:30"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:02:30"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 09:02:30"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 09:02:30"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 09:02:30"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 09:02:30"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":341.267998,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 09:02:30"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:02:30"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 09:02:30"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (967ms)","timestamp":"2025-10-03 09:02:30"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":967.472764,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-03 09:02:30"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 09:02:30"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":340.097783,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 09:02:30"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:02:30"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 09:02:30"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 09:02:30"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 09:02:30"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 09:02:30"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 09:02:30"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":41.870693,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 09:02:30"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:02:30"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 09:02:30"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (681ms)","timestamp":"2025-10-03 09:02:30"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":681.32228,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-03 09:02:30"}
{"body":{"pageID":24},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/genPageConfig","timestamp":"2025-10-03 09:04:02"}
{"level":"http","message":"[genPageConfigController.js] POST /api/genPageConfig","timestamp":"2025-10-03 09:04:02"}
{"level":"debug","message":"[genPageConfigController.js] Generating pageConfig for pageID: 24","timestamp":"2025-10-03 09:04:02"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 24","timestamp":"2025-10-03 09:04:02"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 09:04:02"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 09:04:02"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-03 09:04:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":166.7548,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 09:04:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:04:02"}
{"level":"debug","message":"[database-genPageConfig.js] Loaded 9 components from database","timestamp":"2025-10-03 09:04:02"}
{"level":"debug","message":"[database-genPageConfig.js] Processing 9 components from database","timestamp":"2025-10-03 09:04:02"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for wf-studio: 3 props","timestamp":"2025-10-03 09:04:02"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for studio: 1 trigger classes","timestamp":"2025-10-03 09:04:02"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for selectApp: 2 trigger classes","timestamp":"2025-10-03 09:04:02"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for selectPage: 2 trigger classes","timestamp":"2025-10-03 09:04:02"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for previewPage: 1 trigger classes","timestamp":"2025-10-03 09:04:02"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioSidebar: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 09:04:02"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for selectApp: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:177:11\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-10-03 09:04:02"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioComponent: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 09:04:02"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioWorkArea: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 09:04:02"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageConfig.json to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-studio/studio/pageConfig.json","timestamp":"2025-10-03 09:04:02"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageMermaid.mmd to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-studio/studio/pageMermaid.mmd","timestamp":"2025-10-03 09:04:02"}
{"level":"debug","message":"[database-genPageConfig.js] Saved index.jsx to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-studio/studio/index.jsx","timestamp":"2025-10-03 09:04:02"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview-routes.js with 4 routes","timestamp":"2025-10-03 09:04:02"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview routes manifest","timestamp":"2025-10-03 09:04:02"}
{"level":"info","message":"[genPageConfigController.js] PageConfig generated successfully for pageID: 24","timestamp":"2025-10-03 09:04:02"}
{"level":"info","message":"[app.js]  Response: POST /api/genPageConfig 200 (193ms)","timestamp":"2025-10-03 09:04:03"}
{"body":{"pageID":24},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/genPageConfig","timestamp":"2025-10-03 09:04:16"}
{"level":"http","message":"[genPageConfigController.js] POST /api/genPageConfig","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[genPageConfigController.js] Generating pageConfig for pageID: 24","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 24","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 09:04:16"}
{"body":{"pageID":24},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/genPageConfig","timestamp":"2025-10-03 09:04:16"}
{"level":"http","message":"[genPageConfigController.js] POST /api/genPageConfig","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[genPageConfigController.js] Generating pageConfig for pageID: 24","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 24","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 09:04:16"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-03 09:04:16"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":58.50511,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[database-genPageConfig.js] Loaded 9 components from database","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[database-genPageConfig.js] Processing 9 components from database","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for wf-studio: 3 props","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for studio: 1 trigger classes","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for selectApp: 2 trigger classes","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for selectPage: 2 trigger classes","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for previewPage: 1 trigger classes","timestamp":"2025-10-03 09:04:16"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioSidebar: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 09:04:16"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for selectApp: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:177:11\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-10-03 09:04:16"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioComponent: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 09:04:16"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioWorkArea: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageConfig.json to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-studio/studio/pageConfig.json","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageMermaid.mmd to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-studio/studio/pageMermaid.mmd","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[database-genPageConfig.js] Saved index.jsx to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-studio/studio/index.jsx","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview-routes.js with 4 routes","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview routes manifest","timestamp":"2025-10-03 09:04:16"}
{"level":"info","message":"[genPageConfigController.js] PageConfig generated successfully for pageID: 24","timestamp":"2025-10-03 09:04:16"}
{"level":"info","message":"[app.js]  Response: POST /api/genPageConfig 200 (103ms)","timestamp":"2025-10-03 09:04:16"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-03 09:04:16"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":119.253384,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[database-genPageConfig.js] Loaded 9 components from database","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[database-genPageConfig.js] Processing 9 components from database","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for wf-studio: 3 props","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for studio: 1 trigger classes","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for selectApp: 2 trigger classes","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for selectPage: 2 trigger classes","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for previewPage: 1 trigger classes","timestamp":"2025-10-03 09:04:16"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioSidebar: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 09:04:16"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for selectApp: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:177:11\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-10-03 09:04:16"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioComponent: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 09:04:16"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioWorkArea: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageConfig.json to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-studio/studio/pageConfig.json","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageMermaid.mmd to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-studio/studio/pageMermaid.mmd","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[database-genPageConfig.js] Saved index.jsx to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-studio/studio/index.jsx","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview-routes.js with 4 routes","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview routes manifest","timestamp":"2025-10-03 09:04:16"}
{"level":"info","message":"[genPageConfigController.js] PageConfig generated successfully for pageID: 24","timestamp":"2025-10-03 09:04:16"}
{"level":"info","message":"[app.js]  Response: POST /api/genPageConfig 200 (166ms)","timestamp":"2025-10-03 09:04:16"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 09:04:16"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 09:04:16"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 09:04:16"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":153.133911,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:04:16"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 09:04:16"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 09:04:16"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (160ms)","timestamp":"2025-10-03 09:04:16"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 09:04:16"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 09:04:16"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 09:04:16"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 09:04:17"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":405.915601,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 09:04:17"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:04:17"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 09:04:17"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 09:04:17"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (417ms)","timestamp":"2025-10-03 09:04:17"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 09:04:17"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 09:04:17"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-03 09:04:17"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 09:04:17"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 09:04:17"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 09:04:17"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 09:04:17"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-03 09:04:17"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 09:04:17"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 09:04:17"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 09:04:18"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":338.221706,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 09:04:18"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:04:18"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-03 09:04:18"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name \r\n  FROM api_wf.app\r\n  ORDER BY name","timestamp":"2025-10-03 09:04:18"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 09:04:18"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 09:04:18"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 09:04:18"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":331.164164,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 09:04:18"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:04:18"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-03 09:04:18"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name \r\n  FROM api_wf.app\r\n  ORDER BY name","timestamp":"2025-10-03 09:04:18"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 09:04:18"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 09:04:18"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 5","timestamp":"2025-10-03 09:04:18"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":502.64682,"method":"GET","operation":"database_query","rowCount":5,"success":true},"timestamp":"2025-10-03 09:04:18"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:04:18"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-03 09:04:18"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (839ms)","timestamp":"2025-10-03 09:04:18"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":839.057007,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-03 09:04:18"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 5","timestamp":"2025-10-03 09:04:18"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":512.40973,"method":"GET","operation":"database_query","rowCount":5,"success":true},"timestamp":"2025-10-03 09:04:18"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:04:18"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-03 09:04:18"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (857ms)","timestamp":"2025-10-03 09:04:18"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":856.618328,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-10-03 09:04:18"}
{"body":{"pageID":24},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/genPageConfig","timestamp":"2025-10-03 09:04:53"}
{"level":"http","message":"[genPageConfigController.js] POST /api/genPageConfig","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[genPageConfigController.js] Generating pageConfig for pageID: 24","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 24","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 09:04:53"}
{"body":{"pageID":24},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/genPageConfig","timestamp":"2025-10-03 09:04:53"}
{"level":"http","message":"[genPageConfigController.js] POST /api/genPageConfig","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[genPageConfigController.js] Generating pageConfig for pageID: 24","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 24","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 09:04:53"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-03 09:04:53"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":43.01786,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[database-genPageConfig.js] Loaded 9 components from database","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[database-genPageConfig.js] Processing 9 components from database","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for wf-studio: 3 props","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for studio: 1 trigger classes","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for selectApp: 2 trigger classes","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for selectPage: 2 trigger classes","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for previewPage: 1 trigger classes","timestamp":"2025-10-03 09:04:53"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioSidebar: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 09:04:53"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for selectApp: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:177:11\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-10-03 09:04:53"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioComponent: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 09:04:53"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioWorkArea: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 09:04:53"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-03 09:04:53"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":41.975025,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[database-genPageConfig.js] Loaded 9 components from database","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[database-genPageConfig.js] Processing 9 components from database","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for wf-studio: 3 props","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for studio: 1 trigger classes","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for selectApp: 2 trigger classes","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for selectPage: 2 trigger classes","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for previewPage: 1 trigger classes","timestamp":"2025-10-03 09:04:53"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioSidebar: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 09:04:53"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for selectApp: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:177:11\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-10-03 09:04:53"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioComponent: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 09:04:53"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioWorkArea: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageConfig.json to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-studio/studio/pageConfig.json","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageConfig.json to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-studio/studio/pageConfig.json","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageMermaid.mmd to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-studio/studio/pageMermaid.mmd","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageMermaid.mmd to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-studio/studio/pageMermaid.mmd","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[database-genPageConfig.js] Saved index.jsx to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-studio/studio/index.jsx","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[database-genPageConfig.js] Saved index.jsx to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/wf-studio/studio/index.jsx","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview-routes.js with 4 routes","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview routes manifest","timestamp":"2025-10-03 09:04:53"}
{"level":"info","message":"[genPageConfigController.js] PageConfig generated successfully for pageID: 24","timestamp":"2025-10-03 09:04:53"}
{"level":"info","message":"[app.js]  Response: POST /api/genPageConfig 200 (93ms)","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview-routes.js with 4 routes","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview routes manifest","timestamp":"2025-10-03 09:04:53"}
{"level":"info","message":"[genPageConfigController.js] PageConfig generated successfully for pageID: 24","timestamp":"2025-10-03 09:04:53"}
{"level":"info","message":"[app.js]  Response: POST /api/genPageConfig 200 (82ms)","timestamp":"2025-10-03 09:04:53"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 09:04:53"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 09:04:53"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 09:04:53"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":143.313361,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:04:53"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 09:04:53"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 09:04:53"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (147ms)","timestamp":"2025-10-03 09:04:53"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 09:04:53"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 09:04:53"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 09:04:53"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":75.561296,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 09:04:53"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:04:53"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 09:04:53"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 09:04:53"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (85ms)","timestamp":"2025-10-03 09:04:53"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 09:04:54"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 09:04:54"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-03 09:04:54"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 09:04:54"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 09:04:54"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 09:04:54"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 09:04:54"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-03 09:04:54"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 09:04:54"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 09:04:54"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 09:04:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":34.560573,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 09:04:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:04:54"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-03 09:04:54"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name \r\n  FROM api_wf.app\r\n  ORDER BY name","timestamp":"2025-10-03 09:04:54"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 09:04:54"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 09:04:54"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 09:04:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":40.278103,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 09:04:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:04:54"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-03 09:04:54"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name \r\n  FROM api_wf.app\r\n  ORDER BY name","timestamp":"2025-10-03 09:04:54"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 09:04:54"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 09:04:54"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 5","timestamp":"2025-10-03 09:04:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.800589,"method":"GET","operation":"database_query","rowCount":5,"success":true},"timestamp":"2025-10-03 09:04:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:04:54"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-03 09:04:54"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (81ms)","timestamp":"2025-10-03 09:04:54"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 5","timestamp":"2025-10-03 09:04:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":41.229178,"method":"GET","operation":"database_query","rowCount":5,"success":true},"timestamp":"2025-10-03 09:04:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 09:04:54"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-03 09:04:54"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (79ms)","timestamp":"2025-10-03 09:04:54"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-03 09:16:34"}
{"body":{"data":{},"method":"SELECT","table":"api_wf.apps"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execDML","timestamp":"2025-10-03 10:14:43"}
{"level":"http","message":"[execDML.js] POST /api/execDML","timestamp":"2025-10-03 10:14:43"}
{"data":{},"level":"debug","message":"[dmlProcessor.js] Processing SELECT on api_wf.apps","timestamp":"2025-10-03 10:14:43"}
{"code":"INVALID_METHOD","level":"error","message":"[execDML.js] DML operation failed: Method must be INSERT, UPDATE, or DELETE. Got: SELECT","stack":"Error: Method must be INSERT, UPDATE, or DELETE. Got: SELECT\n    at processDML (file:///home/paul/wf-monorepo-new/apps/wf-server/server/utils/dml/dmlProcessor.js:50:19)\n    at execDML (file:///home/paul/wf-monorepo-new/apps/wf-server/server/controller/execDML.js:13:30)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:157:13)\n    at Route.dispatch (/home/paul/wf-monorepo-new/node_modules/router/lib/route.js:117:3)\n    at handle (/home/paul/wf-monorepo-new/node_modules/router/index.js:435:11)\n    at Layer.handleRequest (/home/paul/wf-monorepo-new/node_modules/router/lib/layer.js:152:17)\n    at /home/paul/wf-monorepo-new/node_modules/router/index.js:295:15\n    at processParams (/home/paul/wf-monorepo-new/node_modules/router/index.js:582:12)\n    at next (/home/paul/wf-monorepo-new/node_modules/router/index.js:291:5)","status":400,"timestamp":"2025-10-03 10:14:43"}
{"level":"info","message":"[app.js]  Response: POST /api/execDML 400 (3ms)","timestamp":"2025-10-03 10:14:43"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":3.471083,"method":"POST","operation":"http_request","path":"/api/execDML","status":400},"timestamp":"2025-10-03 10:14:43"}
{"body":{"query":"SELECT * FROM api_wf.apps ORDER BY id"},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execQuery","timestamp":"2025-10-03 10:14:48"}
{"level":"warn","message":"[server.js] Route not found: POST /api/execQuery","timestamp":"2025-10-03 10:14:48"}
{"level":"info","message":"[app.js]  Response: POST /api/execQuery 404 (1ms)","timestamp":"2025-10-03 10:14:48"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.302126,"method":"POST","operation":"http_request","path":"/api/execQuery","status":404},"timestamp":"2025-10-03 10:14:48"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-10-03 10:21:05"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-10-03 10:21:06"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-10-03 10:21:06"}
{"level":"debug","message":"[index.js]  Initializing routes","timestamp":"2025-10-03 10:21:06"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-10-03 10:21:06"}
{"0":"POST /api/execEventType","1":"GET /api/eventType/:xrefId","10":"POST /api/clearVals","11":"GET /api/studio/genPageConfig","12":"POST /api/genPageConfig","13":"POST /api/initialize","14":"GET /api/util/list-routes","15":"POST /api/util/restart-server","16":"POST /api/auth/login","2":"GET /api/eventTypes","3":"GET /api/triggers","4":"POST /api/execDML","5":"POST /api/execCreateDoc","6":"GET /api/getDoc","7":"POST /api/studio/genFields","8":"GET /api/getVal","9":"POST /api/setVals","level":"info","message":"[registerRoutes.js] Routes registered:","timestamp":"2025-10-03 10:21:06"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-10-03 10:21:06"}
{"level":"debug","message":"[index.js]  Routes initialized","timestamp":"2025-10-03 10:21:06"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-10-03 10:21:06"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-10-03 10:21:06"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-10-03 10:21:06"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-10-03 10:21:06"}
{"body":{"pageID":24},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/genPageConfig","timestamp":"2025-10-03 10:21:59"}
{"level":"http","message":"[genPageConfigController.js] POST /api/genPageConfig","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[genPageConfigController.js] Generating pageConfig for pageID: 24","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 24","timestamp":"2025-10-03 10:21:59"}
{"body":{"pageID":24},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/genPageConfig","timestamp":"2025-10-03 10:21:59"}
{"level":"http","message":"[genPageConfigController.js] POST /api/genPageConfig","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[genPageConfigController.js] Generating pageConfig for pageID: 24","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 24","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":231.968594,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[database-genPageConfig.js] Loaded 9 components from database","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[database-genPageConfig.js] Processing 9 components from database","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for studio: 3 props","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for studio: 1 trigger classes","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for selectApp: 2 trigger classes","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for selectPage: 2 trigger classes","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for previewPage: 1 trigger classes","timestamp":"2025-10-03 10:21:59"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioSidebar: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 10:21:59"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for selectApp: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:146:8)\n    at file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:177:11\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-10-03 10:21:59"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioComponent: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 10:21:59"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioWorkArea: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageConfig.json to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/studio/studio/pageConfig.json","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageMermaid.mmd to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/studio/studio/pageMermaid.mmd","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[database-genPageConfig.js] Saved index.jsx to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/studio/studio/index.jsx","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":228.572888,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[database-genPageConfig.js] Loaded 9 components from database","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[database-genPageConfig.js] Processing 9 components from database","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for studio: 3 props","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for studio: 1 trigger classes","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for selectApp: 2 trigger classes","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for selectPage: 2 trigger classes","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for previewPage: 1 trigger classes","timestamp":"2025-10-03 10:21:59"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioSidebar: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 10:21:59"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for selectApp: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:146:8)\n    at file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:177:11\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-10-03 10:21:59"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioComponent: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 10:21:59"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioWorkArea: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[database-genPageConfig.js] No existing preview-routes.js, creating new","timestamp":"2025-10-03 10:21:59"}
{"code":"ENOENT","errno":-2,"level":"error","message":"[database-genPageConfig.js] Error updating preview routes: ENOENT: no such file or directory, open '/home/paul/wf-monorepo-new/apps/wf-studio/src/config/preview-routes.js'","path":"/home/paul/wf-monorepo-new/apps/wf-studio/src/config/preview-routes.js","stack":"Error: ENOENT: no such file or directory, open '/home/paul/wf-monorepo-new/apps/wf-studio/src/config/preview-routes.js'\n    at async open (node:internal/fs/promises:639:25)\n    at async Object.writeFile (node:internal/fs/promises:1213:14)\n    at async updatePreviewRoutes (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:63:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:520:20)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","syscall":"open","timestamp":"2025-10-03 10:21:59"}
{"level":"warn","message":"[database-genPageConfig.js] Could not update preview routes: ENOENT: no such file or directory, open '/home/paul/wf-monorepo-new/apps/wf-studio/src/config/preview-routes.js'","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"[genPageConfigController.js] PageConfig generated successfully for pageID: 24","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"[app.js]  Response: POST /api/genPageConfig 200 (267ms)","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageConfig.json to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/studio/studio/pageConfig.json","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageMermaid.mmd to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/studio/studio/pageMermaid.mmd","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[database-genPageConfig.js] Saved index.jsx to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/studio/studio/index.jsx","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[database-genPageConfig.js] No existing preview-routes.js, creating new","timestamp":"2025-10-03 10:21:59"}
{"code":"ENOENT","errno":-2,"level":"error","message":"[database-genPageConfig.js] Error updating preview routes: ENOENT: no such file or directory, open '/home/paul/wf-monorepo-new/apps/wf-studio/src/config/preview-routes.js'","path":"/home/paul/wf-monorepo-new/apps/wf-studio/src/config/preview-routes.js","stack":"Error: ENOENT: no such file or directory, open '/home/paul/wf-monorepo-new/apps/wf-studio/src/config/preview-routes.js'\n    at async open (node:internal/fs/promises:639:25)\n    at async Object.writeFile (node:internal/fs/promises:1213:14)\n    at async updatePreviewRoutes (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:63:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:520:20)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","syscall":"open","timestamp":"2025-10-03 10:21:59"}
{"level":"warn","message":"[database-genPageConfig.js] Could not update preview routes: ENOENT: no such file or directory, open '/home/paul/wf-monorepo-new/apps/wf-studio/src/config/preview-routes.js'","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"[genPageConfigController.js] PageConfig generated successfully for pageID: 24","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"[app.js]  Response: POST /api/genPageConfig 200 (254ms)","timestamp":"2025-10-03 10:21:59"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 10:21:59"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 10:21:59"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 10:21:59"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 10:21:59"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 10:21:59"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-03 10:21:59"}
{"body":{"eventSQLId":"appList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 10:21:59"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: appList","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":102.173361,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 10:21:59"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (106ms)","timestamp":"2025-10-03 10:21:59"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 10:21:59"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":68.949039,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name \r\n  FROM api_wf.app\r\n  ORDER BY name","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":37.164815,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 10:21:59"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (41ms)","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 5","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":74.662368,"method":"GET","operation":"database_query","rowCount":5,"success":true},"timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (148ms)","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":219.386611,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name \r\n  FROM api_wf.app\r\n  ORDER BY name","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":223.395356,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: appList (ID: 1)","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[execEventType.js] Executing SQL: SELECT id, name \r\n  FROM api_wf.app\r\n  ORDER BY name","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 5","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":33.175642,"method":"GET","operation":"database_query","rowCount":5,"success":true},"timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (259ms)","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 5","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":64.329285,"method":"GET","operation":"database_query","rowCount":5,"success":true},"timestamp":"2025-10-03 10:21:59"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: appList (ID: 1)","timestamp":"2025-10-03 10:21:59"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (290ms)","timestamp":"2025-10-03 10:21:59"}
{"body":{"pageID":24},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/genPageConfig","timestamp":"2025-10-03 10:30:10"}
{"level":"http","message":"[genPageConfigController.js] POST /api/genPageConfig","timestamp":"2025-10-03 10:30:10"}
{"level":"debug","message":"[genPageConfigController.js] Generating pageConfig for pageID: 24","timestamp":"2025-10-03 10:30:10"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 24","timestamp":"2025-10-03 10:30:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 10:30:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 10:30:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-03 10:30:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":201.087839,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 10:30:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 10:30:10"}
{"level":"debug","message":"[database-genPageConfig.js] Loaded 9 components from database","timestamp":"2025-10-03 10:30:10"}
{"level":"debug","message":"[database-genPageConfig.js] Processing 9 components from database","timestamp":"2025-10-03 10:30:10"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for studio: 3 props","timestamp":"2025-10-03 10:30:10"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for studio: 1 trigger classes","timestamp":"2025-10-03 10:30:10"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for selectApp: 2 trigger classes","timestamp":"2025-10-03 10:30:10"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for selectPage: 2 trigger classes","timestamp":"2025-10-03 10:30:10"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for previewPage: 1 trigger classes","timestamp":"2025-10-03 10:30:10"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioSidebar: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 10:30:10"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for selectApp: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:146:8)\n    at file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:177:11\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-10-03 10:30:10"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioComponent: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 10:30:10"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioWorkArea: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 10:30:10"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageConfig.json to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/studio/studio/pageConfig.json","timestamp":"2025-10-03 10:30:10"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageMermaid.mmd to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/studio/studio/pageMermaid.mmd","timestamp":"2025-10-03 10:30:10"}
{"level":"debug","message":"[database-genPageConfig.js] Saved index.jsx to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/studio/studio/index.jsx","timestamp":"2025-10-03 10:30:10"}
{"level":"debug","message":"[database-genPageConfig.js] No existing preview-routes.js, creating new","timestamp":"2025-10-03 10:30:10"}
{"code":"ENOENT","errno":-2,"level":"error","message":"[database-genPageConfig.js] Error updating preview routes: ENOENT: no such file or directory, open '/home/paul/wf-monorepo-new/apps/wf-studio/src/config/preview-routes.js'","path":"/home/paul/wf-monorepo-new/apps/wf-studio/src/config/preview-routes.js","stack":"Error: ENOENT: no such file or directory, open '/home/paul/wf-monorepo-new/apps/wf-studio/src/config/preview-routes.js'\n    at async open (node:internal/fs/promises:639:25)\n    at async Object.writeFile (node:internal/fs/promises:1213:14)\n    at async updatePreviewRoutes (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:63:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:520:20)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","syscall":"open","timestamp":"2025-10-03 10:30:10"}
{"level":"warn","message":"[database-genPageConfig.js] Could not update preview routes: ENOENT: no such file or directory, open '/home/paul/wf-monorepo-new/apps/wf-studio/src/config/preview-routes.js'","timestamp":"2025-10-03 10:30:10"}
{"level":"info","message":"[genPageConfigController.js] PageConfig generated successfully for pageID: 24","timestamp":"2025-10-03 10:30:10"}
{"level":"info","message":"[app.js]  Response: POST /api/genPageConfig 200 (216ms)","timestamp":"2025-10-03 10:30:10"}
{"body":{"pageID":57},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/genPageConfig","timestamp":"2025-10-03 10:30:51"}
{"level":"http","message":"[genPageConfigController.js] POST /api/genPageConfig","timestamp":"2025-10-03 10:30:51"}
{"level":"debug","message":"[genPageConfigController.js] Generating pageConfig for pageID: 57","timestamp":"2025-10-03 10:30:51"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 57","timestamp":"2025-10-03 10:30:51"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 10:30:51"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 10:30:51"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-03 10:30:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":229.838665,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 10:30:51"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 10:30:51"}
{"level":"debug","message":"[database-genPageConfig.js] Loaded 5 components from database","timestamp":"2025-10-03 10:30:51"}
{"level":"debug","message":"[database-genPageConfig.js] Processing 5 components from database","timestamp":"2025-10-03 10:30:51"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for whatsfresh: 3 props","timestamp":"2025-10-03 10:30:51"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypePage: 1 trigger classes","timestamp":"2025-10-03 10:30:51"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for ingrTypeGrid: 3 props","timestamp":"2025-10-03 10:30:51"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypeGrid: 2 trigger classes","timestamp":"2025-10-03 10:30:51"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for ingrTypeForm: 2 props","timestamp":"2025-10-03 10:30:51"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypeForm: 3 trigger classes","timestamp":"2025-10-03 10:30:51"}
{"level":"debug","message":"[database-genPageConfig.js] Expanding grid ingrTypeGrid with 1 columns into component tree","timestamp":"2025-10-03 10:30:51"}
{"level":"debug","message":"[database-genPageConfig.js] Expanding form ingrTypeForm with 4 fields into component tree","timestamp":"2025-10-03 10:30:51"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageConfig.json to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/whatsfresh/ingrTypePage/pageConfig.json","timestamp":"2025-10-03 10:30:51"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageMermaid.mmd to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/whatsfresh/ingrTypePage/pageMermaid.mmd","timestamp":"2025-10-03 10:30:51"}
{"level":"debug","message":"[database-genPageConfig.js] Saved index.jsx to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/whatsfresh/ingrTypePage/index.jsx","timestamp":"2025-10-03 10:30:51"}
{"level":"debug","message":"[database-genPageConfig.js] No existing preview-routes.js, creating new","timestamp":"2025-10-03 10:30:51"}
{"code":"ENOENT","errno":-2,"level":"error","message":"[database-genPageConfig.js] Error updating preview routes: ENOENT: no such file or directory, open '/home/paul/wf-monorepo-new/apps/wf-studio/src/config/preview-routes.js'","path":"/home/paul/wf-monorepo-new/apps/wf-studio/src/config/preview-routes.js","stack":"Error: ENOENT: no such file or directory, open '/home/paul/wf-monorepo-new/apps/wf-studio/src/config/preview-routes.js'\n    at async open (node:internal/fs/promises:639:25)\n    at async Object.writeFile (node:internal/fs/promises:1213:14)\n    at async updatePreviewRoutes (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:63:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:520:20)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","syscall":"open","timestamp":"2025-10-03 10:30:51"}
{"level":"warn","message":"[database-genPageConfig.js] Could not update preview routes: ENOENT: no such file or directory, open '/home/paul/wf-monorepo-new/apps/wf-studio/src/config/preview-routes.js'","timestamp":"2025-10-03 10:30:51"}
{"level":"info","message":"[genPageConfigController.js] PageConfig generated successfully for pageID: 57","timestamp":"2025-10-03 10:30:51"}
{"level":"info","message":"[app.js]  Response: POST /api/genPageConfig 200 (249ms)","timestamp":"2025-10-03 10:30:51"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-03 10:36:05"}
{"body":{"pageID":57},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/genPageConfig","timestamp":"2025-10-03 10:46:48"}
{"level":"http","message":"[genPageConfigController.js] POST /api/genPageConfig","timestamp":"2025-10-03 10:46:48"}
{"level":"debug","message":"[genPageConfigController.js] Generating pageConfig for pageID: 57","timestamp":"2025-10-03 10:46:48"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 57","timestamp":"2025-10-03 10:46:48"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 10:46:48"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 10:46:48"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-03 10:46:48"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":96.932205,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 10:46:48"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 10:46:48"}
{"level":"debug","message":"[database-genPageConfig.js] Loaded 5 components from database","timestamp":"2025-10-03 10:46:48"}
{"level":"debug","message":"[database-genPageConfig.js] Processing 5 components from database","timestamp":"2025-10-03 10:46:48"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for whatsfresh: 3 props","timestamp":"2025-10-03 10:46:48"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypePage: 1 trigger classes","timestamp":"2025-10-03 10:46:48"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for ingrTypeGrid: 3 props","timestamp":"2025-10-03 10:46:48"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypeGrid: 2 trigger classes","timestamp":"2025-10-03 10:46:48"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for ingrTypeForm: 2 props","timestamp":"2025-10-03 10:46:48"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypeForm: 3 trigger classes","timestamp":"2025-10-03 10:46:48"}
{"level":"debug","message":"[database-genPageConfig.js] Expanding grid ingrTypeGrid with 1 columns into component tree","timestamp":"2025-10-03 10:46:48"}
{"level":"debug","message":"[database-genPageConfig.js] Expanding form ingrTypeForm with 4 fields into component tree","timestamp":"2025-10-03 10:46:48"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageConfig.json to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/whatsfresh/ingrTypePage/pageConfig.json","timestamp":"2025-10-03 10:46:48"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageMermaid.mmd to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/whatsfresh/ingrTypePage/pageMermaid.mmd","timestamp":"2025-10-03 10:46:48"}
{"level":"debug","message":"[database-genPageConfig.js] Saved index.jsx to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/whatsfresh/ingrTypePage/index.jsx","timestamp":"2025-10-03 10:46:48"}
{"level":"debug","message":"[database-genPageConfig.js] No existing preview-routes.js, creating new","timestamp":"2025-10-03 10:46:48"}
{"code":"ENOENT","errno":-2,"level":"error","message":"[database-genPageConfig.js] Error updating preview routes: ENOENT: no such file or directory, open '/home/paul/wf-monorepo-new/apps/wf-studio/src/config/preview-routes.js'","path":"/home/paul/wf-monorepo-new/apps/wf-studio/src/config/preview-routes.js","stack":"Error: ENOENT: no such file or directory, open '/home/paul/wf-monorepo-new/apps/wf-studio/src/config/preview-routes.js'\n    at async open (node:internal/fs/promises:639:25)\n    at async Object.writeFile (node:internal/fs/promises:1213:14)\n    at async updatePreviewRoutes (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:63:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:520:20)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","syscall":"open","timestamp":"2025-10-03 10:46:48"}
{"level":"warn","message":"[database-genPageConfig.js] Could not update preview routes: ENOENT: no such file or directory, open '/home/paul/wf-monorepo-new/apps/wf-studio/src/config/preview-routes.js'","timestamp":"2025-10-03 10:46:48"}
{"level":"info","message":"[genPageConfigController.js] PageConfig generated successfully for pageID: 57","timestamp":"2025-10-03 10:46:48"}
{"level":"info","message":"[app.js]  Response: POST /api/genPageConfig 200 (115ms)","timestamp":"2025-10-03 10:46:48"}
{"body":{"pageID":57},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/genPageConfig","timestamp":"2025-10-03 10:57:52"}
{"level":"http","message":"[genPageConfigController.js] POST /api/genPageConfig","timestamp":"2025-10-03 10:57:52"}
{"level":"debug","message":"[genPageConfigController.js] Generating pageConfig for pageID: 57","timestamp":"2025-10-03 10:57:52"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 57","timestamp":"2025-10-03 10:57:52"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 10:57:52"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 10:57:52"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-03 10:57:52"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":293.423583,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 10:57:52"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 10:57:52"}
{"level":"debug","message":"[database-genPageConfig.js] Loaded 5 components from database","timestamp":"2025-10-03 10:57:52"}
{"level":"debug","message":"[database-genPageConfig.js] Processing 5 components from database","timestamp":"2025-10-03 10:57:52"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for whatsfresh: 3 props","timestamp":"2025-10-03 10:57:52"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypePage: 1 trigger classes","timestamp":"2025-10-03 10:57:52"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for ingrTypeGrid: 3 props","timestamp":"2025-10-03 10:57:52"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypeGrid: 2 trigger classes","timestamp":"2025-10-03 10:57:52"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for ingrTypeForm: 2 props","timestamp":"2025-10-03 10:57:52"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypeForm: 3 trigger classes","timestamp":"2025-10-03 10:57:52"}
{"level":"debug","message":"[database-genPageConfig.js] Expanding grid ingrTypeGrid with 1 columns into component tree","timestamp":"2025-10-03 10:57:52"}
{"level":"debug","message":"[database-genPageConfig.js] Expanding form ingrTypeForm with 4 fields into component tree","timestamp":"2025-10-03 10:57:52"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageConfig.json to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/whatsfresh/ingrTypePage/pageConfig.json","timestamp":"2025-10-03 10:57:52"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageMermaid.mmd to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/whatsfresh/ingrTypePage/pageMermaid.mmd","timestamp":"2025-10-03 10:57:52"}
{"level":"debug","message":"[database-genPageConfig.js] Saved index.jsx to /home/paul/wf-monorepo-new/apps/wf-studio/src/preview/whatsfresh/ingrTypePage/index.jsx","timestamp":"2025-10-03 10:57:52"}
{"level":"debug","message":"[database-genPageConfig.js] No existing preview-routes.js, creating new","timestamp":"2025-10-03 10:57:52"}
{"code":"ENOENT","errno":-2,"level":"error","message":"[database-genPageConfig.js] Error updating preview routes: ENOENT: no such file or directory, open '/home/paul/wf-monorepo-new/apps/wf-studio/src/config/preview-routes.js'","path":"/home/paul/wf-monorepo-new/apps/wf-studio/src/config/preview-routes.js","stack":"Error: ENOENT: no such file or directory, open '/home/paul/wf-monorepo-new/apps/wf-studio/src/config/preview-routes.js'\n    at async open (node:internal/fs/promises:639:25)\n    at async Object.writeFile (node:internal/fs/promises:1213:14)\n    at async updatePreviewRoutes (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:63:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:520:20)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","syscall":"open","timestamp":"2025-10-03 10:57:52"}
{"level":"warn","message":"[database-genPageConfig.js] Could not update preview routes: ENOENT: no such file or directory, open '/home/paul/wf-monorepo-new/apps/wf-studio/src/config/preview-routes.js'","timestamp":"2025-10-03 10:57:52"}
{"level":"info","message":"[genPageConfigController.js] PageConfig generated successfully for pageID: 57","timestamp":"2025-10-03 10:57:52"}
{"level":"info","message":"[app.js]  Response: POST /api/genPageConfig 200 (308ms)","timestamp":"2025-10-03 10:57:52"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 10:58:04"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 10:58:04"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 10:58:04"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 10:58:04"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 10:58:04"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 10:58:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":135.464187,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 10:58:04"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 10:58:04"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 10:58:04"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 10:58:04"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (139ms)","timestamp":"2025-10-03 10:58:04"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 10:58:04"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 10:58:04"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 10:58:04"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 10:58:04"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 10:58:04"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 10:58:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":239.806566,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 10:58:04"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 10:58:04"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 10:58:04"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 10:58:04"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (243ms)","timestamp":"2025-10-03 10:58:04"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-10-03 11:00:52"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-10-03 11:00:52"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-10-03 11:00:52"}
{"level":"debug","message":"[index.js]  Initializing routes","timestamp":"2025-10-03 11:00:52"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-10-03 11:00:52"}
{"0":"POST /api/execEventType","1":"GET /api/eventType/:xrefId","10":"POST /api/clearVals","11":"GET /api/studio/genPageConfig","12":"POST /api/genPageConfig","13":"POST /api/initialize","14":"GET /api/util/list-routes","15":"POST /api/util/restart-server","16":"POST /api/auth/login","2":"GET /api/eventTypes","3":"GET /api/triggers","4":"POST /api/execDML","5":"POST /api/execCreateDoc","6":"GET /api/getDoc","7":"POST /api/studio/genFields","8":"GET /api/getVal","9":"POST /api/setVals","level":"info","message":"[registerRoutes.js] Routes registered:","timestamp":"2025-10-03 11:00:52"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-10-03 11:00:52"}
{"level":"debug","message":"[index.js]  Routes initialized","timestamp":"2025-10-03 11:00:52"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-10-03 11:00:52"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-10-03 11:00:52"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-10-03 11:00:52"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-10-03 11:00:52"}
{"body":{"pageID":57},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/genPageConfig","timestamp":"2025-10-03 11:01:05"}
{"level":"http","message":"[genPageConfigController.js] POST /api/genPageConfig","timestamp":"2025-10-03 11:01:05"}
{"level":"debug","message":"[genPageConfigController.js] Generating pageConfig for pageID: 57","timestamp":"2025-10-03 11:01:05"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 57","timestamp":"2025-10-03 11:01:05"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 11:01:05"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 11:01:05"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-03 11:01:05"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":600.601006,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 11:01:05"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 11:01:05"}
{"level":"debug","message":"[database-genPageConfig.js] Loaded 5 components from database","timestamp":"2025-10-03 11:01:05"}
{"level":"debug","message":"[database-genPageConfig.js] Processing 5 components from database","timestamp":"2025-10-03 11:01:05"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for whatsfresh: 3 props","timestamp":"2025-10-03 11:01:05"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypePage: 1 trigger classes","timestamp":"2025-10-03 11:01:05"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for ingrTypeGrid: 3 props","timestamp":"2025-10-03 11:01:05"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypeGrid: 2 trigger classes","timestamp":"2025-10-03 11:01:05"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for ingrTypeForm: 2 props","timestamp":"2025-10-03 11:01:05"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypeForm: 3 trigger classes","timestamp":"2025-10-03 11:01:05"}
{"level":"debug","message":"[database-genPageConfig.js] Expanding grid ingrTypeGrid with 1 columns into component tree","timestamp":"2025-10-03 11:01:05"}
{"level":"debug","message":"[database-genPageConfig.js] Expanding form ingrTypeForm with 4 fields into component tree","timestamp":"2025-10-03 11:01:05"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageConfig.json to /home/paul/wf-monorepo-new/apps/studio/src/preview/whatsfresh/ingrTypePage/pageConfig.json","timestamp":"2025-10-03 11:01:05"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageMermaid.mmd to /home/paul/wf-monorepo-new/apps/studio/src/preview/whatsfresh/ingrTypePage/pageMermaid.mmd","timestamp":"2025-10-03 11:01:05"}
{"level":"debug","message":"[database-genPageConfig.js] Saved index.jsx to /home/paul/wf-monorepo-new/apps/studio/src/preview/whatsfresh/ingrTypePage/index.jsx","timestamp":"2025-10-03 11:01:05"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview-routes.js with 5 routes","timestamp":"2025-10-03 11:01:05"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview routes manifest","timestamp":"2025-10-03 11:01:05"}
{"level":"info","message":"[genPageConfigController.js] PageConfig generated successfully for pageID: 57","timestamp":"2025-10-03 11:01:05"}
{"level":"info","message":"[app.js]  Response: POST /api/genPageConfig 200 (625ms)","timestamp":"2025-10-03 11:01:05"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":624.932386,"method":"POST","operation":"http_request","path":"/api/genPageConfig","status":200},"timestamp":"2025-10-03 11:01:05"}
{"body":{"pageID":57},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/genPageConfig","timestamp":"2025-10-03 11:04:31"}
{"level":"http","message":"[genPageConfigController.js] POST /api/genPageConfig","timestamp":"2025-10-03 11:04:31"}
{"level":"debug","message":"[genPageConfigController.js] Generating pageConfig for pageID: 57","timestamp":"2025-10-03 11:04:31"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 57","timestamp":"2025-10-03 11:04:31"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 11:04:31"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 11:04:31"}
{"body":{"pageID":57},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/genPageConfig","timestamp":"2025-10-03 11:04:31"}
{"level":"http","message":"[genPageConfigController.js] POST /api/genPageConfig","timestamp":"2025-10-03 11:04:31"}
{"level":"debug","message":"[genPageConfigController.js] Generating pageConfig for pageID: 57","timestamp":"2025-10-03 11:04:31"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 57","timestamp":"2025-10-03 11:04:31"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-03 11:04:32"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":148.783495,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[database-genPageConfig.js] Loaded 5 components from database","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[database-genPageConfig.js] Processing 5 components from database","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for whatsfresh: 3 props","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypePage: 1 trigger classes","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for ingrTypeGrid: 3 props","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypeGrid: 2 trigger classes","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for ingrTypeForm: 2 props","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypeForm: 3 trigger classes","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[database-genPageConfig.js] Expanding grid ingrTypeGrid with 1 columns into component tree","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[database-genPageConfig.js] Expanding form ingrTypeForm with 4 fields into component tree","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageConfig.json to /home/paul/wf-monorepo-new/apps/studio/src/preview/whatsfresh/ingrTypePage/pageConfig.json","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageMermaid.mmd to /home/paul/wf-monorepo-new/apps/studio/src/preview/whatsfresh/ingrTypePage/pageMermaid.mmd","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[database-genPageConfig.js] Saved index.jsx to /home/paul/wf-monorepo-new/apps/studio/src/preview/whatsfresh/ingrTypePage/index.jsx","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview-routes.js with 5 routes","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview routes manifest","timestamp":"2025-10-03 11:04:32"}
{"level":"info","message":"[genPageConfigController.js] PageConfig generated successfully for pageID: 57","timestamp":"2025-10-03 11:04:32"}
{"level":"info","message":"[app.js]  Response: POST /api/genPageConfig 200 (178ms)","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 11:04:32"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 11:04:32"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 11:04:32"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-03 11:04:32"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":702.60671,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[database-genPageConfig.js] Loaded 5 components from database","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[database-genPageConfig.js] Processing 5 components from database","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for whatsfresh: 3 props","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypePage: 1 trigger classes","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for ingrTypeGrid: 3 props","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypeGrid: 2 trigger classes","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for ingrTypeForm: 2 props","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypeForm: 3 trigger classes","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[database-genPageConfig.js] Expanding grid ingrTypeGrid with 1 columns into component tree","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[database-genPageConfig.js] Expanding form ingrTypeForm with 4 fields into component tree","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageConfig.json to /home/paul/wf-monorepo-new/apps/studio/src/preview/whatsfresh/ingrTypePage/pageConfig.json","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageMermaid.mmd to /home/paul/wf-monorepo-new/apps/studio/src/preview/whatsfresh/ingrTypePage/pageMermaid.mmd","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[database-genPageConfig.js] Saved index.jsx to /home/paul/wf-monorepo-new/apps/studio/src/preview/whatsfresh/ingrTypePage/index.jsx","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview-routes.js with 5 routes","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview routes manifest","timestamp":"2025-10-03 11:04:32"}
{"level":"info","message":"[genPageConfigController.js] PageConfig generated successfully for pageID: 57","timestamp":"2025-10-03 11:04:32"}
{"level":"info","message":"[app.js]  Response: POST /api/genPageConfig 200 (750ms)","timestamp":"2025-10-03 11:04:32"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":749.586121,"method":"POST","operation":"http_request","path":"/api/genPageConfig","status":200},"timestamp":"2025-10-03 11:04:32"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 11:04:32"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":250.023317,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 11:04:32"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 11:04:32"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 11:04:32"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (283ms)","timestamp":"2025-10-03 11:04:32"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 11:04:32"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 11:04:32"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 11:04:32"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 16","timestamp":"2025-10-03 11:04:33"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":236.638215,"method":"GET","operation":"database_query","rowCount":16,"success":true},"timestamp":"2025-10-03 11:04:33"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 11:04:33"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 11:04:33"}
{"level":"info","message":"[getEventTypes.js] Fetched 16 eventTypes","timestamp":"2025-10-03 11:04:33"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (249ms)","timestamp":"2025-10-03 11:04:33"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 11:04:34"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 11:04:34"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 11:04:34"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 11:04:34"}
{"body":{"paramNames":{"0":"ingrTypeID","1":"ingrID","2":"ingrBtchID"}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/clearVals","timestamp":"2025-10-03 11:04:34"}
{"level":"http","message":"[clearVals.js] POST /api/clearVals","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":73.137078,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":65.490658,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":79.167983,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":81.747998,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":247.176972,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":152.145147,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":78.147301,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":183.398745,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":153.058057,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":166.602521,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":183.626657,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":159.921816,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (639ms)","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":638.54859,"method":"POST","operation":"http_request","path":"/api/clearVals","status":200},"timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":158.153908,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (664ms)","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":663.86607,"method":"POST","operation":"http_request","path":"/api/clearVals","status":200},"timestamp":"2025-10-03 11:04:34"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 11:04:34"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 11:04:34"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 11:04:34"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":205.289007,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Executing POST query: ********","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Handling POST-specific logic","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":69.371168,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":78.159991,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":79.538695,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":79.702977,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 11:04:34"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 11:04:34"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":152.283967,"method":"POST","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 11:04:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 11:04:35"}
{"level":"debug","message":"[clearVals.js] Cleared 3 values for pc7900@gmail.com","timestamp":"2025-10-03 11:04:35"}
{"level":"info","message":"[app.js]  Response: POST /api/clearVals 200 (874ms)","timestamp":"2025-10-03 11:04:35"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":873.6235,"method":"POST","operation":"http_request","path":"/api/clearVals","status":200},"timestamp":"2025-10-03 11:04:35"}
{"body":{"eventSQLId":"ingrTypeList","params":{}},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-10-03 11:04:35"}
{"level":"http","message":"[execEventType.js] POST /api/execEventType","timestamp":"2025-10-03 11:04:35"}
{"level":"debug","message":"[execEventType.js] Fetching eventSQL by qryName: ingrTypeList","timestamp":"2025-10-03 11:04:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 11:04:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 11:04:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 11:04:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":70.409285,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 11:04:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 11:04:35"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 11:04:35"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (225ms)","timestamp":"2025-10-03 11:04:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 11:04:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":71.147558,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 11:04:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 11:04:35"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 11:04:35"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (245ms)","timestamp":"2025-10-03 11:04:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 11:04:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":73.560437,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 11:04:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 11:04:35"}
{"level":"debug","message":"[execEventType.js] Found eventSQL: ingrTypeList (ID: 11)","timestamp":"2025-10-03 11:04:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 11:04:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 11:04:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 1","timestamp":"2025-10-03 11:04:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":42.090365,"method":"GET","operation":"database_query","rowCount":1,"success":true},"timestamp":"2025-10-03 11:04:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 11:04:35"}
{"level":"debug","message":"[execEventType.js] Resolved :acctID → 1","timestamp":"2025-10-03 11:04:35"}
{"level":"debug","message":"[execEventType.js] Executing SQL: select id, name, account_id\r\nfrom whatsfresh.ingredient_types\r\nwhere account_id = 1","timestamp":"2025-10-03 11:04:35"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 11:04:35"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 11:04:35"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 7","timestamp":"2025-10-03 11:04:35"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.454165,"method":"GET","operation":"database_query","rowCount":7,"success":true},"timestamp":"2025-10-03 11:04:35"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 11:04:35"}
{"level":"info","message":"[execEventType.js] EventSQL executed successfully: ingrTypeList (ID: 11)","timestamp":"2025-10-03 11:04:35"}
{"level":"info","message":"[app.js]  Response: POST /api/execEventType 200 (157ms)","timestamp":"2025-10-03 11:04:35"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-03 11:15:52"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-03 12:15:52"}
{"body":{"pageID":57},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/genPageConfig","timestamp":"2025-10-03 13:06:58"}
{"level":"http","message":"[genPageConfigController.js] POST /api/genPageConfig","timestamp":"2025-10-03 13:06:58"}
{"level":"debug","message":"[genPageConfigController.js] Generating pageConfig for pageID: 57","timestamp":"2025-10-03 13:06:58"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 57","timestamp":"2025-10-03 13:06:58"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 13:06:58"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 13:06:58"}
{"body":{"pageID":57},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/genPageConfig","timestamp":"2025-10-03 13:06:58"}
{"level":"http","message":"[genPageConfigController.js] POST /api/genPageConfig","timestamp":"2025-10-03 13:06:58"}
{"level":"debug","message":"[genPageConfigController.js] Generating pageConfig for pageID: 57","timestamp":"2025-10-03 13:06:58"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 57","timestamp":"2025-10-03 13:06:58"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 13:06:58"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 13:06:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":48.150948,"errorCode":"ER_VIEW_INVALID","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-10-03 13:06:58"}
{"code":"ER_VIEW_INVALID","errno":1356,"level":"error","message":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sql":"CALL api_wf.sp_hier_structure(57)","sqlMessage":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sqlState":"HY000","stack":"Error: View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 13:06:58"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-10-03 13:06:58"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 13:06:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 13:06:58"}
{"code":"ER_VIEW_INVALID","errno":1356,"level":"error","message":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sql":"CALL api_wf.sp_hier_structure(57)","sqlMessage":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sqlState":"HY000","stack":"Error: View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 13:06:58"}
{"code":"ER_VIEW_INVALID","errno":1356,"level":"error","message":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sql":"CALL api_wf.sp_hier_structure(57)","sqlMessage":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sqlState":"HY000","stack":"Error: View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 13:06:58"}
{"level":"info","message":"[app.js]  Response: POST /api/genPageConfig 500 (58ms)","timestamp":"2025-10-03 13:06:58"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":58.257187,"method":"POST","operation":"http_request","path":"/api/genPageConfig","status":500},"timestamp":"2025-10-03 13:06:58"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":77.630978,"errorCode":"ER_VIEW_INVALID","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-10-03 13:06:58"}
{"code":"ER_VIEW_INVALID","errno":1356,"level":"error","message":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sql":"CALL api_wf.sp_hier_structure(57)","sqlMessage":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sqlState":"HY000","stack":"Error: View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 13:06:58"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-10-03 13:06:58"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 13:06:58"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 13:06:58"}
{"code":"ER_VIEW_INVALID","errno":1356,"level":"error","message":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sql":"CALL api_wf.sp_hier_structure(57)","sqlMessage":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sqlState":"HY000","stack":"Error: View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 13:06:58"}
{"code":"ER_VIEW_INVALID","errno":1356,"level":"error","message":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sql":"CALL api_wf.sp_hier_structure(57)","sqlMessage":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sqlState":"HY000","stack":"Error: View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 13:06:58"}
{"level":"info","message":"[app.js]  Response: POST /api/genPageConfig 500 (87ms)","timestamp":"2025-10-03 13:06:58"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":87.464112,"method":"POST","operation":"http_request","path":"/api/genPageConfig","status":500},"timestamp":"2025-10-03 13:06:58"}
{"body":{"pageID":57},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/genPageConfig","timestamp":"2025-10-03 13:07:04"}
{"level":"http","message":"[genPageConfigController.js] POST /api/genPageConfig","timestamp":"2025-10-03 13:07:04"}
{"level":"debug","message":"[genPageConfigController.js] Generating pageConfig for pageID: 57","timestamp":"2025-10-03 13:07:04"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 57","timestamp":"2025-10-03 13:07:04"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 13:07:04"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 13:07:04"}
{"body":{"pageID":57},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/genPageConfig","timestamp":"2025-10-03 13:07:04"}
{"level":"http","message":"[genPageConfigController.js] POST /api/genPageConfig","timestamp":"2025-10-03 13:07:04"}
{"level":"debug","message":"[genPageConfigController.js] Generating pageConfig for pageID: 57","timestamp":"2025-10-03 13:07:04"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 57","timestamp":"2025-10-03 13:07:04"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 13:07:04"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 13:07:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":146.49033,"errorCode":"ER_VIEW_INVALID","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-10-03 13:07:04"}
{"code":"ER_VIEW_INVALID","errno":1356,"level":"error","message":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sql":"CALL api_wf.sp_hier_structure(57)","sqlMessage":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sqlState":"HY000","stack":"Error: View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 13:07:04"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-10-03 13:07:04"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 13:07:04"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 13:07:04"}
{"code":"ER_VIEW_INVALID","errno":1356,"level":"error","message":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sql":"CALL api_wf.sp_hier_structure(57)","sqlMessage":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sqlState":"HY000","stack":"Error: View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 13:07:04"}
{"code":"ER_VIEW_INVALID","errno":1356,"level":"error","message":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sql":"CALL api_wf.sp_hier_structure(57)","sqlMessage":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sqlState":"HY000","stack":"Error: View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 13:07:04"}
{"level":"info","message":"[app.js]  Response: POST /api/genPageConfig 500 (154ms)","timestamp":"2025-10-03 13:07:04"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":154.019591,"method":"POST","operation":"http_request","path":"/api/genPageConfig","status":500},"timestamp":"2025-10-03 13:07:04"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":138.666911,"errorCode":"ER_VIEW_INVALID","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-10-03 13:07:04"}
{"code":"ER_VIEW_INVALID","errno":1356,"level":"error","message":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sql":"CALL api_wf.sp_hier_structure(57)","sqlMessage":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sqlState":"HY000","stack":"Error: View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 13:07:04"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-10-03 13:07:04"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 13:07:04"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 13:07:04"}
{"code":"ER_VIEW_INVALID","errno":1356,"level":"error","message":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sql":"CALL api_wf.sp_hier_structure(57)","sqlMessage":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sqlState":"HY000","stack":"Error: View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 13:07:04"}
{"code":"ER_VIEW_INVALID","errno":1356,"level":"error","message":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sql":"CALL api_wf.sp_hier_structure(57)","sqlMessage":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sqlState":"HY000","stack":"Error: View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 13:07:04"}
{"level":"info","message":"[app.js]  Response: POST /api/genPageConfig 500 (154ms)","timestamp":"2025-10-03 13:07:04"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":154.362498,"method":"POST","operation":"http_request","path":"/api/genPageConfig","status":500},"timestamp":"2025-10-03 13:07:04"}
{"body":{"pageID":57},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/genPageConfig","timestamp":"2025-10-03 13:07:24"}
{"level":"http","message":"[genPageConfigController.js] POST /api/genPageConfig","timestamp":"2025-10-03 13:07:24"}
{"level":"debug","message":"[genPageConfigController.js] Generating pageConfig for pageID: 57","timestamp":"2025-10-03 13:07:24"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 57","timestamp":"2025-10-03 13:07:24"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 13:07:24"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 13:07:24"}
{"body":{"pageID":57},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/genPageConfig","timestamp":"2025-10-03 13:07:24"}
{"level":"http","message":"[genPageConfigController.js] POST /api/genPageConfig","timestamp":"2025-10-03 13:07:24"}
{"level":"debug","message":"[genPageConfigController.js] Generating pageConfig for pageID: 57","timestamp":"2025-10-03 13:07:24"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 57","timestamp":"2025-10-03 13:07:24"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 13:07:24"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 13:07:24"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":35.55849,"errorCode":"ER_VIEW_INVALID","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-10-03 13:07:25"}
{"code":"ER_VIEW_INVALID","errno":1356,"level":"error","message":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sql":"CALL api_wf.sp_hier_structure(57)","sqlMessage":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sqlState":"HY000","stack":"Error: View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 13:07:25"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-10-03 13:07:25"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 13:07:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 13:07:25"}
{"code":"ER_VIEW_INVALID","errno":1356,"level":"error","message":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sql":"CALL api_wf.sp_hier_structure(57)","sqlMessage":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sqlState":"HY000","stack":"Error: View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 13:07:25"}
{"code":"ER_VIEW_INVALID","errno":1356,"level":"error","message":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sql":"CALL api_wf.sp_hier_structure(57)","sqlMessage":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sqlState":"HY000","stack":"Error: View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 13:07:25"}
{"level":"info","message":"[app.js]  Response: POST /api/genPageConfig 500 (40ms)","timestamp":"2025-10-03 13:07:25"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":39.979478,"method":"POST","operation":"http_request","path":"/api/genPageConfig","status":500},"timestamp":"2025-10-03 13:07:25"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":36.612377,"errorCode":"ER_VIEW_INVALID","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-10-03 13:07:25"}
{"code":"ER_VIEW_INVALID","errno":1356,"level":"error","message":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sql":"CALL api_wf.sp_hier_structure(57)","sqlMessage":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sqlState":"HY000","stack":"Error: View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 13:07:25"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-10-03 13:07:25"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 13:07:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 13:07:25"}
{"code":"ER_VIEW_INVALID","errno":1356,"level":"error","message":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sql":"CALL api_wf.sp_hier_structure(57)","sqlMessage":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sqlState":"HY000","stack":"Error: View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 13:07:25"}
{"code":"ER_VIEW_INVALID","errno":1356,"level":"error","message":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sql":"CALL api_wf.sp_hier_structure(57)","sqlMessage":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sqlState":"HY000","stack":"Error: View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 13:07:25"}
{"level":"info","message":"[app.js]  Response: POST /api/genPageConfig 500 (43ms)","timestamp":"2025-10-03 13:07:25"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":43.294463,"method":"POST","operation":"http_request","path":"/api/genPageConfig","status":500},"timestamp":"2025-10-03 13:07:25"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 13:08:01"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 13:08:01"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 13:08:01"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 13:08:01"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 13:08:01"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 17","timestamp":"2025-10-03 13:08:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":419.894318,"method":"GET","operation":"database_query","rowCount":17,"success":true},"timestamp":"2025-10-03 13:08:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 13:08:02"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 13:08:02"}
{"level":"info","message":"[getEventTypes.js] Fetched 17 eventTypes","timestamp":"2025-10-03 13:08:02"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 200 (422ms)","timestamp":"2025-10-03 13:08:02"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 13:08:02"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 13:08:02"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 13:08:02"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 13:08:02"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 13:08:02"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 17","timestamp":"2025-10-03 13:08:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":144.712266,"method":"GET","operation":"database_query","rowCount":17,"success":true},"timestamp":"2025-10-03 13:08:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 13:08:02"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 13:08:02"}
{"level":"info","message":"[getEventTypes.js] Fetched 17 eventTypes","timestamp":"2025-10-03 13:08:02"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (148ms)","timestamp":"2025-10-03 13:08:02"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-03 13:30:52"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-03 14:30:52"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 14:53:41"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 14:53:41"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 14:53:41"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 14:53:41"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 14:53:41"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 17","timestamp":"2025-10-03 14:53:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":128.752066,"method":"GET","operation":"database_query","rowCount":17,"success":true},"timestamp":"2025-10-03 14:53:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 14:53:42"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 14:53:42"}
{"level":"info","message":"[getEventTypes.js] Fetched 17 eventTypes","timestamp":"2025-10-03 14:53:42"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (132ms)","timestamp":"2025-10-03 14:53:42"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 14:53:42"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 14:53:42"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 14:53:42"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 14:53:42"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 14:53:42"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 17","timestamp":"2025-10-03 14:53:42"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":201.323241,"method":"GET","operation":"database_query","rowCount":17,"success":true},"timestamp":"2025-10-03 14:53:42"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 14:53:42"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 14:53:42"}
{"level":"info","message":"[getEventTypes.js] Fetched 17 eventTypes","timestamp":"2025-10-03 14:53:42"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (206ms)","timestamp":"2025-10-03 14:53:42"}
{"body":{"pageID":57},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/genPageConfig","timestamp":"2025-10-03 14:54:07"}
{"level":"http","message":"[genPageConfigController.js] POST /api/genPageConfig","timestamp":"2025-10-03 14:54:07"}
{"level":"debug","message":"[genPageConfigController.js] Generating pageConfig for pageID: 57","timestamp":"2025-10-03 14:54:07"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 57","timestamp":"2025-10-03 14:54:07"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 14:54:07"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 14:54:07"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":50.068388,"errorCode":"ER_VIEW_INVALID","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-10-03 14:54:07"}
{"code":"ER_VIEW_INVALID","errno":1356,"level":"error","message":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sql":"CALL api_wf.sp_hier_structure(57)","sqlMessage":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sqlState":"HY000","stack":"Error: View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 14:54:07"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-10-03 14:54:07"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 14:54:07"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 14:54:07"}
{"code":"ER_VIEW_INVALID","errno":1356,"level":"error","message":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sql":"CALL api_wf.sp_hier_structure(57)","sqlMessage":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sqlState":"HY000","stack":"Error: View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 14:54:07"}
{"code":"ER_VIEW_INVALID","errno":1356,"level":"error","message":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sql":"CALL api_wf.sp_hier_structure(57)","sqlMessage":"View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them","sqlState":"HY000","stack":"Error: View 'api_wf.vw_eventProp' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 14:54:07"}
{"level":"info","message":"[app.js]  Response: POST /api/genPageConfig 500 (56ms)","timestamp":"2025-10-03 14:54:07"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":55.69315,"method":"POST","operation":"http_request","path":"/api/genPageConfig","status":500},"timestamp":"2025-10-03 14:54:07"}
{"body":{"pageID":57},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/genPageConfig","timestamp":"2025-10-03 15:12:17"}
{"level":"http","message":"[genPageConfigController.js] POST /api/genPageConfig","timestamp":"2025-10-03 15:12:17"}
{"level":"debug","message":"[genPageConfigController.js] Generating pageConfig for pageID: 57","timestamp":"2025-10-03 15:12:17"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 57","timestamp":"2025-10-03 15:12:17"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 15:12:17"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 15:12:17"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":89.104455,"errorCode":"ER_BAD_FIELD_ERROR","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-10-03 15:12:17"}
{"code":"ER_BAD_FIELD_ERROR","errno":1054,"level":"error","message":"Unknown column 'a.id' in 'field list'","sql":"CALL api_wf.sp_hier_structure(57)","sqlMessage":"Unknown column 'a.id' in 'field list'","sqlState":"42S22","stack":"Error: Unknown column 'a.id' in 'field list'\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 15:12:17"}
{"level":"error","message":"[dbUtils.js] Query: ********","timestamp":"2025-10-03 15:12:17"}
{"level":"error","message":"[dbUtils.js] Stack trace: Error\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:92:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 15:12:17"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 15:12:17"}
{"code":"ER_BAD_FIELD_ERROR","errno":1054,"level":"error","message":"Unknown column 'a.id' in 'field list'","sql":"CALL api_wf.sp_hier_structure(57)","sqlMessage":"Unknown column 'a.id' in 'field list'","sqlState":"42S22","stack":"Error: Unknown column 'a.id' in 'field list'\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 15:12:17"}
{"code":"ER_BAD_FIELD_ERROR","errno":1054,"level":"error","message":"Unknown column 'a.id' in 'field list'","sql":"CALL api_wf.sp_hier_structure(57)","sqlMessage":"Unknown column 'a.id' in 'field list'","sqlState":"42S22","stack":"Error: Unknown column 'a.id' in 'field list'\n    at PromisePoolConnection.execute (/home/paul/wf-monorepo-new/node_modules/mysql2/promise.js:111:22)\n    at executeQuery (file:///home/paul/wf-monorepo-new/apps/server/server/utils/dbUtils.js:61:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:388:29)\n    at async genPageConfigController (file:///home/paul/wf-monorepo-new/apps/server/server/controller/genPageConfigController.js:29:20)","timestamp":"2025-10-03 15:12:17"}
{"level":"info","message":"[app.js]  Response: POST /api/genPageConfig 500 (98ms)","timestamp":"2025-10-03 15:12:17"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":97.517072,"method":"POST","operation":"http_request","path":"/api/genPageConfig","status":500},"timestamp":"2025-10-03 15:12:17"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-10-03 15:31:53"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-10-03 15:31:53"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-10-03 15:31:53"}
{"level":"debug","message":"[index.js]  Initializing routes","timestamp":"2025-10-03 15:31:53"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-10-03 15:31:53"}
{"0":"POST /api/execEventType","1":"GET /api/eventType/:xrefId","10":"POST /api/clearVals","11":"GET /api/studio/genPageConfig","12":"POST /api/genPageConfig","13":"POST /api/initialize","14":"GET /api/util/list-routes","15":"POST /api/util/restart-server","16":"POST /api/auth/login","2":"GET /api/eventTypes","3":"GET /api/triggers","4":"POST /api/execDML","5":"POST /api/execCreateDoc","6":"GET /api/getDoc","7":"POST /api/studio/genFields","8":"GET /api/getVal","9":"POST /api/setVals","level":"info","message":"[registerRoutes.js] Routes registered:","timestamp":"2025-10-03 15:31:53"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-10-03 15:31:53"}
{"level":"debug","message":"[index.js]  Routes initialized","timestamp":"2025-10-03 15:31:53"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-10-03 15:31:53"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-10-03 15:31:53"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-10-03 15:31:53"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-10-03 15:31:53"}
{"body":{"pageID":57},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/genPageConfig","timestamp":"2025-10-03 15:33:54"}
{"level":"http","message":"[genPageConfigController.js] POST /api/genPageConfig","timestamp":"2025-10-03 15:33:54"}
{"level":"debug","message":"[genPageConfigController.js] Generating pageConfig for pageID: 57","timestamp":"2025-10-03 15:33:54"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 57","timestamp":"2025-10-03 15:33:54"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 15:33:54"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 15:33:54"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-03 15:33:55"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":418.939434,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 15:33:55"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 15:33:55"}
{"level":"debug","message":"[database-genPageConfig.js] Loaded 5 components from database","timestamp":"2025-10-03 15:33:55"}
{"level":"debug","message":"[database-genPageConfig.js] Processing 5 components from database","timestamp":"2025-10-03 15:33:55"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for whatsfresh: 3 props","timestamp":"2025-10-03 15:33:55"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypePage: 1 trigger classes","timestamp":"2025-10-03 15:33:55"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for ingrTypeGrid: 3 props","timestamp":"2025-10-03 15:33:55"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypeGrid: 2 trigger classes","timestamp":"2025-10-03 15:33:55"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for ingrTypeForm: 2 props","timestamp":"2025-10-03 15:33:55"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for ingrTypeForm: 3 trigger classes","timestamp":"2025-10-03 15:33:55"}
{"level":"debug","message":"[database-genPageConfig.js] Expanding grid ingrTypeGrid with 1 columns into component tree","timestamp":"2025-10-03 15:33:55"}
{"level":"debug","message":"[database-genPageConfig.js] Expanding form ingrTypeForm with 4 fields into component tree","timestamp":"2025-10-03 15:33:55"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageConfig.json to /home/paul/wf-monorepo-new/apps/studio/src/preview/whatsfresh/ingrTypePage/pageConfig.json","timestamp":"2025-10-03 15:33:55"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageMermaid.mmd to /home/paul/wf-monorepo-new/apps/studio/src/preview/whatsfresh/ingrTypePage/pageMermaid.mmd","timestamp":"2025-10-03 15:33:55"}
{"level":"debug","message":"[database-genPageConfig.js] Saved index.jsx to /home/paul/wf-monorepo-new/apps/studio/src/preview/whatsfresh/ingrTypePage/index.jsx","timestamp":"2025-10-03 15:33:55"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview-routes.js with 5 routes","timestamp":"2025-10-03 15:33:55"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview routes manifest","timestamp":"2025-10-03 15:33:55"}
{"level":"info","message":"[genPageConfigController.js] PageConfig generated successfully for pageID: 57","timestamp":"2025-10-03 15:33:55"}
{"level":"info","message":"[app.js]  Response: POST /api/genPageConfig 200 (464ms)","timestamp":"2025-10-03 15:33:55"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-03 15:46:53"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 16:53:08"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 16:53:08"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 16:53:08"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 16:53:08"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 16:53:08"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 17","timestamp":"2025-10-03 16:53:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":232.409304,"method":"GET","operation":"database_query","rowCount":17,"success":true},"timestamp":"2025-10-03 16:53:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 16:53:08"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 16:53:08"}
{"level":"info","message":"[getEventTypes.js] Fetched 17 eventTypes","timestamp":"2025-10-03 16:53:08"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (239ms)","timestamp":"2025-10-03 16:53:08"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 16:53:08"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 16:53:08"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 16:53:08"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 16:53:08"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 16:53:08"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 17","timestamp":"2025-10-03 16:53:08"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":89.374627,"method":"GET","operation":"database_query","rowCount":17,"success":true},"timestamp":"2025-10-03 16:53:08"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 16:53:08"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 16:53:08"}
{"level":"info","message":"[getEventTypes.js] Fetched 17 eventTypes","timestamp":"2025-10-03 16:53:08"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (92ms)","timestamp":"2025-10-03 16:53:08"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 16:53:15"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 16:53:15"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 16:53:15"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 16:53:15"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 16:53:15"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 17","timestamp":"2025-10-03 16:53:15"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":214.770952,"method":"GET","operation":"database_query","rowCount":17,"success":true},"timestamp":"2025-10-03 16:53:15"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 16:53:15"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 16:53:15"}
{"level":"info","message":"[getEventTypes.js] Fetched 17 eventTypes","timestamp":"2025-10-03 16:53:15"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (221ms)","timestamp":"2025-10-03 16:53:15"}
{"level":"http","message":"[app.js]  Request","method":"GET","path":"/api/eventTypes","timestamp":"2025-10-03 16:53:15"}
{"level":"http","message":"[getEventTypes.js] GET /api/eventTypes","timestamp":"2025-10-03 16:53:15"}
{"level":"debug","message":"[getEventTypes.js] Fetching all active eventTypes","timestamp":"2025-10-03 16:53:15"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 16:53:15"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 16:53:15"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 17","timestamp":"2025-10-03 16:53:15"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":64.201155,"method":"GET","operation":"database_query","rowCount":17,"success":true},"timestamp":"2025-10-03 16:53:15"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 16:53:15"}
{"level":"warn","message":"[getEventTypes.js] Invalid JSON in style for Modal: Bad control character in string literal in JSON at position 300 (line 12 column 21)","timestamp":"2025-10-03 16:53:15"}
{"level":"info","message":"[getEventTypes.js] Fetched 17 eventTypes","timestamp":"2025-10-03 16:53:15"}
{"level":"info","message":"[app.js]  Response: GET /api/eventTypes 304 (78ms)","timestamp":"2025-10-03 16:53:15"}
{"level":"debug","message":"[dbManager.js] Database connected: health check passed","timestamp":"2025-10-03 17:01:53"}
{"body":{"pageID":23},"contentType":"application/json","level":"http","message":"[app.js]  Request","method":"POST","path":"/api/genPageConfig","timestamp":"2025-10-03 17:24:54"}
{"level":"http","message":"[genPageConfigController.js] POST /api/genPageConfig","timestamp":"2025-10-03 17:24:54"}
{"level":"debug","message":"[genPageConfigController.js] Generating pageConfig for pageID: 23","timestamp":"2025-10-03 17:24:54"}
{"level":"debug","message":"[database-genPageConfig.js] Generating pageConfig for page xref ID: 23","timestamp":"2025-10-03 17:24:54"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: ********","timestamp":"2025-10-03 17:24:54"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-10-03 17:24:54"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 2","timestamp":"2025-10-03 17:24:54"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":133.507646,"method":"GET","operation":"database_query","rowCount":2,"success":true},"timestamp":"2025-10-03 17:24:54"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-10-03 17:24:54"}
{"level":"debug","message":"[database-genPageConfig.js] Loaded 11 components from database","timestamp":"2025-10-03 17:24:54"}
{"level":"debug","message":"[database-genPageConfig.js] Processing 11 components from database","timestamp":"2025-10-03 17:24:54"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for studio: 3 props","timestamp":"2025-10-03 17:24:54"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for studioPage: 1 trigger classes","timestamp":"2025-10-03 17:24:54"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for pagePreview: 1 trigger classes","timestamp":"2025-10-03 17:24:54"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for selectApp: 2 trigger classes","timestamp":"2025-10-03 17:24:54"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for selectPage: 2 trigger classes","timestamp":"2025-10-03 17:24:54"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed workflowTriggers for previewPage: 1 trigger classes","timestamp":"2025-10-03 17:24:54"}
{"level":"debug","message":"[database-genPageConfig.js] Parsed enhancedProps for previewFrame: 4 props","timestamp":"2025-10-03 17:24:54"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioSidebar: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:146:8)\n    at file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:177:11\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-10-03 17:24:54"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for selectApp: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:146:8)\n    at file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:177:11\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:146:8)\n    at file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:177:11\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:146:8)","timestamp":"2025-10-03 17:24:54"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioComponent: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:146:8)\n    at file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:177:11\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-10-03 17:24:54"}
{"level":"error","message":"[database-genPageConfig.js] Error parsing override_styles for studioWorkArea: \"[object Object]\" is not valid JSON","stack":"SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:169:35\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:146:8)\n    at file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:177:11\n    at Array.map (<anonymous>)\n    at buildChildren (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:146:8)\n    at buildPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:368:17)\n    at genPageConfig (file:///home/paul/wf-monorepo-new/apps/server/server/utils/pageConfig/index.js:398:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-10-03 17:24:54"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageConfig.json to /home/paul/wf-monorepo-new/apps/studio/src/preview/monorepo/studio/pageConfig.json","timestamp":"2025-10-03 17:24:54"}
{"level":"debug","message":"[database-genPageConfig.js] Saved pageMermaid.mmd to /home/paul/wf-monorepo-new/apps/studio/src/preview/monorepo/studio/pageMermaid.mmd","timestamp":"2025-10-03 17:24:54"}
{"level":"debug","message":"[database-genPageConfig.js] Saved index.jsx to /home/paul/wf-monorepo-new/apps/studio/src/preview/monorepo/studio/index.jsx","timestamp":"2025-10-03 17:24:54"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview-routes.js with 6 routes","timestamp":"2025-10-03 17:24:54"}
{"level":"debug","message":"[database-genPageConfig.js] Updated preview routes manifest","timestamp":"2025-10-03 17:24:54"}
{"level":"info","message":"[genPageConfigController.js] PageConfig generated successfully for pageID: 23","timestamp":"2025-10-03 17:24:54"}
{"level":"info","message":"[app.js]  Response: POST /api/genPageConfig 200 (177ms)","timestamp":"2025-10-03 17:24:54"}
