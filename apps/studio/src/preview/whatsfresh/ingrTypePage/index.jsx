import React, { useState, useEffect } from "react";
import DirectRenderer from '../../../rendering/DirectRenderer';
import pageConfig from "./pageConfig.json";

const DEV_MODE = true; // Set to false in production
const PAGE_ID = 57; // ingrTypePage xref ID

/**
 * IngrTypePage - Database-generated page
 * Auto-generated by genPageConfig from database eventTypes
 */
const IngrTypePage = () => {
  const [config, setConfig] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const loadConfig = async () => {
      if (DEV_MODE) {
        // Dev mode: Generate fresh config from database
        try {
          console.log('üîÑ Dev mode: Generating fresh pageConfig from database...');
          const response = await fetch('http://localhost:3001/api/genPageConfig', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ pageID: PAGE_ID })
          });
          const data = await response.json();
          console.log('‚úÖ Fresh pageConfig loaded from database');
          setConfig(data.pageConfig);
        } catch (error) {
          console.error('‚ùå Failed to generate pageConfig, falling back to static:', error);
          setConfig(pageConfig);
        }
      } else {
        // Production: Use static file
        setConfig(pageConfig);
      }
      setLoading(false);
    };

    loadConfig();
  }, []);

  if (loading) {
    return (
      <div style={{
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
        height: "100vh",
        fontSize: "18px",
        color: "#666"
      }}>
        Loading IngrTypePage...
      </div>
    );
  }

  return <DirectRenderer config={config} />;
};

export default IngrTypePage;
